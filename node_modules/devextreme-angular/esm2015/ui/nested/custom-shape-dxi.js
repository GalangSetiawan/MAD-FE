/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import * as tslib_1 from "tslib";
/* tslint:disable:max-line-length */
import { Component, NgModule, Host, ElementRef, Renderer2, Inject, AfterViewInit, SkipSelf, Input, ContentChildren, forwardRef, QueryList } from '@angular/core';
import { DOCUMENT } from '@angular/common';
import { NestedOptionHost, extractTemplate, DxTemplateDirective, IDxTemplateHost, DxTemplateHost } from 'devextreme-angular/core';
import { CollectionNestedOption } from 'devextreme-angular/core';
import { DxiConnectionPointComponent } from './connection-point-dxi';
let DxiCustomShapeComponent = class DxiCustomShapeComponent extends CollectionNestedOption {
    constructor(parentOptionHost, optionHost, renderer, document, templateHost, element) {
        super();
        this.renderer = renderer;
        this.document = document;
        this.element = element;
        parentOptionHost.setNestedOption(this);
        optionHost.setHost(this, this._fullOptionPath.bind(this));
        templateHost.setHost(this);
    }
    get allowEditImage() {
        return this._getOption('allowEditImage');
    }
    set allowEditImage(value) {
        this._setOption('allowEditImage', value);
    }
    get allowEditText() {
        return this._getOption('allowEditText');
    }
    set allowEditText(value) {
        this._setOption('allowEditText', value);
    }
    get allowResize() {
        return this._getOption('allowResize');
    }
    set allowResize(value) {
        this._setOption('allowResize', value);
    }
    get backgroundImageHeight() {
        return this._getOption('backgroundImageHeight');
    }
    set backgroundImageHeight(value) {
        this._setOption('backgroundImageHeight', value);
    }
    get backgroundImageLeft() {
        return this._getOption('backgroundImageLeft');
    }
    set backgroundImageLeft(value) {
        this._setOption('backgroundImageLeft', value);
    }
    get backgroundImageToolboxUrl() {
        return this._getOption('backgroundImageToolboxUrl');
    }
    set backgroundImageToolboxUrl(value) {
        this._setOption('backgroundImageToolboxUrl', value);
    }
    get backgroundImageTop() {
        return this._getOption('backgroundImageTop');
    }
    set backgroundImageTop(value) {
        this._setOption('backgroundImageTop', value);
    }
    get backgroundImageUrl() {
        return this._getOption('backgroundImageUrl');
    }
    set backgroundImageUrl(value) {
        this._setOption('backgroundImageUrl', value);
    }
    get backgroundImageWidth() {
        return this._getOption('backgroundImageWidth');
    }
    set backgroundImageWidth(value) {
        this._setOption('backgroundImageWidth', value);
    }
    get baseType() {
        return this._getOption('baseType');
    }
    set baseType(value) {
        this._setOption('baseType', value);
    }
    get category() {
        return this._getOption('category');
    }
    set category(value) {
        this._setOption('category', value);
    }
    get connectionPoints() {
        return this._getOption('connectionPoints');
    }
    set connectionPoints(value) {
        this._setOption('connectionPoints', value);
    }
    get defaultHeight() {
        return this._getOption('defaultHeight');
    }
    set defaultHeight(value) {
        this._setOption('defaultHeight', value);
    }
    get defaultImageUrl() {
        return this._getOption('defaultImageUrl');
    }
    set defaultImageUrl(value) {
        this._setOption('defaultImageUrl', value);
    }
    get defaultText() {
        return this._getOption('defaultText');
    }
    set defaultText(value) {
        this._setOption('defaultText', value);
    }
    get defaultWidth() {
        return this._getOption('defaultWidth');
    }
    set defaultWidth(value) {
        this._setOption('defaultWidth', value);
    }
    get imageHeight() {
        return this._getOption('imageHeight');
    }
    set imageHeight(value) {
        this._setOption('imageHeight', value);
    }
    get imageLeft() {
        return this._getOption('imageLeft');
    }
    set imageLeft(value) {
        this._setOption('imageLeft', value);
    }
    get imageTop() {
        return this._getOption('imageTop');
    }
    set imageTop(value) {
        this._setOption('imageTop', value);
    }
    get imageWidth() {
        return this._getOption('imageWidth');
    }
    set imageWidth(value) {
        this._setOption('imageWidth', value);
    }
    get maxHeight() {
        return this._getOption('maxHeight');
    }
    set maxHeight(value) {
        this._setOption('maxHeight', value);
    }
    get maxWidth() {
        return this._getOption('maxWidth');
    }
    set maxWidth(value) {
        this._setOption('maxWidth', value);
    }
    get minHeight() {
        return this._getOption('minHeight');
    }
    set minHeight(value) {
        this._setOption('minHeight', value);
    }
    get minWidth() {
        return this._getOption('minWidth');
    }
    set minWidth(value) {
        this._setOption('minWidth', value);
    }
    get template() {
        return this._getOption('template');
    }
    set template(value) {
        this._setOption('template', value);
    }
    get templateHeight() {
        return this._getOption('templateHeight');
    }
    set templateHeight(value) {
        this._setOption('templateHeight', value);
    }
    get templateLeft() {
        return this._getOption('templateLeft');
    }
    set templateLeft(value) {
        this._setOption('templateLeft', value);
    }
    get templateTop() {
        return this._getOption('templateTop');
    }
    set templateTop(value) {
        this._setOption('templateTop', value);
    }
    get templateWidth() {
        return this._getOption('templateWidth');
    }
    set templateWidth(value) {
        this._setOption('templateWidth', value);
    }
    get textHeight() {
        return this._getOption('textHeight');
    }
    set textHeight(value) {
        this._setOption('textHeight', value);
    }
    get textLeft() {
        return this._getOption('textLeft');
    }
    set textLeft(value) {
        this._setOption('textLeft', value);
    }
    get textTop() {
        return this._getOption('textTop');
    }
    set textTop(value) {
        this._setOption('textTop', value);
    }
    get textWidth() {
        return this._getOption('textWidth');
    }
    set textWidth(value) {
        this._setOption('textWidth', value);
    }
    get title() {
        return this._getOption('title');
    }
    set title(value) {
        this._setOption('title', value);
    }
    get type() {
        return this._getOption('type');
    }
    set type(value) {
        this._setOption('type', value);
    }
    get _optionPath() {
        return 'customShapes';
    }
    get connectionPointsChildren() {
        return this._getOption('connectionPoints');
    }
    set connectionPointsChildren(value) {
        this.setChildren('connectionPoints', value);
    }
    setTemplate(template) {
        this.template = template;
    }
    ngAfterViewInit() {
        extractTemplate(this, this.element, this.renderer, this.document);
    }
};
DxiCustomShapeComponent.ctorParameters = () => [
    { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
    { type: NestedOptionHost, decorators: [{ type: Host }] },
    { type: Renderer2 },
    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },
    { type: DxTemplateHost, decorators: [{ type: Host }] },
    { type: ElementRef }
];
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [Boolean])
], DxiCustomShapeComponent.prototype, "allowEditImage", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [Boolean])
], DxiCustomShapeComponent.prototype, "allowEditText", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [Boolean])
], DxiCustomShapeComponent.prototype, "allowResize", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Number),
    tslib_1.__metadata("design:paramtypes", [Number])
], DxiCustomShapeComponent.prototype, "backgroundImageHeight", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Number),
    tslib_1.__metadata("design:paramtypes", [Number])
], DxiCustomShapeComponent.prototype, "backgroundImageLeft", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String),
    tslib_1.__metadata("design:paramtypes", [String])
], DxiCustomShapeComponent.prototype, "backgroundImageToolboxUrl", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Number),
    tslib_1.__metadata("design:paramtypes", [Number])
], DxiCustomShapeComponent.prototype, "backgroundImageTop", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String),
    tslib_1.__metadata("design:paramtypes", [String])
], DxiCustomShapeComponent.prototype, "backgroundImageUrl", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Number),
    tslib_1.__metadata("design:paramtypes", [Number])
], DxiCustomShapeComponent.prototype, "backgroundImageWidth", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String),
    tslib_1.__metadata("design:paramtypes", [String])
], DxiCustomShapeComponent.prototype, "baseType", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String),
    tslib_1.__metadata("design:paramtypes", [String])
], DxiCustomShapeComponent.prototype, "category", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Array),
    tslib_1.__metadata("design:paramtypes", [Array])
], DxiCustomShapeComponent.prototype, "connectionPoints", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Number),
    tslib_1.__metadata("design:paramtypes", [Number])
], DxiCustomShapeComponent.prototype, "defaultHeight", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String),
    tslib_1.__metadata("design:paramtypes", [String])
], DxiCustomShapeComponent.prototype, "defaultImageUrl", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String),
    tslib_1.__metadata("design:paramtypes", [String])
], DxiCustomShapeComponent.prototype, "defaultText", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Number),
    tslib_1.__metadata("design:paramtypes", [Number])
], DxiCustomShapeComponent.prototype, "defaultWidth", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Number),
    tslib_1.__metadata("design:paramtypes", [Number])
], DxiCustomShapeComponent.prototype, "imageHeight", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Number),
    tslib_1.__metadata("design:paramtypes", [Number])
], DxiCustomShapeComponent.prototype, "imageLeft", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Number),
    tslib_1.__metadata("design:paramtypes", [Number])
], DxiCustomShapeComponent.prototype, "imageTop", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Number),
    tslib_1.__metadata("design:paramtypes", [Number])
], DxiCustomShapeComponent.prototype, "imageWidth", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Number),
    tslib_1.__metadata("design:paramtypes", [Number])
], DxiCustomShapeComponent.prototype, "maxHeight", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Number),
    tslib_1.__metadata("design:paramtypes", [Number])
], DxiCustomShapeComponent.prototype, "maxWidth", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Number),
    tslib_1.__metadata("design:paramtypes", [Number])
], DxiCustomShapeComponent.prototype, "minHeight", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Number),
    tslib_1.__metadata("design:paramtypes", [Number])
], DxiCustomShapeComponent.prototype, "minWidth", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxiCustomShapeComponent.prototype, "template", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Number),
    tslib_1.__metadata("design:paramtypes", [Number])
], DxiCustomShapeComponent.prototype, "templateHeight", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Number),
    tslib_1.__metadata("design:paramtypes", [Number])
], DxiCustomShapeComponent.prototype, "templateLeft", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Number),
    tslib_1.__metadata("design:paramtypes", [Number])
], DxiCustomShapeComponent.prototype, "templateTop", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Number),
    tslib_1.__metadata("design:paramtypes", [Number])
], DxiCustomShapeComponent.prototype, "templateWidth", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Number),
    tslib_1.__metadata("design:paramtypes", [Number])
], DxiCustomShapeComponent.prototype, "textHeight", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Number),
    tslib_1.__metadata("design:paramtypes", [Number])
], DxiCustomShapeComponent.prototype, "textLeft", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Number),
    tslib_1.__metadata("design:paramtypes", [Number])
], DxiCustomShapeComponent.prototype, "textTop", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Number),
    tslib_1.__metadata("design:paramtypes", [Number])
], DxiCustomShapeComponent.prototype, "textWidth", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String),
    tslib_1.__metadata("design:paramtypes", [String])
], DxiCustomShapeComponent.prototype, "title", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String),
    tslib_1.__metadata("design:paramtypes", [String])
], DxiCustomShapeComponent.prototype, "type", null);
tslib_1.__decorate([
    ContentChildren(forwardRef(() => DxiConnectionPointComponent)),
    tslib_1.__metadata("design:type", QueryList),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxiCustomShapeComponent.prototype, "connectionPointsChildren", null);
DxiCustomShapeComponent = tslib_1.__decorate([
    Component({
        selector: 'dxi-custom-shape',
        template: '<ng-content></ng-content>',
        providers: [NestedOptionHost, DxTemplateHost],
        styles: [':host { display: block; }']
    }),
    tslib_1.__param(0, SkipSelf()), tslib_1.__param(0, Host()),
    tslib_1.__param(1, Host()),
    tslib_1.__param(3, Inject(DOCUMENT)),
    tslib_1.__param(4, Host()),
    tslib_1.__metadata("design:paramtypes", [NestedOptionHost,
        NestedOptionHost,
        Renderer2, Object, DxTemplateHost,
        ElementRef])
], DxiCustomShapeComponent);
export { DxiCustomShapeComponent };
let DxiCustomShapeModule = class DxiCustomShapeModule {
};
DxiCustomShapeModule = tslib_1.__decorate([
    NgModule({
        declarations: [
            DxiCustomShapeComponent
        ],
        exports: [
            DxiCustomShapeComponent
        ],
    })
], DxiCustomShapeModule);
export { DxiCustomShapeModule };
//# sourceMappingURL=data:application/json;base64,