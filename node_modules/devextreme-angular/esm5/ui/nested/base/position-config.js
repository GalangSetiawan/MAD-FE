/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import * as tslib_1 from "tslib";
/* tslint:disable:max-line-length */
import { NestedOption } from 'devextreme-angular/core';
var DxoPositionConfig = /** @class */ (function (_super) {
    tslib_1.__extends(DxoPositionConfig, _super);
    function DxoPositionConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DxoPositionConfig.prototype, "at", {
        get: function () {
            return this._getOption('at');
        },
        set: function (value) {
            this._setOption('at', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPositionConfig.prototype, "boundary", {
        get: function () {
            return this._getOption('boundary');
        },
        set: function (value) {
            this._setOption('boundary', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPositionConfig.prototype, "boundaryOffset", {
        get: function () {
            return this._getOption('boundaryOffset');
        },
        set: function (value) {
            this._setOption('boundaryOffset', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPositionConfig.prototype, "collision", {
        get: function () {
            return this._getOption('collision');
        },
        set: function (value) {
            this._setOption('collision', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPositionConfig.prototype, "my", {
        get: function () {
            return this._getOption('my');
        },
        set: function (value) {
            this._setOption('my', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPositionConfig.prototype, "of", {
        get: function () {
            return this._getOption('of');
        },
        set: function (value) {
            this._setOption('of', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPositionConfig.prototype, "offset", {
        get: function () {
            return this._getOption('offset');
        },
        set: function (value) {
            this._setOption('offset', value);
        },
        enumerable: true,
        configurable: true
    });
    return DxoPositionConfig;
}(NestedOption));
export { DxoPositionConfig };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9zaXRpb24tY29uZmlnLmpzIiwic291cmNlUm9vdCI6Im5nOi8vZGV2ZXh0cmVtZS1hbmd1bGFyL3VpL25lc3RlZC8iLCJzb3VyY2VzIjpbImJhc2UvcG9zaXRpb24tY29uZmlnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7OztHQVdHOztBQUVILG9DQUFvQztBQUVwQyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFHdkQ7SUFBZ0QsNkNBQVk7SUFBNUQ7O0lBaURBLENBQUM7SUFoREcsc0JBQUksaUNBQUU7YUFBTjtZQUNJLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNqQyxDQUFDO2FBQ0QsVUFBTyxLQUEwQztZQUM3QyxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztRQUNqQyxDQUFDOzs7T0FIQTtJQUtELHNCQUFJLHVDQUFRO2FBQVo7WUFDSSxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDdkMsQ0FBQzthQUNELFVBQWEsS0FBeUM7WUFDbEQsSUFBSSxDQUFDLFVBQVUsQ0FBQyxVQUFVLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDdkMsQ0FBQzs7O09BSEE7SUFLRCxzQkFBSSw2Q0FBYzthQUFsQjtZQUNJLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1FBQzdDLENBQUM7YUFDRCxVQUFtQixLQUEwQztZQUN6RCxJQUFJLENBQUMsVUFBVSxDQUFDLGdCQUFnQixFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQzdDLENBQUM7OztPQUhBO0lBS0Qsc0JBQUksd0NBQVM7YUFBYjtZQUNJLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUN4QyxDQUFDO2FBQ0QsVUFBYyxLQUEwQztZQUNwRCxJQUFJLENBQUMsVUFBVSxDQUFDLFdBQVcsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUN4QyxDQUFDOzs7T0FIQTtJQUtELHNCQUFJLGlDQUFFO2FBQU47WUFDSSxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDakMsQ0FBQzthQUNELFVBQU8sS0FBMEM7WUFDN0MsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDakMsQ0FBQzs7O09BSEE7SUFLRCxzQkFBSSxpQ0FBRTthQUFOO1lBQ0ksT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2pDLENBQUM7YUFDRCxVQUFPLEtBQXlDO1lBQzVDLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQ2pDLENBQUM7OztPQUhBO0lBS0Qsc0JBQUkscUNBQU07YUFBVjtZQUNJLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNyQyxDQUFDO2FBQ0QsVUFBVyxLQUEwQztZQUNqRCxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUNyQyxDQUFDOzs7T0FIQTtJQUlMLHdCQUFDO0FBQUQsQ0FBQyxBQWpERCxDQUFnRCxZQUFZLEdBaUQzRCIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogZGV2ZXh0cmVtZS1hbmd1bGFyXG4gKiBWZXJzaW9uOiAyMC4xLjZcbiAqIEJ1aWxkIGRhdGU6IEZyaSBKdWwgMTcgMjAyMFxuICpcbiAqIENvcHlyaWdodCAoYykgMjAxMiAtIDIwMjAgRGV2ZWxvcGVyIEV4cHJlc3MgSW5jLiBBTEwgUklHSFRTIFJFU0VSVkVEXG4gKlxuICogVGhpcyBzb2Z0d2FyZSBtYXkgYmUgbW9kaWZpZWQgYW5kIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSB0ZXJtc1xuICogb2YgdGhlIE1JVCBsaWNlbnNlLiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBvZiB0aGUgcHJvamVjdCBmb3IgZGV0YWlscy5cbiAqXG4gKiBodHRwczovL2dpdGh1Yi5jb20vRGV2RXhwcmVzcy9kZXZleHRyZW1lLWFuZ3VsYXJcbiAqL1xuXG4vKiB0c2xpbnQ6ZGlzYWJsZTptYXgtbGluZS1sZW5ndGggKi9cclxuXHJcbmltcG9ydCB7IE5lc3RlZE9wdGlvbiB9IGZyb20gJ2RldmV4dHJlbWUtYW5ndWxhci9jb3JlJztcclxuXHJcblxyXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgRHhvUG9zaXRpb25Db25maWcgZXh0ZW5kcyBOZXN0ZWRPcHRpb24ge1xyXG4gICAgZ2V0IGF0KCk6IHN0cmluZyB8IHsgeD86IHN0cmluZywgeT86IHN0cmluZyB9IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZ2V0T3B0aW9uKCdhdCcpO1xyXG4gICAgfVxyXG4gICAgc2V0IGF0KHZhbHVlOiBzdHJpbmcgfCB7IHg/OiBzdHJpbmcsIHk/OiBzdHJpbmcgfSkge1xyXG4gICAgICAgIHRoaXMuX3NldE9wdGlvbignYXQnLCB2YWx1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IGJvdW5kYXJ5KCk6IEVsZW1lbnQgfCBKUXVlcnkgfCBzdHJpbmcgfCBXaW5kb3cge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9nZXRPcHRpb24oJ2JvdW5kYXJ5Jyk7XHJcbiAgICB9XHJcbiAgICBzZXQgYm91bmRhcnkodmFsdWU6IEVsZW1lbnQgfCBKUXVlcnkgfCBzdHJpbmcgfCBXaW5kb3cpIHtcclxuICAgICAgICB0aGlzLl9zZXRPcHRpb24oJ2JvdW5kYXJ5JywgdmFsdWUpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBib3VuZGFyeU9mZnNldCgpOiBzdHJpbmcgfCB7IHg/OiBudW1iZXIsIHk/OiBudW1iZXIgfSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2dldE9wdGlvbignYm91bmRhcnlPZmZzZXQnKTtcclxuICAgIH1cclxuICAgIHNldCBib3VuZGFyeU9mZnNldCh2YWx1ZTogc3RyaW5nIHwgeyB4PzogbnVtYmVyLCB5PzogbnVtYmVyIH0pIHtcclxuICAgICAgICB0aGlzLl9zZXRPcHRpb24oJ2JvdW5kYXJ5T2Zmc2V0JywgdmFsdWUpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBjb2xsaXNpb24oKTogc3RyaW5nIHwgeyB4Pzogc3RyaW5nLCB5Pzogc3RyaW5nIH0ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9nZXRPcHRpb24oJ2NvbGxpc2lvbicpO1xyXG4gICAgfVxyXG4gICAgc2V0IGNvbGxpc2lvbih2YWx1ZTogc3RyaW5nIHwgeyB4Pzogc3RyaW5nLCB5Pzogc3RyaW5nIH0pIHtcclxuICAgICAgICB0aGlzLl9zZXRPcHRpb24oJ2NvbGxpc2lvbicsIHZhbHVlKTtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgbXkoKTogc3RyaW5nIHwgeyB4Pzogc3RyaW5nLCB5Pzogc3RyaW5nIH0ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9nZXRPcHRpb24oJ215Jyk7XHJcbiAgICB9XHJcbiAgICBzZXQgbXkodmFsdWU6IHN0cmluZyB8IHsgeD86IHN0cmluZywgeT86IHN0cmluZyB9KSB7XHJcbiAgICAgICAgdGhpcy5fc2V0T3B0aW9uKCdteScsIHZhbHVlKTtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgb2YoKTogRWxlbWVudCB8IEpRdWVyeSB8IHN0cmluZyB8IFdpbmRvdyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2dldE9wdGlvbignb2YnKTtcclxuICAgIH1cclxuICAgIHNldCBvZih2YWx1ZTogRWxlbWVudCB8IEpRdWVyeSB8IHN0cmluZyB8IFdpbmRvdykge1xyXG4gICAgICAgIHRoaXMuX3NldE9wdGlvbignb2YnLCB2YWx1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IG9mZnNldCgpOiBzdHJpbmcgfCB7IHg/OiBudW1iZXIsIHk/OiBudW1iZXIgfSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2dldE9wdGlvbignb2Zmc2V0Jyk7XHJcbiAgICB9XHJcbiAgICBzZXQgb2Zmc2V0KHZhbHVlOiBzdHJpbmcgfCB7IHg/OiBudW1iZXIsIHk/OiBudW1iZXIgfSkge1xyXG4gICAgICAgIHRoaXMuX3NldE9wdGlvbignb2Zmc2V0JywgdmFsdWUpO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==