import { __extends, __decorate, __metadata, __param } from 'tslib';
import { SkipSelf, Host, Input, Component, NgModule, Output, EventEmitter, ContentChildren, forwardRef, QueryList, Renderer2, Inject, ElementRef } from '@angular/core';
import { NestedOptionHost, NestedOption, CollectionNestedOption, extractTemplate, DxTemplateHost } from 'devextreme-angular/core';
import { DOCUMENT } from '@angular/common';
import 'devextreme/bundles/dx.all';

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoAdapterComponent = /** @class */ (function (_super) {
    __extends(DxoAdapterComponent, _super);
    function DxoAdapterComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoAdapterComponent.prototype, "applyValidationResults", {
        get: function () {
            return this._getOption('applyValidationResults');
        },
        set: function (value) {
            this._setOption('applyValidationResults', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAdapterComponent.prototype, "bypass", {
        get: function () {
            return this._getOption('bypass');
        },
        set: function (value) {
            this._setOption('bypass', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAdapterComponent.prototype, "focus", {
        get: function () {
            return this._getOption('focus');
        },
        set: function (value) {
            this._setOption('focus', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAdapterComponent.prototype, "getValue", {
        get: function () {
            return this._getOption('getValue');
        },
        set: function (value) {
            this._setOption('getValue', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAdapterComponent.prototype, "reset", {
        get: function () {
            return this._getOption('reset');
        },
        set: function (value) {
            this._setOption('reset', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAdapterComponent.prototype, "validationRequestsCallbacks", {
        get: function () {
            return this._getOption('validationRequestsCallbacks');
        },
        set: function (value) {
            this._setOption('validationRequestsCallbacks', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAdapterComponent.prototype, "_optionPath", {
        get: function () {
            return 'adapter';
        },
        enumerable: true,
        configurable: true
    });
    DxoAdapterComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoAdapterComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoAdapterComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxoAdapterComponent.prototype, "applyValidationResults", null);
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxoAdapterComponent.prototype, "bypass", null);
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxoAdapterComponent.prototype, "focus", null);
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxoAdapterComponent.prototype, "getValue", null);
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxoAdapterComponent.prototype, "reset", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoAdapterComponent.prototype, "validationRequestsCallbacks", null);
    DxoAdapterComponent = __decorate([
        Component({
            selector: 'dxo-adapter',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoAdapterComponent);
    return DxoAdapterComponent;
}(NestedOption));
var DxoAdapterModule = /** @class */ (function () {
    function DxoAdapterModule() {
    }
    DxoAdapterModule = __decorate([
        NgModule({
            declarations: [
                DxoAdapterComponent
            ],
            exports: [
                DxoAdapterComponent
            ],
        })
    ], DxoAdapterModule);
    return DxoAdapterModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoAdaptiveLayoutComponent = /** @class */ (function (_super) {
    __extends(DxoAdaptiveLayoutComponent, _super);
    function DxoAdaptiveLayoutComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoAdaptiveLayoutComponent.prototype, "height", {
        get: function () {
            return this._getOption('height');
        },
        set: function (value) {
            this._setOption('height', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAdaptiveLayoutComponent.prototype, "keepLabels", {
        get: function () {
            return this._getOption('keepLabels');
        },
        set: function (value) {
            this._setOption('keepLabels', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAdaptiveLayoutComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAdaptiveLayoutComponent.prototype, "_optionPath", {
        get: function () {
            return 'adaptiveLayout';
        },
        enumerable: true,
        configurable: true
    });
    DxoAdaptiveLayoutComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoAdaptiveLayoutComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoAdaptiveLayoutComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoAdaptiveLayoutComponent.prototype, "height", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoAdaptiveLayoutComponent.prototype, "keepLabels", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoAdaptiveLayoutComponent.prototype, "width", null);
    DxoAdaptiveLayoutComponent = __decorate([
        Component({
            selector: 'dxo-adaptive-layout',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoAdaptiveLayoutComponent);
    return DxoAdaptiveLayoutComponent;
}(NestedOption));
var DxoAdaptiveLayoutModule = /** @class */ (function () {
    function DxoAdaptiveLayoutModule() {
    }
    DxoAdaptiveLayoutModule = __decorate([
        NgModule({
            declarations: [
                DxoAdaptiveLayoutComponent
            ],
            exports: [
                DxoAdaptiveLayoutComponent
            ],
        })
    ], DxoAdaptiveLayoutModule);
    return DxoAdaptiveLayoutModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoAggregationIntervalComponent = /** @class */ (function (_super) {
    __extends(DxoAggregationIntervalComponent, _super);
    function DxoAggregationIntervalComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoAggregationIntervalComponent.prototype, "days", {
        get: function () {
            return this._getOption('days');
        },
        set: function (value) {
            this._setOption('days', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAggregationIntervalComponent.prototype, "hours", {
        get: function () {
            return this._getOption('hours');
        },
        set: function (value) {
            this._setOption('hours', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAggregationIntervalComponent.prototype, "milliseconds", {
        get: function () {
            return this._getOption('milliseconds');
        },
        set: function (value) {
            this._setOption('milliseconds', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAggregationIntervalComponent.prototype, "minutes", {
        get: function () {
            return this._getOption('minutes');
        },
        set: function (value) {
            this._setOption('minutes', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAggregationIntervalComponent.prototype, "months", {
        get: function () {
            return this._getOption('months');
        },
        set: function (value) {
            this._setOption('months', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAggregationIntervalComponent.prototype, "quarters", {
        get: function () {
            return this._getOption('quarters');
        },
        set: function (value) {
            this._setOption('quarters', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAggregationIntervalComponent.prototype, "seconds", {
        get: function () {
            return this._getOption('seconds');
        },
        set: function (value) {
            this._setOption('seconds', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAggregationIntervalComponent.prototype, "weeks", {
        get: function () {
            return this._getOption('weeks');
        },
        set: function (value) {
            this._setOption('weeks', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAggregationIntervalComponent.prototype, "years", {
        get: function () {
            return this._getOption('years');
        },
        set: function (value) {
            this._setOption('years', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAggregationIntervalComponent.prototype, "_optionPath", {
        get: function () {
            return 'aggregationInterval';
        },
        enumerable: true,
        configurable: true
    });
    DxoAggregationIntervalComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoAggregationIntervalComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoAggregationIntervalComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoAggregationIntervalComponent.prototype, "days", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoAggregationIntervalComponent.prototype, "hours", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoAggregationIntervalComponent.prototype, "milliseconds", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoAggregationIntervalComponent.prototype, "minutes", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoAggregationIntervalComponent.prototype, "months", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoAggregationIntervalComponent.prototype, "quarters", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoAggregationIntervalComponent.prototype, "seconds", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoAggregationIntervalComponent.prototype, "weeks", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoAggregationIntervalComponent.prototype, "years", null);
    DxoAggregationIntervalComponent = __decorate([
        Component({
            selector: 'dxo-aggregation-interval',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoAggregationIntervalComponent);
    return DxoAggregationIntervalComponent;
}(NestedOption));
var DxoAggregationIntervalModule = /** @class */ (function () {
    function DxoAggregationIntervalModule() {
    }
    DxoAggregationIntervalModule = __decorate([
        NgModule({
            declarations: [
                DxoAggregationIntervalComponent
            ],
            exports: [
                DxoAggregationIntervalComponent
            ],
        })
    ], DxoAggregationIntervalModule);
    return DxoAggregationIntervalModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoAggregationComponent = /** @class */ (function (_super) {
    __extends(DxoAggregationComponent, _super);
    function DxoAggregationComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoAggregationComponent.prototype, "calculate", {
        get: function () {
            return this._getOption('calculate');
        },
        set: function (value) {
            this._setOption('calculate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAggregationComponent.prototype, "enabled", {
        get: function () {
            return this._getOption('enabled');
        },
        set: function (value) {
            this._setOption('enabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAggregationComponent.prototype, "method", {
        get: function () {
            return this._getOption('method');
        },
        set: function (value) {
            this._setOption('method', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAggregationComponent.prototype, "_optionPath", {
        get: function () {
            return 'aggregation';
        },
        enumerable: true,
        configurable: true
    });
    DxoAggregationComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoAggregationComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoAggregationComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxoAggregationComponent.prototype, "calculate", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoAggregationComponent.prototype, "enabled", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoAggregationComponent.prototype, "method", null);
    DxoAggregationComponent = __decorate([
        Component({
            selector: 'dxo-aggregation',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoAggregationComponent);
    return DxoAggregationComponent;
}(NestedOption));
var DxoAggregationModule = /** @class */ (function () {
    function DxoAggregationModule() {
    }
    DxoAggregationModule = __decorate([
        NgModule({
            declarations: [
                DxoAggregationComponent
            ],
            exports: [
                DxoAggregationComponent
            ],
        })
    ], DxoAggregationModule);
    return DxoAggregationModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoAnimationConfig = /** @class */ (function (_super) {
    __extends(DxoAnimationConfig, _super);
    function DxoAnimationConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DxoAnimationConfig.prototype, "hide", {
        get: function () {
            return this._getOption('hide');
        },
        set: function (value) {
            this._setOption('hide', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAnimationConfig.prototype, "show", {
        get: function () {
            return this._getOption('show');
        },
        set: function (value) {
            this._setOption('show', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAnimationConfig.prototype, "duration", {
        get: function () {
            return this._getOption('duration');
        },
        set: function (value) {
            this._setOption('duration', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAnimationConfig.prototype, "easing", {
        get: function () {
            return this._getOption('easing');
        },
        set: function (value) {
            this._setOption('easing', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAnimationConfig.prototype, "enabled", {
        get: function () {
            return this._getOption('enabled');
        },
        set: function (value) {
            this._setOption('enabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAnimationConfig.prototype, "maxPointCountSupported", {
        get: function () {
            return this._getOption('maxPointCountSupported');
        },
        set: function (value) {
            this._setOption('maxPointCountSupported', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAnimationConfig.prototype, "complete", {
        get: function () {
            return this._getOption('complete');
        },
        set: function (value) {
            this._setOption('complete', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAnimationConfig.prototype, "delay", {
        get: function () {
            return this._getOption('delay');
        },
        set: function (value) {
            this._setOption('delay', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAnimationConfig.prototype, "direction", {
        get: function () {
            return this._getOption('direction');
        },
        set: function (value) {
            this._setOption('direction', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAnimationConfig.prototype, "from", {
        get: function () {
            return this._getOption('from');
        },
        set: function (value) {
            this._setOption('from', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAnimationConfig.prototype, "staggerDelay", {
        get: function () {
            return this._getOption('staggerDelay');
        },
        set: function (value) {
            this._setOption('staggerDelay', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAnimationConfig.prototype, "start", {
        get: function () {
            return this._getOption('start');
        },
        set: function (value) {
            this._setOption('start', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAnimationConfig.prototype, "to", {
        get: function () {
            return this._getOption('to');
        },
        set: function (value) {
            this._setOption('to', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAnimationConfig.prototype, "type", {
        get: function () {
            return this._getOption('type');
        },
        set: function (value) {
            this._setOption('type', value);
        },
        enumerable: true,
        configurable: true
    });
    return DxoAnimationConfig;
}(NestedOption));

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoAnimationComponent = /** @class */ (function (_super) {
    __extends(DxoAnimationComponent, _super);
    function DxoAnimationComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoAnimationComponent.prototype, "_optionPath", {
        get: function () {
            return 'animation';
        },
        enumerable: true,
        configurable: true
    });
    DxoAnimationComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoAnimationComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoAnimationComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoAnimationComponent = __decorate([
        Component({
            selector: 'dxo-animation',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'hide',
                'show',
                'duration',
                'easing',
                'enabled',
                'maxPointCountSupported',
                'complete',
                'delay',
                'direction',
                'from',
                'staggerDelay',
                'start',
                'to',
                'type'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoAnimationComponent);
    return DxoAnimationComponent;
}(DxoAnimationConfig));
var DxoAnimationModule = /** @class */ (function () {
    function DxoAnimationModule() {
    }
    DxoAnimationModule = __decorate([
        NgModule({
            declarations: [
                DxoAnimationComponent
            ],
            exports: [
                DxoAnimationComponent
            ],
        })
    ], DxoAnimationModule);
    return DxoAnimationModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiChartAnnotationConfig = /** @class */ (function (_super) {
    __extends(DxiChartAnnotationConfig, _super);
    function DxiChartAnnotationConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DxiChartAnnotationConfig.prototype, "allowDragging", {
        get: function () {
            return this._getOption('allowDragging');
        },
        set: function (value) {
            this._setOption('allowDragging', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartAnnotationConfig.prototype, "argument", {
        get: function () {
            return this._getOption('argument');
        },
        set: function (value) {
            this._setOption('argument', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartAnnotationConfig.prototype, "arrowLength", {
        get: function () {
            return this._getOption('arrowLength');
        },
        set: function (value) {
            this._setOption('arrowLength', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartAnnotationConfig.prototype, "arrowWidth", {
        get: function () {
            return this._getOption('arrowWidth');
        },
        set: function (value) {
            this._setOption('arrowWidth', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartAnnotationConfig.prototype, "axis", {
        get: function () {
            return this._getOption('axis');
        },
        set: function (value) {
            this._setOption('axis', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartAnnotationConfig.prototype, "border", {
        get: function () {
            return this._getOption('border');
        },
        set: function (value) {
            this._setOption('border', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartAnnotationConfig.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartAnnotationConfig.prototype, "customizeTooltip", {
        get: function () {
            return this._getOption('customizeTooltip');
        },
        set: function (value) {
            this._setOption('customizeTooltip', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartAnnotationConfig.prototype, "data", {
        get: function () {
            return this._getOption('data');
        },
        set: function (value) {
            this._setOption('data', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartAnnotationConfig.prototype, "description", {
        get: function () {
            return this._getOption('description');
        },
        set: function (value) {
            this._setOption('description', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartAnnotationConfig.prototype, "font", {
        get: function () {
            return this._getOption('font');
        },
        set: function (value) {
            this._setOption('font', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartAnnotationConfig.prototype, "height", {
        get: function () {
            return this._getOption('height');
        },
        set: function (value) {
            this._setOption('height', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartAnnotationConfig.prototype, "image", {
        get: function () {
            return this._getOption('image');
        },
        set: function (value) {
            this._setOption('image', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartAnnotationConfig.prototype, "name", {
        get: function () {
            return this._getOption('name');
        },
        set: function (value) {
            this._setOption('name', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartAnnotationConfig.prototype, "offsetX", {
        get: function () {
            return this._getOption('offsetX');
        },
        set: function (value) {
            this._setOption('offsetX', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartAnnotationConfig.prototype, "offsetY", {
        get: function () {
            return this._getOption('offsetY');
        },
        set: function (value) {
            this._setOption('offsetY', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartAnnotationConfig.prototype, "opacity", {
        get: function () {
            return this._getOption('opacity');
        },
        set: function (value) {
            this._setOption('opacity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartAnnotationConfig.prototype, "paddingLeftRight", {
        get: function () {
            return this._getOption('paddingLeftRight');
        },
        set: function (value) {
            this._setOption('paddingLeftRight', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartAnnotationConfig.prototype, "paddingTopBottom", {
        get: function () {
            return this._getOption('paddingTopBottom');
        },
        set: function (value) {
            this._setOption('paddingTopBottom', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartAnnotationConfig.prototype, "series", {
        get: function () {
            return this._getOption('series');
        },
        set: function (value) {
            this._setOption('series', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartAnnotationConfig.prototype, "shadow", {
        get: function () {
            return this._getOption('shadow');
        },
        set: function (value) {
            this._setOption('shadow', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartAnnotationConfig.prototype, "template", {
        get: function () {
            return this._getOption('template');
        },
        set: function (value) {
            this._setOption('template', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartAnnotationConfig.prototype, "text", {
        get: function () {
            return this._getOption('text');
        },
        set: function (value) {
            this._setOption('text', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartAnnotationConfig.prototype, "textOverflow", {
        get: function () {
            return this._getOption('textOverflow');
        },
        set: function (value) {
            this._setOption('textOverflow', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartAnnotationConfig.prototype, "tooltipEnabled", {
        get: function () {
            return this._getOption('tooltipEnabled');
        },
        set: function (value) {
            this._setOption('tooltipEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartAnnotationConfig.prototype, "tooltipTemplate", {
        get: function () {
            return this._getOption('tooltipTemplate');
        },
        set: function (value) {
            this._setOption('tooltipTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartAnnotationConfig.prototype, "type", {
        get: function () {
            return this._getOption('type');
        },
        set: function (value) {
            this._setOption('type', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartAnnotationConfig.prototype, "value", {
        get: function () {
            return this._getOption('value');
        },
        set: function (value) {
            this._setOption('value', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartAnnotationConfig.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartAnnotationConfig.prototype, "wordWrap", {
        get: function () {
            return this._getOption('wordWrap');
        },
        set: function (value) {
            this._setOption('wordWrap', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartAnnotationConfig.prototype, "x", {
        get: function () {
            return this._getOption('x');
        },
        set: function (value) {
            this._setOption('x', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartAnnotationConfig.prototype, "y", {
        get: function () {
            return this._getOption('y');
        },
        set: function (value) {
            this._setOption('y', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartAnnotationConfig.prototype, "angle", {
        get: function () {
            return this._getOption('angle');
        },
        set: function (value) {
            this._setOption('angle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartAnnotationConfig.prototype, "radius", {
        get: function () {
            return this._getOption('radius');
        },
        set: function (value) {
            this._setOption('radius', value);
        },
        enumerable: true,
        configurable: true
    });
    return DxiChartAnnotationConfig;
}(CollectionNestedOption));

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiAnnotationComponent = /** @class */ (function (_super) {
    __extends(DxiAnnotationComponent, _super);
    function DxiAnnotationComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiAnnotationComponent.prototype, "_optionPath", {
        get: function () {
            return 'annotations';
        },
        enumerable: true,
        configurable: true
    });
    DxiAnnotationComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxiAnnotationComponent = __decorate([
        Component({
            selector: 'dxi-annotation',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'allowDragging',
                'argument',
                'arrowLength',
                'arrowWidth',
                'axis',
                'border',
                'color',
                'customizeTooltip',
                'data',
                'description',
                'font',
                'height',
                'image',
                'name',
                'offsetX',
                'offsetY',
                'opacity',
                'paddingLeftRight',
                'paddingTopBottom',
                'series',
                'shadow',
                'template',
                'text',
                'textOverflow',
                'tooltipEnabled',
                'tooltipTemplate',
                'type',
                'value',
                'width',
                'wordWrap',
                'x',
                'y',
                'angle',
                'radius'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiAnnotationComponent);
    return DxiAnnotationComponent;
}(DxiChartAnnotationConfig));
var DxiAnnotationModule = /** @class */ (function () {
    function DxiAnnotationModule() {
    }
    DxiAnnotationModule = __decorate([
        NgModule({
            declarations: [
                DxiAnnotationComponent
            ],
            exports: [
                DxiAnnotationComponent
            ],
        })
    ], DxiAnnotationModule);
    return DxiAnnotationModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoAppointmentDraggingComponent = /** @class */ (function (_super) {
    __extends(DxoAppointmentDraggingComponent, _super);
    function DxoAppointmentDraggingComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoAppointmentDraggingComponent.prototype, "autoScroll", {
        get: function () {
            return this._getOption('autoScroll');
        },
        set: function (value) {
            this._setOption('autoScroll', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAppointmentDraggingComponent.prototype, "data", {
        get: function () {
            return this._getOption('data');
        },
        set: function (value) {
            this._setOption('data', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAppointmentDraggingComponent.prototype, "group", {
        get: function () {
            return this._getOption('group');
        },
        set: function (value) {
            this._setOption('group', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAppointmentDraggingComponent.prototype, "onAdd", {
        get: function () {
            return this._getOption('onAdd');
        },
        set: function (value) {
            this._setOption('onAdd', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAppointmentDraggingComponent.prototype, "onDragEnd", {
        get: function () {
            return this._getOption('onDragEnd');
        },
        set: function (value) {
            this._setOption('onDragEnd', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAppointmentDraggingComponent.prototype, "onDragMove", {
        get: function () {
            return this._getOption('onDragMove');
        },
        set: function (value) {
            this._setOption('onDragMove', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAppointmentDraggingComponent.prototype, "onDragStart", {
        get: function () {
            return this._getOption('onDragStart');
        },
        set: function (value) {
            this._setOption('onDragStart', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAppointmentDraggingComponent.prototype, "onRemove", {
        get: function () {
            return this._getOption('onRemove');
        },
        set: function (value) {
            this._setOption('onRemove', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAppointmentDraggingComponent.prototype, "scrollSensitivity", {
        get: function () {
            return this._getOption('scrollSensitivity');
        },
        set: function (value) {
            this._setOption('scrollSensitivity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAppointmentDraggingComponent.prototype, "scrollSpeed", {
        get: function () {
            return this._getOption('scrollSpeed');
        },
        set: function (value) {
            this._setOption('scrollSpeed', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAppointmentDraggingComponent.prototype, "_optionPath", {
        get: function () {
            return 'appointmentDragging';
        },
        enumerable: true,
        configurable: true
    });
    DxoAppointmentDraggingComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoAppointmentDraggingComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoAppointmentDraggingComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoAppointmentDraggingComponent.prototype, "autoScroll", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoAppointmentDraggingComponent.prototype, "data", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoAppointmentDraggingComponent.prototype, "group", null);
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxoAppointmentDraggingComponent.prototype, "onAdd", null);
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxoAppointmentDraggingComponent.prototype, "onDragEnd", null);
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxoAppointmentDraggingComponent.prototype, "onDragMove", null);
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxoAppointmentDraggingComponent.prototype, "onDragStart", null);
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxoAppointmentDraggingComponent.prototype, "onRemove", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoAppointmentDraggingComponent.prototype, "scrollSensitivity", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoAppointmentDraggingComponent.prototype, "scrollSpeed", null);
    DxoAppointmentDraggingComponent = __decorate([
        Component({
            selector: 'dxo-appointment-dragging',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoAppointmentDraggingComponent);
    return DxoAppointmentDraggingComponent;
}(NestedOption));
var DxoAppointmentDraggingModule = /** @class */ (function () {
    function DxoAppointmentDraggingModule() {
    }
    DxoAppointmentDraggingModule = __decorate([
        NgModule({
            declarations: [
                DxoAppointmentDraggingComponent
            ],
            exports: [
                DxoAppointmentDraggingComponent
            ],
        })
    ], DxoAppointmentDraggingModule);
    return DxoAppointmentDraggingModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoChartCommonSeriesSettings = /** @class */ (function (_super) {
    __extends(DxoChartCommonSeriesSettings, _super);
    function DxoChartCommonSeriesSettings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "aggregation", {
        get: function () {
            return this._getOption('aggregation');
        },
        set: function (value) {
            this._setOption('aggregation', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "area", {
        get: function () {
            return this._getOption('area');
        },
        set: function (value) {
            this._setOption('area', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "argumentField", {
        get: function () {
            return this._getOption('argumentField');
        },
        set: function (value) {
            this._setOption('argumentField', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "axis", {
        get: function () {
            return this._getOption('axis');
        },
        set: function (value) {
            this._setOption('axis', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "bar", {
        get: function () {
            return this._getOption('bar');
        },
        set: function (value) {
            this._setOption('bar', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "barOverlapGroup", {
        get: function () {
            return this._getOption('barOverlapGroup');
        },
        set: function (value) {
            this._setOption('barOverlapGroup', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "barPadding", {
        get: function () {
            return this._getOption('barPadding');
        },
        set: function (value) {
            this._setOption('barPadding', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "barWidth", {
        get: function () {
            return this._getOption('barWidth');
        },
        set: function (value) {
            this._setOption('barWidth', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "border", {
        get: function () {
            return this._getOption('border');
        },
        set: function (value) {
            this._setOption('border', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "bubble", {
        get: function () {
            return this._getOption('bubble');
        },
        set: function (value) {
            this._setOption('bubble', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "candlestick", {
        get: function () {
            return this._getOption('candlestick');
        },
        set: function (value) {
            this._setOption('candlestick', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "closeValueField", {
        get: function () {
            return this._getOption('closeValueField');
        },
        set: function (value) {
            this._setOption('closeValueField', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "cornerRadius", {
        get: function () {
            return this._getOption('cornerRadius');
        },
        set: function (value) {
            this._setOption('cornerRadius', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "dashStyle", {
        get: function () {
            return this._getOption('dashStyle');
        },
        set: function (value) {
            this._setOption('dashStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "fullstackedarea", {
        get: function () {
            return this._getOption('fullstackedarea');
        },
        set: function (value) {
            this._setOption('fullstackedarea', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "fullstackedbar", {
        get: function () {
            return this._getOption('fullstackedbar');
        },
        set: function (value) {
            this._setOption('fullstackedbar', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "fullstackedline", {
        get: function () {
            return this._getOption('fullstackedline');
        },
        set: function (value) {
            this._setOption('fullstackedline', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "fullstackedspline", {
        get: function () {
            return this._getOption('fullstackedspline');
        },
        set: function (value) {
            this._setOption('fullstackedspline', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "fullstackedsplinearea", {
        get: function () {
            return this._getOption('fullstackedsplinearea');
        },
        set: function (value) {
            this._setOption('fullstackedsplinearea', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "highValueField", {
        get: function () {
            return this._getOption('highValueField');
        },
        set: function (value) {
            this._setOption('highValueField', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "hoverMode", {
        get: function () {
            return this._getOption('hoverMode');
        },
        set: function (value) {
            this._setOption('hoverMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "hoverStyle", {
        get: function () {
            return this._getOption('hoverStyle');
        },
        set: function (value) {
            this._setOption('hoverStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "ignoreEmptyPoints", {
        get: function () {
            return this._getOption('ignoreEmptyPoints');
        },
        set: function (value) {
            this._setOption('ignoreEmptyPoints', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "innerColor", {
        get: function () {
            return this._getOption('innerColor');
        },
        set: function (value) {
            this._setOption('innerColor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "label", {
        get: function () {
            return this._getOption('label');
        },
        set: function (value) {
            this._setOption('label', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "line", {
        get: function () {
            return this._getOption('line');
        },
        set: function (value) {
            this._setOption('line', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "lowValueField", {
        get: function () {
            return this._getOption('lowValueField');
        },
        set: function (value) {
            this._setOption('lowValueField', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "maxLabelCount", {
        get: function () {
            return this._getOption('maxLabelCount');
        },
        set: function (value) {
            this._setOption('maxLabelCount', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "minBarSize", {
        get: function () {
            return this._getOption('minBarSize');
        },
        set: function (value) {
            this._setOption('minBarSize', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "opacity", {
        get: function () {
            return this._getOption('opacity');
        },
        set: function (value) {
            this._setOption('opacity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "openValueField", {
        get: function () {
            return this._getOption('openValueField');
        },
        set: function (value) {
            this._setOption('openValueField', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "pane", {
        get: function () {
            return this._getOption('pane');
        },
        set: function (value) {
            this._setOption('pane', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "point", {
        get: function () {
            return this._getOption('point');
        },
        set: function (value) {
            this._setOption('point', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "rangearea", {
        get: function () {
            return this._getOption('rangearea');
        },
        set: function (value) {
            this._setOption('rangearea', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "rangebar", {
        get: function () {
            return this._getOption('rangebar');
        },
        set: function (value) {
            this._setOption('rangebar', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "rangeValue1Field", {
        get: function () {
            return this._getOption('rangeValue1Field');
        },
        set: function (value) {
            this._setOption('rangeValue1Field', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "rangeValue2Field", {
        get: function () {
            return this._getOption('rangeValue2Field');
        },
        set: function (value) {
            this._setOption('rangeValue2Field', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "reduction", {
        get: function () {
            return this._getOption('reduction');
        },
        set: function (value) {
            this._setOption('reduction', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "scatter", {
        get: function () {
            return this._getOption('scatter');
        },
        set: function (value) {
            this._setOption('scatter', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "selectionMode", {
        get: function () {
            return this._getOption('selectionMode');
        },
        set: function (value) {
            this._setOption('selectionMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "selectionStyle", {
        get: function () {
            return this._getOption('selectionStyle');
        },
        set: function (value) {
            this._setOption('selectionStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "showInLegend", {
        get: function () {
            return this._getOption('showInLegend');
        },
        set: function (value) {
            this._setOption('showInLegend', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "sizeField", {
        get: function () {
            return this._getOption('sizeField');
        },
        set: function (value) {
            this._setOption('sizeField', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "spline", {
        get: function () {
            return this._getOption('spline');
        },
        set: function (value) {
            this._setOption('spline', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "splinearea", {
        get: function () {
            return this._getOption('splinearea');
        },
        set: function (value) {
            this._setOption('splinearea', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "stack", {
        get: function () {
            return this._getOption('stack');
        },
        set: function (value) {
            this._setOption('stack', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "stackedarea", {
        get: function () {
            return this._getOption('stackedarea');
        },
        set: function (value) {
            this._setOption('stackedarea', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "stackedbar", {
        get: function () {
            return this._getOption('stackedbar');
        },
        set: function (value) {
            this._setOption('stackedbar', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "stackedline", {
        get: function () {
            return this._getOption('stackedline');
        },
        set: function (value) {
            this._setOption('stackedline', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "stackedspline", {
        get: function () {
            return this._getOption('stackedspline');
        },
        set: function (value) {
            this._setOption('stackedspline', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "stackedsplinearea", {
        get: function () {
            return this._getOption('stackedsplinearea');
        },
        set: function (value) {
            this._setOption('stackedsplinearea', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "steparea", {
        get: function () {
            return this._getOption('steparea');
        },
        set: function (value) {
            this._setOption('steparea', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "stepline", {
        get: function () {
            return this._getOption('stepline');
        },
        set: function (value) {
            this._setOption('stepline', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "stock", {
        get: function () {
            return this._getOption('stock');
        },
        set: function (value) {
            this._setOption('stock', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "tagField", {
        get: function () {
            return this._getOption('tagField');
        },
        set: function (value) {
            this._setOption('tagField', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "type", {
        get: function () {
            return this._getOption('type');
        },
        set: function (value) {
            this._setOption('type', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "valueErrorBar", {
        get: function () {
            return this._getOption('valueErrorBar');
        },
        set: function (value) {
            this._setOption('valueErrorBar', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "valueField", {
        get: function () {
            return this._getOption('valueField');
        },
        set: function (value) {
            this._setOption('valueField', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "argumentType", {
        get: function () {
            return this._getOption('argumentType');
        },
        set: function (value) {
            this._setOption('argumentType', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "minSegmentSize", {
        get: function () {
            return this._getOption('minSegmentSize');
        },
        set: function (value) {
            this._setOption('minSegmentSize', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "smallValuesGrouping", {
        get: function () {
            return this._getOption('smallValuesGrouping');
        },
        set: function (value) {
            this._setOption('smallValuesGrouping', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "closed", {
        get: function () {
            return this._getOption('closed');
        },
        set: function (value) {
            this._setOption('closed', value);
        },
        enumerable: true,
        configurable: true
    });
    return DxoChartCommonSeriesSettings;
}(NestedOption));

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoAreaComponent = /** @class */ (function (_super) {
    __extends(DxoAreaComponent, _super);
    function DxoAreaComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoAreaComponent.prototype, "_optionPath", {
        get: function () {
            return 'area';
        },
        enumerable: true,
        configurable: true
    });
    DxoAreaComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoAreaComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoAreaComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoAreaComponent = __decorate([
        Component({
            selector: 'dxo-area',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'aggregation',
                'area',
                'argumentField',
                'axis',
                'bar',
                'barOverlapGroup',
                'barPadding',
                'barWidth',
                'border',
                'bubble',
                'candlestick',
                'closeValueField',
                'color',
                'cornerRadius',
                'dashStyle',
                'fullstackedarea',
                'fullstackedbar',
                'fullstackedline',
                'fullstackedspline',
                'fullstackedsplinearea',
                'highValueField',
                'hoverMode',
                'hoverStyle',
                'ignoreEmptyPoints',
                'innerColor',
                'label',
                'line',
                'lowValueField',
                'maxLabelCount',
                'minBarSize',
                'opacity',
                'openValueField',
                'pane',
                'point',
                'rangearea',
                'rangebar',
                'rangeValue1Field',
                'rangeValue2Field',
                'reduction',
                'scatter',
                'selectionMode',
                'selectionStyle',
                'showInLegend',
                'sizeField',
                'spline',
                'splinearea',
                'stack',
                'stackedarea',
                'stackedbar',
                'stackedline',
                'stackedspline',
                'stackedsplinearea',
                'steparea',
                'stepline',
                'stock',
                'tagField',
                'type',
                'valueErrorBar',
                'valueField',
                'visible',
                'width',
                'closed'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoAreaComponent);
    return DxoAreaComponent;
}(DxoChartCommonSeriesSettings));
var DxoAreaModule = /** @class */ (function () {
    function DxoAreaModule() {
    }
    DxoAreaModule = __decorate([
        NgModule({
            declarations: [
                DxoAreaComponent
            ],
            exports: [
                DxoAreaComponent
            ],
        })
    ], DxoAreaModule);
    return DxoAreaModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiVizScaleBreak = /** @class */ (function (_super) {
    __extends(DxiVizScaleBreak, _super);
    function DxiVizScaleBreak() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DxiVizScaleBreak.prototype, "endValue", {
        get: function () {
            return this._getOption('endValue');
        },
        set: function (value) {
            this._setOption('endValue', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiVizScaleBreak.prototype, "startValue", {
        get: function () {
            return this._getOption('startValue');
        },
        set: function (value) {
            this._setOption('startValue', value);
        },
        enumerable: true,
        configurable: true
    });
    return DxiVizScaleBreak;
}(CollectionNestedOption));

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiBreakComponent = /** @class */ (function (_super) {
    __extends(DxiBreakComponent, _super);
    function DxiBreakComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiBreakComponent.prototype, "_optionPath", {
        get: function () {
            return 'breaks';
        },
        enumerable: true,
        configurable: true
    });
    DxiBreakComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxiBreakComponent = __decorate([
        Component({
            selector: 'dxi-break',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'endValue',
                'startValue'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiBreakComponent);
    return DxiBreakComponent;
}(DxiVizScaleBreak));
var DxiBreakModule = /** @class */ (function () {
    function DxiBreakModule() {
    }
    DxiBreakModule = __decorate([
        NgModule({
            declarations: [
                DxiBreakComponent
            ],
            exports: [
                DxiBreakComponent
            ],
        })
    ], DxiBreakModule);
    return DxiBreakModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiConstantLineComponent = /** @class */ (function (_super) {
    __extends(DxiConstantLineComponent, _super);
    function DxiConstantLineComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiConstantLineComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiConstantLineComponent.prototype, "dashStyle", {
        get: function () {
            return this._getOption('dashStyle');
        },
        set: function (value) {
            this._setOption('dashStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiConstantLineComponent.prototype, "displayBehindSeries", {
        get: function () {
            return this._getOption('displayBehindSeries');
        },
        set: function (value) {
            this._setOption('displayBehindSeries', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiConstantLineComponent.prototype, "extendAxis", {
        get: function () {
            return this._getOption('extendAxis');
        },
        set: function (value) {
            this._setOption('extendAxis', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiConstantLineComponent.prototype, "label", {
        get: function () {
            return this._getOption('label');
        },
        set: function (value) {
            this._setOption('label', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiConstantLineComponent.prototype, "paddingLeftRight", {
        get: function () {
            return this._getOption('paddingLeftRight');
        },
        set: function (value) {
            this._setOption('paddingLeftRight', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiConstantLineComponent.prototype, "paddingTopBottom", {
        get: function () {
            return this._getOption('paddingTopBottom');
        },
        set: function (value) {
            this._setOption('paddingTopBottom', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiConstantLineComponent.prototype, "value", {
        get: function () {
            return this._getOption('value');
        },
        set: function (value) {
            this._setOption('value', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiConstantLineComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiConstantLineComponent.prototype, "_optionPath", {
        get: function () {
            return 'constantLines';
        },
        enumerable: true,
        configurable: true
    });
    DxiConstantLineComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiConstantLineComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiConstantLineComponent.prototype, "dashStyle", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxiConstantLineComponent.prototype, "displayBehindSeries", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxiConstantLineComponent.prototype, "extendAxis", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiConstantLineComponent.prototype, "label", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiConstantLineComponent.prototype, "paddingLeftRight", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiConstantLineComponent.prototype, "paddingTopBottom", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiConstantLineComponent.prototype, "value", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiConstantLineComponent.prototype, "width", null);
    DxiConstantLineComponent = __decorate([
        Component({
            selector: 'dxi-constant-line',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiConstantLineComponent);
    return DxiConstantLineComponent;
}(CollectionNestedOption));
var DxiConstantLineModule = /** @class */ (function () {
    function DxiConstantLineModule() {
    }
    DxiConstantLineModule = __decorate([
        NgModule({
            declarations: [
                DxiConstantLineComponent
            ],
            exports: [
                DxiConstantLineComponent
            ],
        })
    ], DxiConstantLineModule);
    return DxiConstantLineModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiStripComponent = /** @class */ (function (_super) {
    __extends(DxiStripComponent, _super);
    function DxiStripComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiStripComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiStripComponent.prototype, "endValue", {
        get: function () {
            return this._getOption('endValue');
        },
        set: function (value) {
            this._setOption('endValue', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiStripComponent.prototype, "label", {
        get: function () {
            return this._getOption('label');
        },
        set: function (value) {
            this._setOption('label', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiStripComponent.prototype, "paddingLeftRight", {
        get: function () {
            return this._getOption('paddingLeftRight');
        },
        set: function (value) {
            this._setOption('paddingLeftRight', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiStripComponent.prototype, "paddingTopBottom", {
        get: function () {
            return this._getOption('paddingTopBottom');
        },
        set: function (value) {
            this._setOption('paddingTopBottom', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiStripComponent.prototype, "startValue", {
        get: function () {
            return this._getOption('startValue');
        },
        set: function (value) {
            this._setOption('startValue', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiStripComponent.prototype, "_optionPath", {
        get: function () {
            return 'strips';
        },
        enumerable: true,
        configurable: true
    });
    DxiStripComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiStripComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiStripComponent.prototype, "endValue", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiStripComponent.prototype, "label", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiStripComponent.prototype, "paddingLeftRight", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiStripComponent.prototype, "paddingTopBottom", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiStripComponent.prototype, "startValue", null);
    DxiStripComponent = __decorate([
        Component({
            selector: 'dxi-strip',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiStripComponent);
    return DxiStripComponent;
}(CollectionNestedOption));
var DxiStripModule = /** @class */ (function () {
    function DxiStripModule() {
    }
    DxiStripModule = __decorate([
        NgModule({
            declarations: [
                DxiStripComponent
            ],
            exports: [
                DxiStripComponent
            ],
        })
    ], DxiStripModule);
    return DxiStripModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoArgumentAxisComponent = /** @class */ (function (_super) {
    __extends(DxoArgumentAxisComponent, _super);
    function DxoArgumentAxisComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        _this._createEventEmitters([
            { emit: 'visualRangeChange' }
        ]);
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "aggregateByCategory", {
        get: function () {
            return this._getOption('aggregateByCategory');
        },
        set: function (value) {
            this._setOption('aggregateByCategory', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "aggregationGroupWidth", {
        get: function () {
            return this._getOption('aggregationGroupWidth');
        },
        set: function (value) {
            this._setOption('aggregationGroupWidth', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "aggregationInterval", {
        get: function () {
            return this._getOption('aggregationInterval');
        },
        set: function (value) {
            this._setOption('aggregationInterval', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "allowDecimals", {
        get: function () {
            return this._getOption('allowDecimals');
        },
        set: function (value) {
            this._setOption('allowDecimals', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "argumentType", {
        get: function () {
            return this._getOption('argumentType');
        },
        set: function (value) {
            this._setOption('argumentType', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "axisDivisionFactor", {
        get: function () {
            return this._getOption('axisDivisionFactor');
        },
        set: function (value) {
            this._setOption('axisDivisionFactor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "breaks", {
        get: function () {
            return this._getOption('breaks');
        },
        set: function (value) {
            this._setOption('breaks', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "breakStyle", {
        get: function () {
            return this._getOption('breakStyle');
        },
        set: function (value) {
            this._setOption('breakStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "categories", {
        get: function () {
            return this._getOption('categories');
        },
        set: function (value) {
            this._setOption('categories', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "constantLines", {
        get: function () {
            return this._getOption('constantLines');
        },
        set: function (value) {
            this._setOption('constantLines', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "constantLineStyle", {
        get: function () {
            return this._getOption('constantLineStyle');
        },
        set: function (value) {
            this._setOption('constantLineStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "customPosition", {
        get: function () {
            return this._getOption('customPosition');
        },
        set: function (value) {
            this._setOption('customPosition', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "customPositionAxis", {
        get: function () {
            return this._getOption('customPositionAxis');
        },
        set: function (value) {
            this._setOption('customPositionAxis', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "discreteAxisDivisionMode", {
        get: function () {
            return this._getOption('discreteAxisDivisionMode');
        },
        set: function (value) {
            this._setOption('discreteAxisDivisionMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "endOnTick", {
        get: function () {
            return this._getOption('endOnTick');
        },
        set: function (value) {
            this._setOption('endOnTick', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "grid", {
        get: function () {
            return this._getOption('grid');
        },
        set: function (value) {
            this._setOption('grid', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "holidays", {
        get: function () {
            return this._getOption('holidays');
        },
        set: function (value) {
            this._setOption('holidays', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "hoverMode", {
        get: function () {
            return this._getOption('hoverMode');
        },
        set: function (value) {
            this._setOption('hoverMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "inverted", {
        get: function () {
            return this._getOption('inverted');
        },
        set: function (value) {
            this._setOption('inverted', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "label", {
        get: function () {
            return this._getOption('label');
        },
        set: function (value) {
            this._setOption('label', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "linearThreshold", {
        get: function () {
            return this._getOption('linearThreshold');
        },
        set: function (value) {
            this._setOption('linearThreshold', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "logarithmBase", {
        get: function () {
            return this._getOption('logarithmBase');
        },
        set: function (value) {
            this._setOption('logarithmBase', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "max", {
        get: function () {
            return this._getOption('max');
        },
        set: function (value) {
            this._setOption('max', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "maxValueMargin", {
        get: function () {
            return this._getOption('maxValueMargin');
        },
        set: function (value) {
            this._setOption('maxValueMargin', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "min", {
        get: function () {
            return this._getOption('min');
        },
        set: function (value) {
            this._setOption('min', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "minorGrid", {
        get: function () {
            return this._getOption('minorGrid');
        },
        set: function (value) {
            this._setOption('minorGrid', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "minorTick", {
        get: function () {
            return this._getOption('minorTick');
        },
        set: function (value) {
            this._setOption('minorTick', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "minorTickCount", {
        get: function () {
            return this._getOption('minorTickCount');
        },
        set: function (value) {
            this._setOption('minorTickCount', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "minorTickInterval", {
        get: function () {
            return this._getOption('minorTickInterval');
        },
        set: function (value) {
            this._setOption('minorTickInterval', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "minValueMargin", {
        get: function () {
            return this._getOption('minValueMargin');
        },
        set: function (value) {
            this._setOption('minValueMargin', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "minVisualRangeLength", {
        get: function () {
            return this._getOption('minVisualRangeLength');
        },
        set: function (value) {
            this._setOption('minVisualRangeLength', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "offset", {
        get: function () {
            return this._getOption('offset');
        },
        set: function (value) {
            this._setOption('offset', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "opacity", {
        get: function () {
            return this._getOption('opacity');
        },
        set: function (value) {
            this._setOption('opacity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "placeholderSize", {
        get: function () {
            return this._getOption('placeholderSize');
        },
        set: function (value) {
            this._setOption('placeholderSize', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "position", {
        get: function () {
            return this._getOption('position');
        },
        set: function (value) {
            this._setOption('position', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "singleWorkdays", {
        get: function () {
            return this._getOption('singleWorkdays');
        },
        set: function (value) {
            this._setOption('singleWorkdays', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "strips", {
        get: function () {
            return this._getOption('strips');
        },
        set: function (value) {
            this._setOption('strips', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "stripStyle", {
        get: function () {
            return this._getOption('stripStyle');
        },
        set: function (value) {
            this._setOption('stripStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "tick", {
        get: function () {
            return this._getOption('tick');
        },
        set: function (value) {
            this._setOption('tick', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "tickInterval", {
        get: function () {
            return this._getOption('tickInterval');
        },
        set: function (value) {
            this._setOption('tickInterval', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "title", {
        get: function () {
            return this._getOption('title');
        },
        set: function (value) {
            this._setOption('title', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "type", {
        get: function () {
            return this._getOption('type');
        },
        set: function (value) {
            this._setOption('type', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "valueMarginsEnabled", {
        get: function () {
            return this._getOption('valueMarginsEnabled');
        },
        set: function (value) {
            this._setOption('valueMarginsEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "visualRange", {
        get: function () {
            return this._getOption('visualRange');
        },
        set: function (value) {
            this._setOption('visualRange', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "visualRangeUpdateMode", {
        get: function () {
            return this._getOption('visualRangeUpdateMode');
        },
        set: function (value) {
            this._setOption('visualRangeUpdateMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "wholeRange", {
        get: function () {
            return this._getOption('wholeRange');
        },
        set: function (value) {
            this._setOption('wholeRange', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "workdaysOnly", {
        get: function () {
            return this._getOption('workdaysOnly');
        },
        set: function (value) {
            this._setOption('workdaysOnly', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "workWeek", {
        get: function () {
            return this._getOption('workWeek');
        },
        set: function (value) {
            this._setOption('workWeek', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "firstPointOnStartAngle", {
        get: function () {
            return this._getOption('firstPointOnStartAngle');
        },
        set: function (value) {
            this._setOption('firstPointOnStartAngle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "originValue", {
        get: function () {
            return this._getOption('originValue');
        },
        set: function (value) {
            this._setOption('originValue', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "period", {
        get: function () {
            return this._getOption('period');
        },
        set: function (value) {
            this._setOption('period', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "startAngle", {
        get: function () {
            return this._getOption('startAngle');
        },
        set: function (value) {
            this._setOption('startAngle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "_optionPath", {
        get: function () {
            return 'argumentAxis';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "breaksChildren", {
        get: function () {
            return this._getOption('breaks');
        },
        set: function (value) {
            this.setChildren('breaks', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "constantLinesChildren", {
        get: function () {
            return this._getOption('constantLines');
        },
        set: function (value) {
            this.setChildren('constantLines', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoArgumentAxisComponent.prototype, "stripsChildren", {
        get: function () {
            return this._getOption('strips');
        },
        set: function (value) {
            this.setChildren('strips', value);
        },
        enumerable: true,
        configurable: true
    });
    DxoArgumentAxisComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoArgumentAxisComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoArgumentAxisComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoArgumentAxisComponent.prototype, "aggregateByCategory", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoArgumentAxisComponent.prototype, "aggregationGroupWidth", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoArgumentAxisComponent.prototype, "aggregationInterval", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoArgumentAxisComponent.prototype, "allowDecimals", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoArgumentAxisComponent.prototype, "argumentType", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoArgumentAxisComponent.prototype, "axisDivisionFactor", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxoArgumentAxisComponent.prototype, "breaks", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoArgumentAxisComponent.prototype, "breakStyle", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxoArgumentAxisComponent.prototype, "categories", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoArgumentAxisComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxoArgumentAxisComponent.prototype, "constantLines", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoArgumentAxisComponent.prototype, "constantLineStyle", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoArgumentAxisComponent.prototype, "customPosition", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoArgumentAxisComponent.prototype, "customPositionAxis", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoArgumentAxisComponent.prototype, "discreteAxisDivisionMode", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoArgumentAxisComponent.prototype, "endOnTick", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoArgumentAxisComponent.prototype, "grid", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxoArgumentAxisComponent.prototype, "holidays", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoArgumentAxisComponent.prototype, "hoverMode", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoArgumentAxisComponent.prototype, "inverted", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoArgumentAxisComponent.prototype, "label", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoArgumentAxisComponent.prototype, "linearThreshold", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoArgumentAxisComponent.prototype, "logarithmBase", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoArgumentAxisComponent.prototype, "max", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoArgumentAxisComponent.prototype, "maxValueMargin", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoArgumentAxisComponent.prototype, "min", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoArgumentAxisComponent.prototype, "minorGrid", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoArgumentAxisComponent.prototype, "minorTick", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoArgumentAxisComponent.prototype, "minorTickCount", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoArgumentAxisComponent.prototype, "minorTickInterval", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoArgumentAxisComponent.prototype, "minValueMargin", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoArgumentAxisComponent.prototype, "minVisualRangeLength", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoArgumentAxisComponent.prototype, "offset", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoArgumentAxisComponent.prototype, "opacity", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoArgumentAxisComponent.prototype, "placeholderSize", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoArgumentAxisComponent.prototype, "position", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxoArgumentAxisComponent.prototype, "singleWorkdays", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxoArgumentAxisComponent.prototype, "strips", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoArgumentAxisComponent.prototype, "stripStyle", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoArgumentAxisComponent.prototype, "tick", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoArgumentAxisComponent.prototype, "tickInterval", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoArgumentAxisComponent.prototype, "title", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoArgumentAxisComponent.prototype, "type", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoArgumentAxisComponent.prototype, "valueMarginsEnabled", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoArgumentAxisComponent.prototype, "visible", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoArgumentAxisComponent.prototype, "visualRange", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoArgumentAxisComponent.prototype, "visualRangeUpdateMode", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoArgumentAxisComponent.prototype, "wholeRange", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoArgumentAxisComponent.prototype, "width", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoArgumentAxisComponent.prototype, "workdaysOnly", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxoArgumentAxisComponent.prototype, "workWeek", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoArgumentAxisComponent.prototype, "firstPointOnStartAngle", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoArgumentAxisComponent.prototype, "originValue", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoArgumentAxisComponent.prototype, "period", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoArgumentAxisComponent.prototype, "startAngle", null);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxoArgumentAxisComponent.prototype, "visualRangeChange", void 0);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiBreakComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxoArgumentAxisComponent.prototype, "breaksChildren", null);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiConstantLineComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxoArgumentAxisComponent.prototype, "constantLinesChildren", null);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiStripComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxoArgumentAxisComponent.prototype, "stripsChildren", null);
    DxoArgumentAxisComponent = __decorate([
        Component({
            selector: 'dxo-argument-axis',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoArgumentAxisComponent);
    return DxoArgumentAxisComponent;
}(NestedOption));
var DxoArgumentAxisModule = /** @class */ (function () {
    function DxoArgumentAxisModule() {
    }
    DxoArgumentAxisModule = __decorate([
        NgModule({
            declarations: [
                DxoArgumentAxisComponent
            ],
            exports: [
                DxoArgumentAxisComponent
            ],
        })
    ], DxoArgumentAxisModule);
    return DxoArgumentAxisModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoFormat = /** @class */ (function (_super) {
    __extends(DxoFormat, _super);
    function DxoFormat() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DxoFormat.prototype, "currency", {
        get: function () {
            return this._getOption('currency');
        },
        set: function (value) {
            this._setOption('currency', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormat.prototype, "formatter", {
        get: function () {
            return this._getOption('formatter');
        },
        set: function (value) {
            this._setOption('formatter', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormat.prototype, "parser", {
        get: function () {
            return this._getOption('parser');
        },
        set: function (value) {
            this._setOption('parser', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormat.prototype, "precision", {
        get: function () {
            return this._getOption('precision');
        },
        set: function (value) {
            this._setOption('precision', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormat.prototype, "type", {
        get: function () {
            return this._getOption('type');
        },
        set: function (value) {
            this._setOption('type', value);
        },
        enumerable: true,
        configurable: true
    });
    return DxoFormat;
}(NestedOption));

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoArgumentFormatComponent = /** @class */ (function (_super) {
    __extends(DxoArgumentFormatComponent, _super);
    function DxoArgumentFormatComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoArgumentFormatComponent.prototype, "_optionPath", {
        get: function () {
            return 'argumentFormat';
        },
        enumerable: true,
        configurable: true
    });
    DxoArgumentFormatComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoArgumentFormatComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoArgumentFormatComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoArgumentFormatComponent = __decorate([
        Component({
            selector: 'dxo-argument-format',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'currency',
                'formatter',
                'parser',
                'precision',
                'type'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoArgumentFormatComponent);
    return DxoArgumentFormatComponent;
}(DxoFormat));
var DxoArgumentFormatModule = /** @class */ (function () {
    function DxoArgumentFormatModule() {
    }
    DxoArgumentFormatModule = __decorate([
        NgModule({
            declarations: [
                DxoArgumentFormatComponent
            ],
            exports: [
                DxoArgumentFormatComponent
            ],
        })
    ], DxoArgumentFormatModule);
    return DxoArgumentFormatModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoAtComponent = /** @class */ (function (_super) {
    __extends(DxoAtComponent, _super);
    function DxoAtComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoAtComponent.prototype, "x", {
        get: function () {
            return this._getOption('x');
        },
        set: function (value) {
            this._setOption('x', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAtComponent.prototype, "y", {
        get: function () {
            return this._getOption('y');
        },
        set: function (value) {
            this._setOption('y', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAtComponent.prototype, "_optionPath", {
        get: function () {
            return 'at';
        },
        enumerable: true,
        configurable: true
    });
    DxoAtComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoAtComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoAtComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoAtComponent.prototype, "x", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoAtComponent.prototype, "y", null);
    DxoAtComponent = __decorate([
        Component({
            selector: 'dxo-at',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoAtComponent);
    return DxoAtComponent;
}(NestedOption));
var DxoAtModule = /** @class */ (function () {
    function DxoAtModule() {
    }
    DxoAtModule = __decorate([
        NgModule({
            declarations: [
                DxoAtComponent
            ],
            exports: [
                DxoAtComponent
            ],
        })
    ], DxoAtModule);
    return DxoAtModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoAutoLayoutComponent = /** @class */ (function (_super) {
    __extends(DxoAutoLayoutComponent, _super);
    function DxoAutoLayoutComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoAutoLayoutComponent.prototype, "orientation", {
        get: function () {
            return this._getOption('orientation');
        },
        set: function (value) {
            this._setOption('orientation', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAutoLayoutComponent.prototype, "type", {
        get: function () {
            return this._getOption('type');
        },
        set: function (value) {
            this._setOption('type', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoAutoLayoutComponent.prototype, "_optionPath", {
        get: function () {
            return 'autoLayout';
        },
        enumerable: true,
        configurable: true
    });
    DxoAutoLayoutComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoAutoLayoutComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoAutoLayoutComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoAutoLayoutComponent.prototype, "orientation", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoAutoLayoutComponent.prototype, "type", null);
    DxoAutoLayoutComponent = __decorate([
        Component({
            selector: 'dxo-auto-layout',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoAutoLayoutComponent);
    return DxoAutoLayoutComponent;
}(NestedOption));
var DxoAutoLayoutModule = /** @class */ (function () {
    function DxoAutoLayoutModule() {
    }
    DxoAutoLayoutModule = __decorate([
        NgModule({
            declarations: [
                DxoAutoLayoutComponent
            ],
            exports: [
                DxoAutoLayoutComponent
            ],
        })
    ], DxoAutoLayoutModule);
    return DxoAutoLayoutModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoBackgroundComponent = /** @class */ (function (_super) {
    __extends(DxoBackgroundComponent, _super);
    function DxoBackgroundComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoBackgroundComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBackgroundComponent.prototype, "image", {
        get: function () {
            return this._getOption('image');
        },
        set: function (value) {
            this._setOption('image', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBackgroundComponent.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBackgroundComponent.prototype, "borderColor", {
        get: function () {
            return this._getOption('borderColor');
        },
        set: function (value) {
            this._setOption('borderColor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBackgroundComponent.prototype, "_optionPath", {
        get: function () {
            return 'background';
        },
        enumerable: true,
        configurable: true
    });
    DxoBackgroundComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoBackgroundComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoBackgroundComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoBackgroundComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoBackgroundComponent.prototype, "image", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoBackgroundComponent.prototype, "visible", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoBackgroundComponent.prototype, "borderColor", null);
    DxoBackgroundComponent = __decorate([
        Component({
            selector: 'dxo-background',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoBackgroundComponent);
    return DxoBackgroundComponent;
}(NestedOption));
var DxoBackgroundModule = /** @class */ (function () {
    function DxoBackgroundModule() {
    }
    DxoBackgroundModule = __decorate([
        NgModule({
            declarations: [
                DxoBackgroundComponent
            ],
            exports: [
                DxoBackgroundComponent
            ],
        })
    ], DxoBackgroundModule);
    return DxoBackgroundModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoBarComponent = /** @class */ (function (_super) {
    __extends(DxoBarComponent, _super);
    function DxoBarComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoBarComponent.prototype, "_optionPath", {
        get: function () {
            return 'bar';
        },
        enumerable: true,
        configurable: true
    });
    DxoBarComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoBarComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoBarComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoBarComponent = __decorate([
        Component({
            selector: 'dxo-bar',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'aggregation',
                'area',
                'argumentField',
                'axis',
                'bar',
                'barOverlapGroup',
                'barPadding',
                'barWidth',
                'border',
                'bubble',
                'candlestick',
                'closeValueField',
                'color',
                'cornerRadius',
                'dashStyle',
                'fullstackedarea',
                'fullstackedbar',
                'fullstackedline',
                'fullstackedspline',
                'fullstackedsplinearea',
                'highValueField',
                'hoverMode',
                'hoverStyle',
                'ignoreEmptyPoints',
                'innerColor',
                'label',
                'line',
                'lowValueField',
                'maxLabelCount',
                'minBarSize',
                'opacity',
                'openValueField',
                'pane',
                'point',
                'rangearea',
                'rangebar',
                'rangeValue1Field',
                'rangeValue2Field',
                'reduction',
                'scatter',
                'selectionMode',
                'selectionStyle',
                'showInLegend',
                'sizeField',
                'spline',
                'splinearea',
                'stack',
                'stackedarea',
                'stackedbar',
                'stackedline',
                'stackedspline',
                'stackedsplinearea',
                'steparea',
                'stepline',
                'stock',
                'tagField',
                'type',
                'valueErrorBar',
                'valueField',
                'visible',
                'width',
                'closed'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoBarComponent);
    return DxoBarComponent;
}(DxoChartCommonSeriesSettings));
var DxoBarModule = /** @class */ (function () {
    function DxoBarModule() {
    }
    DxoBarModule = __decorate([
        NgModule({
            declarations: [
                DxoBarComponent
            ],
            exports: [
                DxoBarComponent
            ],
        })
    ], DxoBarModule);
    return DxoBarModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoBehaviorComponent = /** @class */ (function (_super) {
    __extends(DxoBehaviorComponent, _super);
    function DxoBehaviorComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoBehaviorComponent.prototype, "allowSlidersSwap", {
        get: function () {
            return this._getOption('allowSlidersSwap');
        },
        set: function (value) {
            this._setOption('allowSlidersSwap', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBehaviorComponent.prototype, "animationEnabled", {
        get: function () {
            return this._getOption('animationEnabled');
        },
        set: function (value) {
            this._setOption('animationEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBehaviorComponent.prototype, "callValueChanged", {
        get: function () {
            return this._getOption('callValueChanged');
        },
        set: function (value) {
            this._setOption('callValueChanged', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBehaviorComponent.prototype, "manualRangeSelectionEnabled", {
        get: function () {
            return this._getOption('manualRangeSelectionEnabled');
        },
        set: function (value) {
            this._setOption('manualRangeSelectionEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBehaviorComponent.prototype, "moveSelectedRangeByClick", {
        get: function () {
            return this._getOption('moveSelectedRangeByClick');
        },
        set: function (value) {
            this._setOption('moveSelectedRangeByClick', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBehaviorComponent.prototype, "snapToTicks", {
        get: function () {
            return this._getOption('snapToTicks');
        },
        set: function (value) {
            this._setOption('snapToTicks', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBehaviorComponent.prototype, "_optionPath", {
        get: function () {
            return 'behavior';
        },
        enumerable: true,
        configurable: true
    });
    DxoBehaviorComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoBehaviorComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoBehaviorComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoBehaviorComponent.prototype, "allowSlidersSwap", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoBehaviorComponent.prototype, "animationEnabled", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoBehaviorComponent.prototype, "callValueChanged", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoBehaviorComponent.prototype, "manualRangeSelectionEnabled", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoBehaviorComponent.prototype, "moveSelectedRangeByClick", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoBehaviorComponent.prototype, "snapToTicks", null);
    DxoBehaviorComponent = __decorate([
        Component({
            selector: 'dxo-behavior',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoBehaviorComponent);
    return DxoBehaviorComponent;
}(NestedOption));
var DxoBehaviorModule = /** @class */ (function () {
    function DxoBehaviorModule() {
    }
    DxoBehaviorModule = __decorate([
        NgModule({
            declarations: [
                DxoBehaviorComponent
            ],
            exports: [
                DxoBehaviorComponent
            ],
        })
    ], DxoBehaviorModule);
    return DxoBehaviorModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoBorderComponent = /** @class */ (function (_super) {
    __extends(DxoBorderComponent, _super);
    function DxoBorderComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoBorderComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBorderComponent.prototype, "cornerRadius", {
        get: function () {
            return this._getOption('cornerRadius');
        },
        set: function (value) {
            this._setOption('cornerRadius', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBorderComponent.prototype, "dashStyle", {
        get: function () {
            return this._getOption('dashStyle');
        },
        set: function (value) {
            this._setOption('dashStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBorderComponent.prototype, "opacity", {
        get: function () {
            return this._getOption('opacity');
        },
        set: function (value) {
            this._setOption('opacity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBorderComponent.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBorderComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBorderComponent.prototype, "bottom", {
        get: function () {
            return this._getOption('bottom');
        },
        set: function (value) {
            this._setOption('bottom', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBorderComponent.prototype, "left", {
        get: function () {
            return this._getOption('left');
        },
        set: function (value) {
            this._setOption('left', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBorderComponent.prototype, "right", {
        get: function () {
            return this._getOption('right');
        },
        set: function (value) {
            this._setOption('right', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBorderComponent.prototype, "top", {
        get: function () {
            return this._getOption('top');
        },
        set: function (value) {
            this._setOption('top', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBorderComponent.prototype, "_optionPath", {
        get: function () {
            return 'border';
        },
        enumerable: true,
        configurable: true
    });
    DxoBorderComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoBorderComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoBorderComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoBorderComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoBorderComponent.prototype, "cornerRadius", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoBorderComponent.prototype, "dashStyle", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoBorderComponent.prototype, "opacity", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoBorderComponent.prototype, "visible", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoBorderComponent.prototype, "width", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoBorderComponent.prototype, "bottom", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoBorderComponent.prototype, "left", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoBorderComponent.prototype, "right", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoBorderComponent.prototype, "top", null);
    DxoBorderComponent = __decorate([
        Component({
            selector: 'dxo-border',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoBorderComponent);
    return DxoBorderComponent;
}(NestedOption));
var DxoBorderModule = /** @class */ (function () {
    function DxoBorderModule() {
    }
    DxoBorderModule = __decorate([
        NgModule({
            declarations: [
                DxoBorderComponent
            ],
            exports: [
                DxoBorderComponent
            ],
        })
    ], DxoBorderModule);
    return DxoBorderModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoBoundaryOffsetComponent = /** @class */ (function (_super) {
    __extends(DxoBoundaryOffsetComponent, _super);
    function DxoBoundaryOffsetComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoBoundaryOffsetComponent.prototype, "x", {
        get: function () {
            return this._getOption('x');
        },
        set: function (value) {
            this._setOption('x', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBoundaryOffsetComponent.prototype, "y", {
        get: function () {
            return this._getOption('y');
        },
        set: function (value) {
            this._setOption('y', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBoundaryOffsetComponent.prototype, "_optionPath", {
        get: function () {
            return 'boundaryOffset';
        },
        enumerable: true,
        configurable: true
    });
    DxoBoundaryOffsetComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoBoundaryOffsetComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoBoundaryOffsetComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoBoundaryOffsetComponent.prototype, "x", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoBoundaryOffsetComponent.prototype, "y", null);
    DxoBoundaryOffsetComponent = __decorate([
        Component({
            selector: 'dxo-boundary-offset',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoBoundaryOffsetComponent);
    return DxoBoundaryOffsetComponent;
}(NestedOption));
var DxoBoundaryOffsetModule = /** @class */ (function () {
    function DxoBoundaryOffsetModule() {
    }
    DxoBoundaryOffsetModule = __decorate([
        NgModule({
            declarations: [
                DxoBoundaryOffsetComponent
            ],
            exports: [
                DxoBoundaryOffsetComponent
            ],
        })
    ], DxoBoundaryOffsetModule);
    return DxoBoundaryOffsetModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoBoxOptions = /** @class */ (function (_super) {
    __extends(DxoBoxOptions, _super);
    function DxoBoxOptions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DxoBoxOptions.prototype, "align", {
        get: function () {
            return this._getOption('align');
        },
        set: function (value) {
            this._setOption('align', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBoxOptions.prototype, "crossAlign", {
        get: function () {
            return this._getOption('crossAlign');
        },
        set: function (value) {
            this._setOption('crossAlign', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBoxOptions.prototype, "dataSource", {
        get: function () {
            return this._getOption('dataSource');
        },
        set: function (value) {
            this._setOption('dataSource', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBoxOptions.prototype, "direction", {
        get: function () {
            return this._getOption('direction');
        },
        set: function (value) {
            this._setOption('direction', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBoxOptions.prototype, "disabled", {
        get: function () {
            return this._getOption('disabled');
        },
        set: function (value) {
            this._setOption('disabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBoxOptions.prototype, "elementAttr", {
        get: function () {
            return this._getOption('elementAttr');
        },
        set: function (value) {
            this._setOption('elementAttr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBoxOptions.prototype, "height", {
        get: function () {
            return this._getOption('height');
        },
        set: function (value) {
            this._setOption('height', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBoxOptions.prototype, "hoverStateEnabled", {
        get: function () {
            return this._getOption('hoverStateEnabled');
        },
        set: function (value) {
            this._setOption('hoverStateEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBoxOptions.prototype, "itemHoldTimeout", {
        get: function () {
            return this._getOption('itemHoldTimeout');
        },
        set: function (value) {
            this._setOption('itemHoldTimeout', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBoxOptions.prototype, "items", {
        get: function () {
            return this._getOption('items');
        },
        set: function (value) {
            this._setOption('items', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBoxOptions.prototype, "itemTemplate", {
        get: function () {
            return this._getOption('itemTemplate');
        },
        set: function (value) {
            this._setOption('itemTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBoxOptions.prototype, "onContentReady", {
        get: function () {
            return this._getOption('onContentReady');
        },
        set: function (value) {
            this._setOption('onContentReady', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBoxOptions.prototype, "onDisposing", {
        get: function () {
            return this._getOption('onDisposing');
        },
        set: function (value) {
            this._setOption('onDisposing', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBoxOptions.prototype, "onInitialized", {
        get: function () {
            return this._getOption('onInitialized');
        },
        set: function (value) {
            this._setOption('onInitialized', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBoxOptions.prototype, "onItemClick", {
        get: function () {
            return this._getOption('onItemClick');
        },
        set: function (value) {
            this._setOption('onItemClick', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBoxOptions.prototype, "onItemContextMenu", {
        get: function () {
            return this._getOption('onItemContextMenu');
        },
        set: function (value) {
            this._setOption('onItemContextMenu', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBoxOptions.prototype, "onItemHold", {
        get: function () {
            return this._getOption('onItemHold');
        },
        set: function (value) {
            this._setOption('onItemHold', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBoxOptions.prototype, "onItemRendered", {
        get: function () {
            return this._getOption('onItemRendered');
        },
        set: function (value) {
            this._setOption('onItemRendered', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBoxOptions.prototype, "onOptionChanged", {
        get: function () {
            return this._getOption('onOptionChanged');
        },
        set: function (value) {
            this._setOption('onOptionChanged', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBoxOptions.prototype, "rtlEnabled", {
        get: function () {
            return this._getOption('rtlEnabled');
        },
        set: function (value) {
            this._setOption('rtlEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBoxOptions.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBoxOptions.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    return DxoBoxOptions;
}(NestedOption));

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiButtonGroupItem = /** @class */ (function (_super) {
    __extends(DxiButtonGroupItem, _super);
    function DxiButtonGroupItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DxiButtonGroupItem.prototype, "disabled", {
        get: function () {
            return this._getOption('disabled');
        },
        set: function (value) {
            this._setOption('disabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "html", {
        get: function () {
            return this._getOption('html');
        },
        set: function (value) {
            this._setOption('html', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "icon", {
        get: function () {
            return this._getOption('icon');
        },
        set: function (value) {
            this._setOption('icon', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "template", {
        get: function () {
            return this._getOption('template');
        },
        set: function (value) {
            this._setOption('template', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "text", {
        get: function () {
            return this._getOption('text');
        },
        set: function (value) {
            this._setOption('text', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "title", {
        get: function () {
            return this._getOption('title');
        },
        set: function (value) {
            this._setOption('title', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "onClick", {
        get: function () {
            return this._getOption('onClick');
        },
        set: function (value) {
            this._setOption('onClick', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "type", {
        get: function () {
            return this._getOption('type');
        },
        set: function (value) {
            this._setOption('type', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "baseSize", {
        get: function () {
            return this._getOption('baseSize');
        },
        set: function (value) {
            this._setOption('baseSize', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "box", {
        get: function () {
            return this._getOption('box');
        },
        set: function (value) {
            this._setOption('box', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "ratio", {
        get: function () {
            return this._getOption('ratio');
        },
        set: function (value) {
            this._setOption('ratio', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "shrink", {
        get: function () {
            return this._getOption('shrink');
        },
        set: function (value) {
            this._setOption('shrink', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "hint", {
        get: function () {
            return this._getOption('hint');
        },
        set: function (value) {
            this._setOption('hint', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "beginGroup", {
        get: function () {
            return this._getOption('beginGroup');
        },
        set: function (value) {
            this._setOption('beginGroup', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "closeMenuOnClick", {
        get: function () {
            return this._getOption('closeMenuOnClick');
        },
        set: function (value) {
            this._setOption('closeMenuOnClick', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "items", {
        get: function () {
            return this._getOption('items');
        },
        set: function (value) {
            this._setOption('items', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "selectable", {
        get: function () {
            return this._getOption('selectable');
        },
        set: function (value) {
            this._setOption('selectable', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "selected", {
        get: function () {
            return this._getOption('selected');
        },
        set: function (value) {
            this._setOption('selected', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "colSpan", {
        get: function () {
            return this._getOption('colSpan');
        },
        set: function (value) {
            this._setOption('colSpan', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "cssClass", {
        get: function () {
            return this._getOption('cssClass');
        },
        set: function (value) {
            this._setOption('cssClass', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "dataField", {
        get: function () {
            return this._getOption('dataField');
        },
        set: function (value) {
            this._setOption('dataField', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "editorOptions", {
        get: function () {
            return this._getOption('editorOptions');
        },
        set: function (value) {
            this._setOption('editorOptions', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "editorType", {
        get: function () {
            return this._getOption('editorType');
        },
        set: function (value) {
            this._setOption('editorType', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "helpText", {
        get: function () {
            return this._getOption('helpText');
        },
        set: function (value) {
            this._setOption('helpText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "isRequired", {
        get: function () {
            return this._getOption('isRequired');
        },
        set: function (value) {
            this._setOption('isRequired', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "itemType", {
        get: function () {
            return this._getOption('itemType');
        },
        set: function (value) {
            this._setOption('itemType', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "label", {
        get: function () {
            return this._getOption('label');
        },
        set: function (value) {
            this._setOption('label', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "name", {
        get: function () {
            return this._getOption('name');
        },
        set: function (value) {
            this._setOption('name', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "validationRules", {
        get: function () {
            return this._getOption('validationRules');
        },
        set: function (value) {
            this._setOption('validationRules', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "visibleIndex", {
        get: function () {
            return this._getOption('visibleIndex');
        },
        set: function (value) {
            this._setOption('visibleIndex', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "alignItemLabels", {
        get: function () {
            return this._getOption('alignItemLabels');
        },
        set: function (value) {
            this._setOption('alignItemLabels', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "caption", {
        get: function () {
            return this._getOption('caption');
        },
        set: function (value) {
            this._setOption('caption', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "colCount", {
        get: function () {
            return this._getOption('colCount');
        },
        set: function (value) {
            this._setOption('colCount', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "colCountByScreen", {
        get: function () {
            return this._getOption('colCountByScreen');
        },
        set: function (value) {
            this._setOption('colCountByScreen', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "tabPanelOptions", {
        get: function () {
            return this._getOption('tabPanelOptions');
        },
        set: function (value) {
            this._setOption('tabPanelOptions', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "tabs", {
        get: function () {
            return this._getOption('tabs');
        },
        set: function (value) {
            this._setOption('tabs', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "badge", {
        get: function () {
            return this._getOption('badge');
        },
        set: function (value) {
            this._setOption('badge', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "tabTemplate", {
        get: function () {
            return this._getOption('tabTemplate');
        },
        set: function (value) {
            this._setOption('tabTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "alignment", {
        get: function () {
            return this._getOption('alignment');
        },
        set: function (value) {
            this._setOption('alignment', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "buttonOptions", {
        get: function () {
            return this._getOption('buttonOptions');
        },
        set: function (value) {
            this._setOption('buttonOptions', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "horizontalAlignment", {
        get: function () {
            return this._getOption('horizontalAlignment');
        },
        set: function (value) {
            this._setOption('horizontalAlignment', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "verticalAlignment", {
        get: function () {
            return this._getOption('verticalAlignment');
        },
        set: function (value) {
            this._setOption('verticalAlignment', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "height", {
        get: function () {
            return this._getOption('height');
        },
        set: function (value) {
            this._setOption('height', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "locateInMenu", {
        get: function () {
            return this._getOption('locateInMenu');
        },
        set: function (value) {
            this._setOption('locateInMenu', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "location", {
        get: function () {
            return this._getOption('location');
        },
        set: function (value) {
            this._setOption('location', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "menuItemTemplate", {
        get: function () {
            return this._getOption('menuItemTemplate');
        },
        set: function (value) {
            this._setOption('menuItemTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "options", {
        get: function () {
            return this._getOption('options');
        },
        set: function (value) {
            this._setOption('options', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "showText", {
        get: function () {
            return this._getOption('showText');
        },
        set: function (value) {
            this._setOption('showText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "widget", {
        get: function () {
            return this._getOption('widget');
        },
        set: function (value) {
            this._setOption('widget', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "imageAlt", {
        get: function () {
            return this._getOption('imageAlt');
        },
        set: function (value) {
            this._setOption('imageAlt', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "imageSrc", {
        get: function () {
            return this._getOption('imageSrc');
        },
        set: function (value) {
            this._setOption('imageSrc', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "formatName", {
        get: function () {
            return this._getOption('formatName');
        },
        set: function (value) {
            this._setOption('formatName', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "formatValues", {
        get: function () {
            return this._getOption('formatValues');
        },
        set: function (value) {
            this._setOption('formatValues', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "key", {
        get: function () {
            return this._getOption('key');
        },
        set: function (value) {
            this._setOption('key', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "showChevron", {
        get: function () {
            return this._getOption('showChevron');
        },
        set: function (value) {
            this._setOption('showChevron', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "menuTemplate", {
        get: function () {
            return this._getOption('menuTemplate');
        },
        set: function (value) {
            this._setOption('menuTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "heightRatio", {
        get: function () {
            return this._getOption('heightRatio');
        },
        set: function (value) {
            this._setOption('heightRatio', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "widthRatio", {
        get: function () {
            return this._getOption('widthRatio');
        },
        set: function (value) {
            this._setOption('widthRatio', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "expanded", {
        get: function () {
            return this._getOption('expanded');
        },
        set: function (value) {
            this._setOption('expanded', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "hasItems", {
        get: function () {
            return this._getOption('hasItems');
        },
        set: function (value) {
            this._setOption('hasItems', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiButtonGroupItem.prototype, "parentId", {
        get: function () {
            return this._getOption('parentId');
        },
        set: function (value) {
            this._setOption('parentId', value);
        },
        enumerable: true,
        configurable: true
    });
    return DxiButtonGroupItem;
}(CollectionNestedOption));

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiValidationRuleComponent = /** @class */ (function (_super) {
    __extends(DxiValidationRuleComponent, _super);
    function DxiValidationRuleComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiValidationRuleComponent.prototype, "message", {
        get: function () {
            return this._getOption('message');
        },
        set: function (value) {
            this._setOption('message', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValidationRuleComponent.prototype, "trim", {
        get: function () {
            return this._getOption('trim');
        },
        set: function (value) {
            this._setOption('trim', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValidationRuleComponent.prototype, "type", {
        get: function () {
            return this._getOption('type');
        },
        set: function (value) {
            this._setOption('type', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValidationRuleComponent.prototype, "ignoreEmptyValue", {
        get: function () {
            return this._getOption('ignoreEmptyValue');
        },
        set: function (value) {
            this._setOption('ignoreEmptyValue', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValidationRuleComponent.prototype, "max", {
        get: function () {
            return this._getOption('max');
        },
        set: function (value) {
            this._setOption('max', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValidationRuleComponent.prototype, "min", {
        get: function () {
            return this._getOption('min');
        },
        set: function (value) {
            this._setOption('min', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValidationRuleComponent.prototype, "reevaluate", {
        get: function () {
            return this._getOption('reevaluate');
        },
        set: function (value) {
            this._setOption('reevaluate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValidationRuleComponent.prototype, "validationCallback", {
        get: function () {
            return this._getOption('validationCallback');
        },
        set: function (value) {
            this._setOption('validationCallback', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValidationRuleComponent.prototype, "comparisonTarget", {
        get: function () {
            return this._getOption('comparisonTarget');
        },
        set: function (value) {
            this._setOption('comparisonTarget', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValidationRuleComponent.prototype, "comparisonType", {
        get: function () {
            return this._getOption('comparisonType');
        },
        set: function (value) {
            this._setOption('comparisonType', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValidationRuleComponent.prototype, "pattern", {
        get: function () {
            return this._getOption('pattern');
        },
        set: function (value) {
            this._setOption('pattern', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValidationRuleComponent.prototype, "_optionPath", {
        get: function () {
            return 'validationRules';
        },
        enumerable: true,
        configurable: true
    });
    DxiValidationRuleComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiValidationRuleComponent.prototype, "message", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxiValidationRuleComponent.prototype, "trim", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiValidationRuleComponent.prototype, "type", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxiValidationRuleComponent.prototype, "ignoreEmptyValue", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiValidationRuleComponent.prototype, "max", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiValidationRuleComponent.prototype, "min", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxiValidationRuleComponent.prototype, "reevaluate", null);
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxiValidationRuleComponent.prototype, "validationCallback", null);
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxiValidationRuleComponent.prototype, "comparisonTarget", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiValidationRuleComponent.prototype, "comparisonType", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiValidationRuleComponent.prototype, "pattern", null);
    DxiValidationRuleComponent = __decorate([
        Component({
            selector: 'dxi-validation-rule',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiValidationRuleComponent);
    return DxiValidationRuleComponent;
}(CollectionNestedOption));
var DxiValidationRuleModule = /** @class */ (function () {
    function DxiValidationRuleModule() {
    }
    DxiValidationRuleModule = __decorate([
        NgModule({
            declarations: [
                DxiValidationRuleComponent
            ],
            exports: [
                DxiValidationRuleComponent
            ],
        })
    ], DxiValidationRuleModule);
    return DxiValidationRuleModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiDiagramCustomCommand = /** @class */ (function (_super) {
    __extends(DxiDiagramCustomCommand, _super);
    function DxiDiagramCustomCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DxiDiagramCustomCommand.prototype, "icon", {
        get: function () {
            return this._getOption('icon');
        },
        set: function (value) {
            this._setOption('icon', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDiagramCustomCommand.prototype, "items", {
        get: function () {
            return this._getOption('items');
        },
        set: function (value) {
            this._setOption('items', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDiagramCustomCommand.prototype, "name", {
        get: function () {
            return this._getOption('name');
        },
        set: function (value) {
            this._setOption('name', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDiagramCustomCommand.prototype, "text", {
        get: function () {
            return this._getOption('text');
        },
        set: function (value) {
            this._setOption('text', value);
        },
        enumerable: true,
        configurable: true
    });
    return DxiDiagramCustomCommand;
}(CollectionNestedOption));

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiCommandComponent = /** @class */ (function (_super) {
    __extends(DxiCommandComponent, _super);
    function DxiCommandComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiCommandComponent.prototype, "_optionPath", {
        get: function () {
            return 'commands';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCommandComponent.prototype, "itemsChildren", {
        get: function () {
            return this._getOption('items');
        },
        set: function (value) {
            this.setChildren('items', value);
        },
        enumerable: true,
        configurable: true
    });
    DxiCommandComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        ContentChildren(forwardRef(function () { return DxiItemComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxiCommandComponent.prototype, "itemsChildren", null);
    DxiCommandComponent = __decorate([
        Component({
            selector: 'dxi-command',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'icon',
                'items',
                'name',
                'text'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiCommandComponent);
    return DxiCommandComponent;
}(DxiDiagramCustomCommand));
var DxiCommandModule = /** @class */ (function () {
    function DxiCommandModule() {
    }
    DxiCommandModule = __decorate([
        NgModule({
            declarations: [
                DxiCommandComponent
            ],
            exports: [
                DxiCommandComponent
            ],
        })
    ], DxiCommandModule);
    return DxiCommandModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiGroupComponent = /** @class */ (function (_super) {
    __extends(DxiGroupComponent, _super);
    function DxiGroupComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiGroupComponent.prototype, "commands", {
        get: function () {
            return this._getOption('commands');
        },
        set: function (value) {
            this._setOption('commands', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiGroupComponent.prototype, "title", {
        get: function () {
            return this._getOption('title');
        },
        set: function (value) {
            this._setOption('title', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiGroupComponent.prototype, "category", {
        get: function () {
            return this._getOption('category');
        },
        set: function (value) {
            this._setOption('category', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiGroupComponent.prototype, "displayMode", {
        get: function () {
            return this._getOption('displayMode');
        },
        set: function (value) {
            this._setOption('displayMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiGroupComponent.prototype, "expanded", {
        get: function () {
            return this._getOption('expanded');
        },
        set: function (value) {
            this._setOption('expanded', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiGroupComponent.prototype, "shapes", {
        get: function () {
            return this._getOption('shapes');
        },
        set: function (value) {
            this._setOption('shapes', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiGroupComponent.prototype, "_optionPath", {
        get: function () {
            return 'groups';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiGroupComponent.prototype, "commandsChildren", {
        get: function () {
            return this._getOption('commands');
        },
        set: function (value) {
            this.setChildren('commands', value);
        },
        enumerable: true,
        configurable: true
    });
    DxiGroupComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxiGroupComponent.prototype, "commands", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiGroupComponent.prototype, "title", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiGroupComponent.prototype, "category", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiGroupComponent.prototype, "displayMode", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxiGroupComponent.prototype, "expanded", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxiGroupComponent.prototype, "shapes", null);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiCommandComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxiGroupComponent.prototype, "commandsChildren", null);
    DxiGroupComponent = __decorate([
        Component({
            selector: 'dxi-group',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiGroupComponent);
    return DxiGroupComponent;
}(CollectionNestedOption));
var DxiGroupModule = /** @class */ (function () {
    function DxiGroupModule() {
    }
    DxiGroupModule = __decorate([
        NgModule({
            declarations: [
                DxiGroupComponent
            ],
            exports: [
                DxiGroupComponent
            ],
        })
    ], DxiGroupModule);
    return DxiGroupModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiTabComponent = /** @class */ (function (_super) {
    __extends(DxiTabComponent, _super);
    function DxiTabComponent(parentOptionHost, optionHost, renderer, document, templateHost, element) {
        var _this = _super.call(this) || this;
        _this.renderer = renderer;
        _this.document = document;
        _this.element = element;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        templateHost.setHost(_this);
        return _this;
    }
    Object.defineProperty(DxiTabComponent.prototype, "alignItemLabels", {
        get: function () {
            return this._getOption('alignItemLabels');
        },
        set: function (value) {
            this._setOption('alignItemLabels', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiTabComponent.prototype, "badge", {
        get: function () {
            return this._getOption('badge');
        },
        set: function (value) {
            this._setOption('badge', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiTabComponent.prototype, "colCount", {
        get: function () {
            return this._getOption('colCount');
        },
        set: function (value) {
            this._setOption('colCount', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiTabComponent.prototype, "colCountByScreen", {
        get: function () {
            return this._getOption('colCountByScreen');
        },
        set: function (value) {
            this._setOption('colCountByScreen', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiTabComponent.prototype, "disabled", {
        get: function () {
            return this._getOption('disabled');
        },
        set: function (value) {
            this._setOption('disabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiTabComponent.prototype, "icon", {
        get: function () {
            return this._getOption('icon');
        },
        set: function (value) {
            this._setOption('icon', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiTabComponent.prototype, "items", {
        get: function () {
            return this._getOption('items');
        },
        set: function (value) {
            this._setOption('items', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiTabComponent.prototype, "tabTemplate", {
        get: function () {
            return this._getOption('tabTemplate');
        },
        set: function (value) {
            this._setOption('tabTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiTabComponent.prototype, "template", {
        get: function () {
            return this._getOption('template');
        },
        set: function (value) {
            this._setOption('template', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiTabComponent.prototype, "title", {
        get: function () {
            return this._getOption('title');
        },
        set: function (value) {
            this._setOption('title', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiTabComponent.prototype, "commands", {
        get: function () {
            return this._getOption('commands');
        },
        set: function (value) {
            this._setOption('commands', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiTabComponent.prototype, "groups", {
        get: function () {
            return this._getOption('groups');
        },
        set: function (value) {
            this._setOption('groups', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiTabComponent.prototype, "_optionPath", {
        get: function () {
            return 'tabs';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiTabComponent.prototype, "itemsChildren", {
        get: function () {
            return this._getOption('items');
        },
        set: function (value) {
            this.setChildren('items', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiTabComponent.prototype, "commandsChildren", {
        get: function () {
            return this._getOption('commands');
        },
        set: function (value) {
            this.setChildren('commands', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiTabComponent.prototype, "groupsChildren", {
        get: function () {
            return this._getOption('groups');
        },
        set: function (value) {
            this.setChildren('groups', value);
        },
        enumerable: true,
        configurable: true
    });
    DxiTabComponent.prototype.setTemplate = function (template) {
        this.template = template;
    };
    DxiTabComponent.prototype.ngAfterViewInit = function () {
        extractTemplate(this, this.element, this.renderer, this.document);
    };
    DxiTabComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] },
        { type: Renderer2 },
        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },
        { type: DxTemplateHost, decorators: [{ type: Host }] },
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxiTabComponent.prototype, "alignItemLabels", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiTabComponent.prototype, "badge", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiTabComponent.prototype, "colCount", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiTabComponent.prototype, "colCountByScreen", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxiTabComponent.prototype, "disabled", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiTabComponent.prototype, "icon", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxiTabComponent.prototype, "items", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiTabComponent.prototype, "tabTemplate", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiTabComponent.prototype, "template", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiTabComponent.prototype, "title", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxiTabComponent.prototype, "commands", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxiTabComponent.prototype, "groups", null);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiItemComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxiTabComponent.prototype, "itemsChildren", null);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiCommandComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxiTabComponent.prototype, "commandsChildren", null);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiGroupComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxiTabComponent.prototype, "groupsChildren", null);
    DxiTabComponent = __decorate([
        Component({
            selector: 'dxi-tab',
            template: '<ng-content></ng-content>',
            providers: [NestedOptionHost, DxTemplateHost],
            styles: [':host { display: block; }']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __param(3, Inject(DOCUMENT)),
        __param(4, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost,
            Renderer2, Object, DxTemplateHost,
            ElementRef])
    ], DxiTabComponent);
    return DxiTabComponent;
}(CollectionNestedOption));
var DxiTabModule = /** @class */ (function () {
    function DxiTabModule() {
    }
    DxiTabModule = __decorate([
        NgModule({
            declarations: [
                DxiTabComponent
            ],
            exports: [
                DxiTabComponent
            ],
        })
    ], DxiTabModule);
    return DxiTabModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiLocationComponent = /** @class */ (function (_super) {
    __extends(DxiLocationComponent, _super);
    function DxiLocationComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiLocationComponent.prototype, "lat", {
        get: function () {
            return this._getOption('lat');
        },
        set: function (value) {
            this._setOption('lat', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLocationComponent.prototype, "lng", {
        get: function () {
            return this._getOption('lng');
        },
        set: function (value) {
            this._setOption('lng', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLocationComponent.prototype, "col", {
        get: function () {
            return this._getOption('col');
        },
        set: function (value) {
            this._setOption('col', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLocationComponent.prototype, "colspan", {
        get: function () {
            return this._getOption('colspan');
        },
        set: function (value) {
            this._setOption('colspan', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLocationComponent.prototype, "row", {
        get: function () {
            return this._getOption('row');
        },
        set: function (value) {
            this._setOption('row', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLocationComponent.prototype, "rowspan", {
        get: function () {
            return this._getOption('rowspan');
        },
        set: function (value) {
            this._setOption('rowspan', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLocationComponent.prototype, "screen", {
        get: function () {
            return this._getOption('screen');
        },
        set: function (value) {
            this._setOption('screen', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLocationComponent.prototype, "_optionPath", {
        get: function () {
            return 'location';
        },
        enumerable: true,
        configurable: true
    });
    DxiLocationComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiLocationComponent.prototype, "lat", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiLocationComponent.prototype, "lng", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiLocationComponent.prototype, "col", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiLocationComponent.prototype, "colspan", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiLocationComponent.prototype, "row", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiLocationComponent.prototype, "rowspan", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiLocationComponent.prototype, "screen", null);
    DxiLocationComponent = __decorate([
        Component({
            selector: 'dxi-location',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiLocationComponent);
    return DxiLocationComponent;
}(CollectionNestedOption));
var DxiLocationModule = /** @class */ (function () {
    function DxiLocationModule() {
    }
    DxiLocationModule = __decorate([
        NgModule({
            declarations: [
                DxiLocationComponent
            ],
            exports: [
                DxiLocationComponent
            ],
        })
    ], DxiLocationModule);
    return DxiLocationModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiItemComponent = /** @class */ (function (_super) {
    __extends(DxiItemComponent, _super);
    function DxiItemComponent(parentOptionHost, optionHost, renderer, document, templateHost, element) {
        var _this = _super.call(this) || this;
        _this.renderer = renderer;
        _this.document = document;
        _this.element = element;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        templateHost.setHost(_this);
        return _this;
    }
    DxiItemComponent_1 = DxiItemComponent;
    Object.defineProperty(DxiItemComponent.prototype, "_optionPath", {
        get: function () {
            return 'items';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiItemComponent.prototype, "itemsChildren", {
        get: function () {
            return this._getOption('items');
        },
        set: function (value) {
            this.setChildren('items', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiItemComponent.prototype, "validationRulesChildren", {
        get: function () {
            return this._getOption('validationRules');
        },
        set: function (value) {
            this.setChildren('validationRules', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiItemComponent.prototype, "tabsChildren", {
        get: function () {
            return this._getOption('tabs');
        },
        set: function (value) {
            this.setChildren('tabs', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiItemComponent.prototype, "locationChildren", {
        get: function () {
            return this._getOption('location');
        },
        set: function (value) {
            this.setChildren('location', value);
        },
        enumerable: true,
        configurable: true
    });
    DxiItemComponent.prototype.setTemplate = function (template) {
        this.template = template;
    };
    DxiItemComponent.prototype.ngAfterViewInit = function () {
        extractTemplate(this, this.element, this.renderer, this.document);
    };
    var DxiItemComponent_1;
    DxiItemComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] },
        { type: Renderer2 },
        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },
        { type: DxTemplateHost, decorators: [{ type: Host }] },
        { type: ElementRef }
    ]; };
    __decorate([
        ContentChildren(forwardRef(function () { return DxiItemComponent_1; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxiItemComponent.prototype, "itemsChildren", null);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiValidationRuleComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxiItemComponent.prototype, "validationRulesChildren", null);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiTabComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxiItemComponent.prototype, "tabsChildren", null);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiLocationComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxiItemComponent.prototype, "locationChildren", null);
    DxiItemComponent = DxiItemComponent_1 = __decorate([
        Component({
            selector: 'dxi-item',
            template: '<ng-content></ng-content>',
            providers: [NestedOptionHost, DxTemplateHost],
            inputs: [
                'disabled',
                'html',
                'icon',
                'template',
                'text',
                'title',
                'visible',
                'onClick',
                'type',
                'baseSize',
                'box',
                'ratio',
                'shrink',
                'hint',
                'beginGroup',
                'closeMenuOnClick',
                'items',
                'selectable',
                'selected',
                'colSpan',
                'cssClass',
                'dataField',
                'editorOptions',
                'editorType',
                'helpText',
                'isRequired',
                'itemType',
                'label',
                'name',
                'validationRules',
                'visibleIndex',
                'alignItemLabels',
                'caption',
                'colCount',
                'colCountByScreen',
                'tabPanelOptions',
                'tabs',
                'badge',
                'tabTemplate',
                'alignment',
                'buttonOptions',
                'horizontalAlignment',
                'verticalAlignment',
                'height',
                'width',
                'locateInMenu',
                'location',
                'menuItemTemplate',
                'options',
                'showText',
                'widget',
                'imageAlt',
                'imageSrc',
                'formatName',
                'formatValues',
                'key',
                'showChevron',
                'menuTemplate',
                'heightRatio',
                'widthRatio',
                'expanded',
                'hasItems',
                'parentId'
            ],
            styles: [':host { display: block; }']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __param(3, Inject(DOCUMENT)),
        __param(4, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost,
            Renderer2, Object, DxTemplateHost,
            ElementRef])
    ], DxiItemComponent);
    return DxiItemComponent;
}(DxiButtonGroupItem));
var DxiItemModule = /** @class */ (function () {
    function DxiItemModule() {
    }
    DxiItemModule = __decorate([
        NgModule({
            declarations: [
                DxiItemComponent
            ],
            exports: [
                DxiItemComponent
            ],
        })
    ], DxiItemModule);
    return DxiItemModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoBoxComponent = /** @class */ (function (_super) {
    __extends(DxoBoxComponent, _super);
    function DxoBoxComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        _this._createEventEmitters([
            { emit: 'itemsChange' }
        ]);
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoBoxComponent.prototype, "_optionPath", {
        get: function () {
            return 'box';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBoxComponent.prototype, "itemsChildren", {
        get: function () {
            return this._getOption('items');
        },
        set: function (value) {
            this.setChildren('items', value);
        },
        enumerable: true,
        configurable: true
    });
    DxoBoxComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoBoxComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoBoxComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxoBoxComponent.prototype, "itemsChange", void 0);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiItemComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxoBoxComponent.prototype, "itemsChildren", null);
    DxoBoxComponent = __decorate([
        Component({
            selector: 'dxo-box',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'align',
                'crossAlign',
                'dataSource',
                'direction',
                'disabled',
                'elementAttr',
                'height',
                'hoverStateEnabled',
                'itemHoldTimeout',
                'items',
                'itemTemplate',
                'onContentReady',
                'onDisposing',
                'onInitialized',
                'onItemClick',
                'onItemContextMenu',
                'onItemHold',
                'onItemRendered',
                'onOptionChanged',
                'rtlEnabled',
                'visible',
                'width'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoBoxComponent);
    return DxoBoxComponent;
}(DxoBoxOptions));
var DxoBoxModule = /** @class */ (function () {
    function DxoBoxModule() {
    }
    DxoBoxModule = __decorate([
        NgModule({
            declarations: [
                DxoBoxComponent
            ],
            exports: [
                DxoBoxComponent
            ],
        })
    ], DxoBoxModule);
    return DxoBoxModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoBreakStyleComponent = /** @class */ (function (_super) {
    __extends(DxoBreakStyleComponent, _super);
    function DxoBreakStyleComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoBreakStyleComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBreakStyleComponent.prototype, "line", {
        get: function () {
            return this._getOption('line');
        },
        set: function (value) {
            this._setOption('line', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBreakStyleComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoBreakStyleComponent.prototype, "_optionPath", {
        get: function () {
            return 'breakStyle';
        },
        enumerable: true,
        configurable: true
    });
    DxoBreakStyleComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoBreakStyleComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoBreakStyleComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoBreakStyleComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoBreakStyleComponent.prototype, "line", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoBreakStyleComponent.prototype, "width", null);
    DxoBreakStyleComponent = __decorate([
        Component({
            selector: 'dxo-break-style',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoBreakStyleComponent);
    return DxoBreakStyleComponent;
}(NestedOption));
var DxoBreakStyleModule = /** @class */ (function () {
    function DxoBreakStyleModule() {
    }
    DxoBreakStyleModule = __decorate([
        NgModule({
            declarations: [
                DxoBreakStyleComponent
            ],
            exports: [
                DxoBreakStyleComponent
            ],
        })
    ], DxoBreakStyleModule);
    return DxoBreakStyleModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoBubbleComponent = /** @class */ (function (_super) {
    __extends(DxoBubbleComponent, _super);
    function DxoBubbleComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoBubbleComponent.prototype, "_optionPath", {
        get: function () {
            return 'bubble';
        },
        enumerable: true,
        configurable: true
    });
    DxoBubbleComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoBubbleComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoBubbleComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoBubbleComponent = __decorate([
        Component({
            selector: 'dxo-bubble',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'aggregation',
                'area',
                'argumentField',
                'axis',
                'bar',
                'barOverlapGroup',
                'barPadding',
                'barWidth',
                'border',
                'bubble',
                'candlestick',
                'closeValueField',
                'color',
                'cornerRadius',
                'dashStyle',
                'fullstackedarea',
                'fullstackedbar',
                'fullstackedline',
                'fullstackedspline',
                'fullstackedsplinearea',
                'highValueField',
                'hoverMode',
                'hoverStyle',
                'ignoreEmptyPoints',
                'innerColor',
                'label',
                'line',
                'lowValueField',
                'maxLabelCount',
                'minBarSize',
                'opacity',
                'openValueField',
                'pane',
                'point',
                'rangearea',
                'rangebar',
                'rangeValue1Field',
                'rangeValue2Field',
                'reduction',
                'scatter',
                'selectionMode',
                'selectionStyle',
                'showInLegend',
                'sizeField',
                'spline',
                'splinearea',
                'stack',
                'stackedarea',
                'stackedbar',
                'stackedline',
                'stackedspline',
                'stackedsplinearea',
                'steparea',
                'stepline',
                'stock',
                'tagField',
                'type',
                'valueErrorBar',
                'valueField',
                'visible',
                'width'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoBubbleComponent);
    return DxoBubbleComponent;
}(DxoChartCommonSeriesSettings));
var DxoBubbleModule = /** @class */ (function () {
    function DxoBubbleModule() {
    }
    DxoBubbleModule = __decorate([
        NgModule({
            declarations: [
                DxoBubbleComponent
            ],
            exports: [
                DxoBubbleComponent
            ],
        })
    ], DxoBubbleModule);
    return DxoBubbleModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiTextEditorButton = /** @class */ (function (_super) {
    __extends(DxiTextEditorButton, _super);
    function DxiTextEditorButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DxiTextEditorButton.prototype, "location", {
        get: function () {
            return this._getOption('location');
        },
        set: function (value) {
            this._setOption('location', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiTextEditorButton.prototype, "name", {
        get: function () {
            return this._getOption('name');
        },
        set: function (value) {
            this._setOption('name', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiTextEditorButton.prototype, "options", {
        get: function () {
            return this._getOption('options');
        },
        set: function (value) {
            this._setOption('options', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiTextEditorButton.prototype, "cssClass", {
        get: function () {
            return this._getOption('cssClass');
        },
        set: function (value) {
            this._setOption('cssClass', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiTextEditorButton.prototype, "hint", {
        get: function () {
            return this._getOption('hint');
        },
        set: function (value) {
            this._setOption('hint', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiTextEditorButton.prototype, "icon", {
        get: function () {
            return this._getOption('icon');
        },
        set: function (value) {
            this._setOption('icon', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiTextEditorButton.prototype, "onClick", {
        get: function () {
            return this._getOption('onClick');
        },
        set: function (value) {
            this._setOption('onClick', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiTextEditorButton.prototype, "template", {
        get: function () {
            return this._getOption('template');
        },
        set: function (value) {
            this._setOption('template', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiTextEditorButton.prototype, "text", {
        get: function () {
            return this._getOption('text');
        },
        set: function (value) {
            this._setOption('text', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiTextEditorButton.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    return DxiTextEditorButton;
}(CollectionNestedOption));

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiButtonComponent = /** @class */ (function (_super) {
    __extends(DxiButtonComponent, _super);
    function DxiButtonComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiButtonComponent.prototype, "_optionPath", {
        get: function () {
            return 'buttons';
        },
        enumerable: true,
        configurable: true
    });
    DxiButtonComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxiButtonComponent = __decorate([
        Component({
            selector: 'dxi-button',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'location',
                'name',
                'options',
                'cssClass',
                'hint',
                'icon',
                'onClick',
                'template',
                'text',
                'visible'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiButtonComponent);
    return DxiButtonComponent;
}(DxiTextEditorButton));
var DxiButtonModule = /** @class */ (function () {
    function DxiButtonModule() {
    }
    DxiButtonModule = __decorate([
        NgModule({
            declarations: [
                DxiButtonComponent
            ],
            exports: [
                DxiButtonComponent
            ],
        })
    ], DxiButtonModule);
    return DxiButtonModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoButtonOptions = /** @class */ (function (_super) {
    __extends(DxoButtonOptions, _super);
    function DxoButtonOptions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DxoButtonOptions.prototype, "accessKey", {
        get: function () {
            return this._getOption('accessKey');
        },
        set: function (value) {
            this._setOption('accessKey', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoButtonOptions.prototype, "activeStateEnabled", {
        get: function () {
            return this._getOption('activeStateEnabled');
        },
        set: function (value) {
            this._setOption('activeStateEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoButtonOptions.prototype, "disabled", {
        get: function () {
            return this._getOption('disabled');
        },
        set: function (value) {
            this._setOption('disabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoButtonOptions.prototype, "elementAttr", {
        get: function () {
            return this._getOption('elementAttr');
        },
        set: function (value) {
            this._setOption('elementAttr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoButtonOptions.prototype, "focusStateEnabled", {
        get: function () {
            return this._getOption('focusStateEnabled');
        },
        set: function (value) {
            this._setOption('focusStateEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoButtonOptions.prototype, "height", {
        get: function () {
            return this._getOption('height');
        },
        set: function (value) {
            this._setOption('height', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoButtonOptions.prototype, "hint", {
        get: function () {
            return this._getOption('hint');
        },
        set: function (value) {
            this._setOption('hint', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoButtonOptions.prototype, "hoverStateEnabled", {
        get: function () {
            return this._getOption('hoverStateEnabled');
        },
        set: function (value) {
            this._setOption('hoverStateEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoButtonOptions.prototype, "icon", {
        get: function () {
            return this._getOption('icon');
        },
        set: function (value) {
            this._setOption('icon', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoButtonOptions.prototype, "onClick", {
        get: function () {
            return this._getOption('onClick');
        },
        set: function (value) {
            this._setOption('onClick', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoButtonOptions.prototype, "onContentReady", {
        get: function () {
            return this._getOption('onContentReady');
        },
        set: function (value) {
            this._setOption('onContentReady', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoButtonOptions.prototype, "onDisposing", {
        get: function () {
            return this._getOption('onDisposing');
        },
        set: function (value) {
            this._setOption('onDisposing', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoButtonOptions.prototype, "onInitialized", {
        get: function () {
            return this._getOption('onInitialized');
        },
        set: function (value) {
            this._setOption('onInitialized', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoButtonOptions.prototype, "onOptionChanged", {
        get: function () {
            return this._getOption('onOptionChanged');
        },
        set: function (value) {
            this._setOption('onOptionChanged', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoButtonOptions.prototype, "rtlEnabled", {
        get: function () {
            return this._getOption('rtlEnabled');
        },
        set: function (value) {
            this._setOption('rtlEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoButtonOptions.prototype, "stylingMode", {
        get: function () {
            return this._getOption('stylingMode');
        },
        set: function (value) {
            this._setOption('stylingMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoButtonOptions.prototype, "tabIndex", {
        get: function () {
            return this._getOption('tabIndex');
        },
        set: function (value) {
            this._setOption('tabIndex', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoButtonOptions.prototype, "template", {
        get: function () {
            return this._getOption('template');
        },
        set: function (value) {
            this._setOption('template', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoButtonOptions.prototype, "text", {
        get: function () {
            return this._getOption('text');
        },
        set: function (value) {
            this._setOption('text', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoButtonOptions.prototype, "type", {
        get: function () {
            return this._getOption('type');
        },
        set: function (value) {
            this._setOption('type', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoButtonOptions.prototype, "useSubmitBehavior", {
        get: function () {
            return this._getOption('useSubmitBehavior');
        },
        set: function (value) {
            this._setOption('useSubmitBehavior', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoButtonOptions.prototype, "validationGroup", {
        get: function () {
            return this._getOption('validationGroup');
        },
        set: function (value) {
            this._setOption('validationGroup', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoButtonOptions.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoButtonOptions.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    return DxoButtonOptions;
}(NestedOption));

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoButtonOptionsComponent = /** @class */ (function (_super) {
    __extends(DxoButtonOptionsComponent, _super);
    function DxoButtonOptionsComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoButtonOptionsComponent.prototype, "_optionPath", {
        get: function () {
            return 'buttonOptions';
        },
        enumerable: true,
        configurable: true
    });
    DxoButtonOptionsComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoButtonOptionsComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoButtonOptionsComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoButtonOptionsComponent = __decorate([
        Component({
            selector: 'dxo-button-options',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'accessKey',
                'activeStateEnabled',
                'disabled',
                'elementAttr',
                'focusStateEnabled',
                'height',
                'hint',
                'hoverStateEnabled',
                'icon',
                'onClick',
                'onContentReady',
                'onDisposing',
                'onInitialized',
                'onOptionChanged',
                'rtlEnabled',
                'stylingMode',
                'tabIndex',
                'template',
                'text',
                'type',
                'useSubmitBehavior',
                'validationGroup',
                'visible',
                'width'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoButtonOptionsComponent);
    return DxoButtonOptionsComponent;
}(DxoButtonOptions));
var DxoButtonOptionsModule = /** @class */ (function () {
    function DxoButtonOptionsModule() {
    }
    DxoButtonOptionsModule = __decorate([
        NgModule({
            declarations: [
                DxoButtonOptionsComponent
            ],
            exports: [
                DxoButtonOptionsComponent
            ],
        })
    ], DxoButtonOptionsModule);
    return DxoButtonOptionsModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoCalendarOptions = /** @class */ (function (_super) {
    __extends(DxoCalendarOptions, _super);
    function DxoCalendarOptions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DxoCalendarOptions.prototype, "accessKey", {
        get: function () {
            return this._getOption('accessKey');
        },
        set: function (value) {
            this._setOption('accessKey', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCalendarOptions.prototype, "activeStateEnabled", {
        get: function () {
            return this._getOption('activeStateEnabled');
        },
        set: function (value) {
            this._setOption('activeStateEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCalendarOptions.prototype, "cellTemplate", {
        get: function () {
            return this._getOption('cellTemplate');
        },
        set: function (value) {
            this._setOption('cellTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCalendarOptions.prototype, "dateSerializationFormat", {
        get: function () {
            return this._getOption('dateSerializationFormat');
        },
        set: function (value) {
            this._setOption('dateSerializationFormat', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCalendarOptions.prototype, "disabled", {
        get: function () {
            return this._getOption('disabled');
        },
        set: function (value) {
            this._setOption('disabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCalendarOptions.prototype, "disabledDates", {
        get: function () {
            return this._getOption('disabledDates');
        },
        set: function (value) {
            this._setOption('disabledDates', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCalendarOptions.prototype, "elementAttr", {
        get: function () {
            return this._getOption('elementAttr');
        },
        set: function (value) {
            this._setOption('elementAttr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCalendarOptions.prototype, "firstDayOfWeek", {
        get: function () {
            return this._getOption('firstDayOfWeek');
        },
        set: function (value) {
            this._setOption('firstDayOfWeek', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCalendarOptions.prototype, "focusStateEnabled", {
        get: function () {
            return this._getOption('focusStateEnabled');
        },
        set: function (value) {
            this._setOption('focusStateEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCalendarOptions.prototype, "height", {
        get: function () {
            return this._getOption('height');
        },
        set: function (value) {
            this._setOption('height', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCalendarOptions.prototype, "hint", {
        get: function () {
            return this._getOption('hint');
        },
        set: function (value) {
            this._setOption('hint', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCalendarOptions.prototype, "hoverStateEnabled", {
        get: function () {
            return this._getOption('hoverStateEnabled');
        },
        set: function (value) {
            this._setOption('hoverStateEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCalendarOptions.prototype, "isValid", {
        get: function () {
            return this._getOption('isValid');
        },
        set: function (value) {
            this._setOption('isValid', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCalendarOptions.prototype, "max", {
        get: function () {
            return this._getOption('max');
        },
        set: function (value) {
            this._setOption('max', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCalendarOptions.prototype, "maxZoomLevel", {
        get: function () {
            return this._getOption('maxZoomLevel');
        },
        set: function (value) {
            this._setOption('maxZoomLevel', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCalendarOptions.prototype, "min", {
        get: function () {
            return this._getOption('min');
        },
        set: function (value) {
            this._setOption('min', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCalendarOptions.prototype, "minZoomLevel", {
        get: function () {
            return this._getOption('minZoomLevel');
        },
        set: function (value) {
            this._setOption('minZoomLevel', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCalendarOptions.prototype, "name", {
        get: function () {
            return this._getOption('name');
        },
        set: function (value) {
            this._setOption('name', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCalendarOptions.prototype, "onDisposing", {
        get: function () {
            return this._getOption('onDisposing');
        },
        set: function (value) {
            this._setOption('onDisposing', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCalendarOptions.prototype, "onInitialized", {
        get: function () {
            return this._getOption('onInitialized');
        },
        set: function (value) {
            this._setOption('onInitialized', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCalendarOptions.prototype, "onOptionChanged", {
        get: function () {
            return this._getOption('onOptionChanged');
        },
        set: function (value) {
            this._setOption('onOptionChanged', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCalendarOptions.prototype, "onValueChanged", {
        get: function () {
            return this._getOption('onValueChanged');
        },
        set: function (value) {
            this._setOption('onValueChanged', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCalendarOptions.prototype, "readOnly", {
        get: function () {
            return this._getOption('readOnly');
        },
        set: function (value) {
            this._setOption('readOnly', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCalendarOptions.prototype, "rtlEnabled", {
        get: function () {
            return this._getOption('rtlEnabled');
        },
        set: function (value) {
            this._setOption('rtlEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCalendarOptions.prototype, "showTodayButton", {
        get: function () {
            return this._getOption('showTodayButton');
        },
        set: function (value) {
            this._setOption('showTodayButton', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCalendarOptions.prototype, "tabIndex", {
        get: function () {
            return this._getOption('tabIndex');
        },
        set: function (value) {
            this._setOption('tabIndex', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCalendarOptions.prototype, "validationError", {
        get: function () {
            return this._getOption('validationError');
        },
        set: function (value) {
            this._setOption('validationError', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCalendarOptions.prototype, "validationErrors", {
        get: function () {
            return this._getOption('validationErrors');
        },
        set: function (value) {
            this._setOption('validationErrors', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCalendarOptions.prototype, "validationMessageMode", {
        get: function () {
            return this._getOption('validationMessageMode');
        },
        set: function (value) {
            this._setOption('validationMessageMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCalendarOptions.prototype, "validationStatus", {
        get: function () {
            return this._getOption('validationStatus');
        },
        set: function (value) {
            this._setOption('validationStatus', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCalendarOptions.prototype, "value", {
        get: function () {
            return this._getOption('value');
        },
        set: function (value) {
            this._setOption('value', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCalendarOptions.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCalendarOptions.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCalendarOptions.prototype, "zoomLevel", {
        get: function () {
            return this._getOption('zoomLevel');
        },
        set: function (value) {
            this._setOption('zoomLevel', value);
        },
        enumerable: true,
        configurable: true
    });
    return DxoCalendarOptions;
}(NestedOption));

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoCalendarOptionsComponent = /** @class */ (function (_super) {
    __extends(DxoCalendarOptionsComponent, _super);
    function DxoCalendarOptionsComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        _this._createEventEmitters([
            { emit: 'valueChange' },
            { emit: 'zoomLevelChange' }
        ]);
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoCalendarOptionsComponent.prototype, "_optionPath", {
        get: function () {
            return 'calendarOptions';
        },
        enumerable: true,
        configurable: true
    });
    DxoCalendarOptionsComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoCalendarOptionsComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoCalendarOptionsComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxoCalendarOptionsComponent.prototype, "valueChange", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxoCalendarOptionsComponent.prototype, "zoomLevelChange", void 0);
    DxoCalendarOptionsComponent = __decorate([
        Component({
            selector: 'dxo-calendar-options',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'accessKey',
                'activeStateEnabled',
                'cellTemplate',
                'dateSerializationFormat',
                'disabled',
                'disabledDates',
                'elementAttr',
                'firstDayOfWeek',
                'focusStateEnabled',
                'height',
                'hint',
                'hoverStateEnabled',
                'isValid',
                'max',
                'maxZoomLevel',
                'min',
                'minZoomLevel',
                'name',
                'onDisposing',
                'onInitialized',
                'onOptionChanged',
                'onValueChanged',
                'readOnly',
                'rtlEnabled',
                'showTodayButton',
                'tabIndex',
                'validationError',
                'validationErrors',
                'validationMessageMode',
                'validationStatus',
                'value',
                'visible',
                'width',
                'zoomLevel'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoCalendarOptionsComponent);
    return DxoCalendarOptionsComponent;
}(DxoCalendarOptions));
var DxoCalendarOptionsModule = /** @class */ (function () {
    function DxoCalendarOptionsModule() {
    }
    DxoCalendarOptionsModule = __decorate([
        NgModule({
            declarations: [
                DxoCalendarOptionsComponent
            ],
            exports: [
                DxoCalendarOptionsComponent
            ],
        })
    ], DxoCalendarOptionsModule);
    return DxoCalendarOptionsModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoCandlestickComponent = /** @class */ (function (_super) {
    __extends(DxoCandlestickComponent, _super);
    function DxoCandlestickComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoCandlestickComponent.prototype, "_optionPath", {
        get: function () {
            return 'candlestick';
        },
        enumerable: true,
        configurable: true
    });
    DxoCandlestickComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoCandlestickComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoCandlestickComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoCandlestickComponent = __decorate([
        Component({
            selector: 'dxo-candlestick',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'aggregation',
                'area',
                'argumentField',
                'axis',
                'bar',
                'barOverlapGroup',
                'barPadding',
                'barWidth',
                'border',
                'bubble',
                'candlestick',
                'closeValueField',
                'color',
                'cornerRadius',
                'dashStyle',
                'fullstackedarea',
                'fullstackedbar',
                'fullstackedline',
                'fullstackedspline',
                'fullstackedsplinearea',
                'highValueField',
                'hoverMode',
                'hoverStyle',
                'ignoreEmptyPoints',
                'innerColor',
                'label',
                'line',
                'lowValueField',
                'maxLabelCount',
                'minBarSize',
                'opacity',
                'openValueField',
                'pane',
                'point',
                'rangearea',
                'rangebar',
                'rangeValue1Field',
                'rangeValue2Field',
                'reduction',
                'scatter',
                'selectionMode',
                'selectionStyle',
                'showInLegend',
                'sizeField',
                'spline',
                'splinearea',
                'stack',
                'stackedarea',
                'stackedbar',
                'stackedline',
                'stackedspline',
                'stackedsplinearea',
                'steparea',
                'stepline',
                'stock',
                'tagField',
                'type',
                'valueErrorBar',
                'valueField',
                'visible',
                'width'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoCandlestickComponent);
    return DxoCandlestickComponent;
}(DxoChartCommonSeriesSettings));
var DxoCandlestickModule = /** @class */ (function () {
    function DxoCandlestickModule() {
    }
    DxoCandlestickModule = __decorate([
        NgModule({
            declarations: [
                DxoCandlestickComponent
            ],
            exports: [
                DxoCandlestickComponent
            ],
        })
    ], DxoCandlestickModule);
    return DxoCandlestickModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiCenterComponent = /** @class */ (function (_super) {
    __extends(DxiCenterComponent, _super);
    function DxiCenterComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiCenterComponent.prototype, "lat", {
        get: function () {
            return this._getOption('lat');
        },
        set: function (value) {
            this._setOption('lat', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCenterComponent.prototype, "lng", {
        get: function () {
            return this._getOption('lng');
        },
        set: function (value) {
            this._setOption('lng', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCenterComponent.prototype, "_optionPath", {
        get: function () {
            return 'center';
        },
        enumerable: true,
        configurable: true
    });
    DxiCenterComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiCenterComponent.prototype, "lat", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiCenterComponent.prototype, "lng", null);
    DxiCenterComponent = __decorate([
        Component({
            selector: 'dxi-center',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiCenterComponent);
    return DxiCenterComponent;
}(CollectionNestedOption));
var DxiCenterModule = /** @class */ (function () {
    function DxiCenterModule() {
    }
    DxiCenterModule = __decorate([
        NgModule({
            declarations: [
                DxiCenterComponent
            ],
            exports: [
                DxiCenterComponent
            ],
        })
    ], DxiCenterModule);
    return DxiCenterModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiChartSeries = /** @class */ (function (_super) {
    __extends(DxiChartSeries, _super);
    function DxiChartSeries() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DxiChartSeries.prototype, "aggregation", {
        get: function () {
            return this._getOption('aggregation');
        },
        set: function (value) {
            this._setOption('aggregation', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "argumentField", {
        get: function () {
            return this._getOption('argumentField');
        },
        set: function (value) {
            this._setOption('argumentField', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "axis", {
        get: function () {
            return this._getOption('axis');
        },
        set: function (value) {
            this._setOption('axis', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "barOverlapGroup", {
        get: function () {
            return this._getOption('barOverlapGroup');
        },
        set: function (value) {
            this._setOption('barOverlapGroup', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "barPadding", {
        get: function () {
            return this._getOption('barPadding');
        },
        set: function (value) {
            this._setOption('barPadding', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "barWidth", {
        get: function () {
            return this._getOption('barWidth');
        },
        set: function (value) {
            this._setOption('barWidth', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "border", {
        get: function () {
            return this._getOption('border');
        },
        set: function (value) {
            this._setOption('border', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "closeValueField", {
        get: function () {
            return this._getOption('closeValueField');
        },
        set: function (value) {
            this._setOption('closeValueField', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "cornerRadius", {
        get: function () {
            return this._getOption('cornerRadius');
        },
        set: function (value) {
            this._setOption('cornerRadius', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "dashStyle", {
        get: function () {
            return this._getOption('dashStyle');
        },
        set: function (value) {
            this._setOption('dashStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "highValueField", {
        get: function () {
            return this._getOption('highValueField');
        },
        set: function (value) {
            this._setOption('highValueField', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "hoverMode", {
        get: function () {
            return this._getOption('hoverMode');
        },
        set: function (value) {
            this._setOption('hoverMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "hoverStyle", {
        get: function () {
            return this._getOption('hoverStyle');
        },
        set: function (value) {
            this._setOption('hoverStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "ignoreEmptyPoints", {
        get: function () {
            return this._getOption('ignoreEmptyPoints');
        },
        set: function (value) {
            this._setOption('ignoreEmptyPoints', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "innerColor", {
        get: function () {
            return this._getOption('innerColor');
        },
        set: function (value) {
            this._setOption('innerColor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "label", {
        get: function () {
            return this._getOption('label');
        },
        set: function (value) {
            this._setOption('label', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "lowValueField", {
        get: function () {
            return this._getOption('lowValueField');
        },
        set: function (value) {
            this._setOption('lowValueField', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "maxLabelCount", {
        get: function () {
            return this._getOption('maxLabelCount');
        },
        set: function (value) {
            this._setOption('maxLabelCount', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "minBarSize", {
        get: function () {
            return this._getOption('minBarSize');
        },
        set: function (value) {
            this._setOption('minBarSize', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "name", {
        get: function () {
            return this._getOption('name');
        },
        set: function (value) {
            this._setOption('name', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "opacity", {
        get: function () {
            return this._getOption('opacity');
        },
        set: function (value) {
            this._setOption('opacity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "openValueField", {
        get: function () {
            return this._getOption('openValueField');
        },
        set: function (value) {
            this._setOption('openValueField', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "pane", {
        get: function () {
            return this._getOption('pane');
        },
        set: function (value) {
            this._setOption('pane', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "point", {
        get: function () {
            return this._getOption('point');
        },
        set: function (value) {
            this._setOption('point', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "rangeValue1Field", {
        get: function () {
            return this._getOption('rangeValue1Field');
        },
        set: function (value) {
            this._setOption('rangeValue1Field', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "rangeValue2Field", {
        get: function () {
            return this._getOption('rangeValue2Field');
        },
        set: function (value) {
            this._setOption('rangeValue2Field', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "reduction", {
        get: function () {
            return this._getOption('reduction');
        },
        set: function (value) {
            this._setOption('reduction', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "selectionMode", {
        get: function () {
            return this._getOption('selectionMode');
        },
        set: function (value) {
            this._setOption('selectionMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "selectionStyle", {
        get: function () {
            return this._getOption('selectionStyle');
        },
        set: function (value) {
            this._setOption('selectionStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "showInLegend", {
        get: function () {
            return this._getOption('showInLegend');
        },
        set: function (value) {
            this._setOption('showInLegend', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "sizeField", {
        get: function () {
            return this._getOption('sizeField');
        },
        set: function (value) {
            this._setOption('sizeField', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "stack", {
        get: function () {
            return this._getOption('stack');
        },
        set: function (value) {
            this._setOption('stack', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "tag", {
        get: function () {
            return this._getOption('tag');
        },
        set: function (value) {
            this._setOption('tag', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "tagField", {
        get: function () {
            return this._getOption('tagField');
        },
        set: function (value) {
            this._setOption('tagField', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "type", {
        get: function () {
            return this._getOption('type');
        },
        set: function (value) {
            this._setOption('type', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "valueErrorBar", {
        get: function () {
            return this._getOption('valueErrorBar');
        },
        set: function (value) {
            this._setOption('valueErrorBar', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "valueField", {
        get: function () {
            return this._getOption('valueField');
        },
        set: function (value) {
            this._setOption('valueField', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "argumentType", {
        get: function () {
            return this._getOption('argumentType');
        },
        set: function (value) {
            this._setOption('argumentType', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "minSegmentSize", {
        get: function () {
            return this._getOption('minSegmentSize');
        },
        set: function (value) {
            this._setOption('minSegmentSize', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "smallValuesGrouping", {
        get: function () {
            return this._getOption('smallValuesGrouping');
        },
        set: function (value) {
            this._setOption('smallValuesGrouping', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiChartSeries.prototype, "closed", {
        get: function () {
            return this._getOption('closed');
        },
        set: function (value) {
            this._setOption('closed', value);
        },
        enumerable: true,
        configurable: true
    });
    return DxiChartSeries;
}(CollectionNestedOption));

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiSeriesComponent = /** @class */ (function (_super) {
    __extends(DxiSeriesComponent, _super);
    function DxiSeriesComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiSeriesComponent.prototype, "_optionPath", {
        get: function () {
            return 'series';
        },
        enumerable: true,
        configurable: true
    });
    DxiSeriesComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxiSeriesComponent = __decorate([
        Component({
            selector: 'dxi-series',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'aggregation',
                'argumentField',
                'axis',
                'barOverlapGroup',
                'barPadding',
                'barWidth',
                'border',
                'closeValueField',
                'color',
                'cornerRadius',
                'dashStyle',
                'highValueField',
                'hoverMode',
                'hoverStyle',
                'ignoreEmptyPoints',
                'innerColor',
                'label',
                'lowValueField',
                'maxLabelCount',
                'minBarSize',
                'name',
                'opacity',
                'openValueField',
                'pane',
                'point',
                'rangeValue1Field',
                'rangeValue2Field',
                'reduction',
                'selectionMode',
                'selectionStyle',
                'showInLegend',
                'sizeField',
                'stack',
                'tag',
                'tagField',
                'type',
                'valueErrorBar',
                'valueField',
                'visible',
                'width',
                'argumentType',
                'minSegmentSize',
                'smallValuesGrouping',
                'closed'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiSeriesComponent);
    return DxiSeriesComponent;
}(DxiChartSeries));
var DxiSeriesModule = /** @class */ (function () {
    function DxiSeriesModule() {
    }
    DxiSeriesModule = __decorate([
        NgModule({
            declarations: [
                DxiSeriesComponent
            ],
            exports: [
                DxiSeriesComponent
            ],
        })
    ], DxiSeriesModule);
    return DxiSeriesModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoChartComponent = /** @class */ (function (_super) {
    __extends(DxoChartComponent, _super);
    function DxoChartComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoChartComponent.prototype, "barGroupPadding", {
        get: function () {
            return this._getOption('barGroupPadding');
        },
        set: function (value) {
            this._setOption('barGroupPadding', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartComponent.prototype, "barGroupWidth", {
        get: function () {
            return this._getOption('barGroupWidth');
        },
        set: function (value) {
            this._setOption('barGroupWidth', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartComponent.prototype, "barWidth", {
        get: function () {
            return this._getOption('barWidth');
        },
        set: function (value) {
            this._setOption('barWidth', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartComponent.prototype, "bottomIndent", {
        get: function () {
            return this._getOption('bottomIndent');
        },
        set: function (value) {
            this._setOption('bottomIndent', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartComponent.prototype, "commonSeriesSettings", {
        get: function () {
            return this._getOption('commonSeriesSettings');
        },
        set: function (value) {
            this._setOption('commonSeriesSettings', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartComponent.prototype, "dataPrepareSettings", {
        get: function () {
            return this._getOption('dataPrepareSettings');
        },
        set: function (value) {
            this._setOption('dataPrepareSettings', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartComponent.prototype, "equalBarWidth", {
        get: function () {
            return this._getOption('equalBarWidth');
        },
        set: function (value) {
            this._setOption('equalBarWidth', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartComponent.prototype, "maxBubbleSize", {
        get: function () {
            return this._getOption('maxBubbleSize');
        },
        set: function (value) {
            this._setOption('maxBubbleSize', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartComponent.prototype, "minBubbleSize", {
        get: function () {
            return this._getOption('minBubbleSize');
        },
        set: function (value) {
            this._setOption('minBubbleSize', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartComponent.prototype, "negativesAsZeroes", {
        get: function () {
            return this._getOption('negativesAsZeroes');
        },
        set: function (value) {
            this._setOption('negativesAsZeroes', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartComponent.prototype, "palette", {
        get: function () {
            return this._getOption('palette');
        },
        set: function (value) {
            this._setOption('palette', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartComponent.prototype, "paletteExtensionMode", {
        get: function () {
            return this._getOption('paletteExtensionMode');
        },
        set: function (value) {
            this._setOption('paletteExtensionMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartComponent.prototype, "series", {
        get: function () {
            return this._getOption('series');
        },
        set: function (value) {
            this._setOption('series', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartComponent.prototype, "seriesTemplate", {
        get: function () {
            return this._getOption('seriesTemplate');
        },
        set: function (value) {
            this._setOption('seriesTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartComponent.prototype, "topIndent", {
        get: function () {
            return this._getOption('topIndent');
        },
        set: function (value) {
            this._setOption('topIndent', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartComponent.prototype, "useAggregation", {
        get: function () {
            return this._getOption('useAggregation');
        },
        set: function (value) {
            this._setOption('useAggregation', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartComponent.prototype, "valueAxis", {
        get: function () {
            return this._getOption('valueAxis');
        },
        set: function (value) {
            this._setOption('valueAxis', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartComponent.prototype, "_optionPath", {
        get: function () {
            return 'chart';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartComponent.prototype, "seriesChildren", {
        get: function () {
            return this._getOption('series');
        },
        set: function (value) {
            this.setChildren('series', value);
        },
        enumerable: true,
        configurable: true
    });
    DxoChartComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoChartComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoChartComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoChartComponent.prototype, "barGroupPadding", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoChartComponent.prototype, "barGroupWidth", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoChartComponent.prototype, "barWidth", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoChartComponent.prototype, "bottomIndent", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoChartComponent.prototype, "commonSeriesSettings", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoChartComponent.prototype, "dataPrepareSettings", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoChartComponent.prototype, "equalBarWidth", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoChartComponent.prototype, "maxBubbleSize", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoChartComponent.prototype, "minBubbleSize", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoChartComponent.prototype, "negativesAsZeroes", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoChartComponent.prototype, "palette", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoChartComponent.prototype, "paletteExtensionMode", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoChartComponent.prototype, "series", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoChartComponent.prototype, "seriesTemplate", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoChartComponent.prototype, "topIndent", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoChartComponent.prototype, "useAggregation", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoChartComponent.prototype, "valueAxis", null);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiSeriesComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxoChartComponent.prototype, "seriesChildren", null);
    DxoChartComponent = __decorate([
        Component({
            selector: 'dxo-chart',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoChartComponent);
    return DxoChartComponent;
}(NestedOption));
var DxoChartModule = /** @class */ (function () {
    function DxoChartModule() {
    }
    DxoChartModule = __decorate([
        NgModule({
            declarations: [
                DxoChartComponent
            ],
            exports: [
                DxoChartComponent
            ],
        })
    ], DxoChartModule);
    return DxoChartModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoColCountByScreenComponent = /** @class */ (function (_super) {
    __extends(DxoColCountByScreenComponent, _super);
    function DxoColCountByScreenComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoColCountByScreenComponent.prototype, "lg", {
        get: function () {
            return this._getOption('lg');
        },
        set: function (value) {
            this._setOption('lg', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoColCountByScreenComponent.prototype, "md", {
        get: function () {
            return this._getOption('md');
        },
        set: function (value) {
            this._setOption('md', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoColCountByScreenComponent.prototype, "sm", {
        get: function () {
            return this._getOption('sm');
        },
        set: function (value) {
            this._setOption('sm', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoColCountByScreenComponent.prototype, "xs", {
        get: function () {
            return this._getOption('xs');
        },
        set: function (value) {
            this._setOption('xs', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoColCountByScreenComponent.prototype, "_optionPath", {
        get: function () {
            return 'colCountByScreen';
        },
        enumerable: true,
        configurable: true
    });
    DxoColCountByScreenComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoColCountByScreenComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoColCountByScreenComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoColCountByScreenComponent.prototype, "lg", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoColCountByScreenComponent.prototype, "md", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoColCountByScreenComponent.prototype, "sm", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoColCountByScreenComponent.prototype, "xs", null);
    DxoColCountByScreenComponent = __decorate([
        Component({
            selector: 'dxo-col-count-by-screen',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoColCountByScreenComponent);
    return DxoColCountByScreenComponent;
}(NestedOption));
var DxoColCountByScreenModule = /** @class */ (function () {
    function DxoColCountByScreenModule() {
    }
    DxoColCountByScreenModule = __decorate([
        NgModule({
            declarations: [
                DxoColCountByScreenComponent
            ],
            exports: [
                DxoColCountByScreenComponent
            ],
        })
    ], DxoColCountByScreenModule);
    return DxoColCountByScreenModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiColComponent = /** @class */ (function (_super) {
    __extends(DxiColComponent, _super);
    function DxiColComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiColComponent.prototype, "baseSize", {
        get: function () {
            return this._getOption('baseSize');
        },
        set: function (value) {
            this._setOption('baseSize', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiColComponent.prototype, "ratio", {
        get: function () {
            return this._getOption('ratio');
        },
        set: function (value) {
            this._setOption('ratio', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiColComponent.prototype, "screen", {
        get: function () {
            return this._getOption('screen');
        },
        set: function (value) {
            this._setOption('screen', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiColComponent.prototype, "shrink", {
        get: function () {
            return this._getOption('shrink');
        },
        set: function (value) {
            this._setOption('shrink', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiColComponent.prototype, "_optionPath", {
        get: function () {
            return 'cols';
        },
        enumerable: true,
        configurable: true
    });
    DxiColComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiColComponent.prototype, "baseSize", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiColComponent.prototype, "ratio", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiColComponent.prototype, "screen", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiColComponent.prototype, "shrink", null);
    DxiColComponent = __decorate([
        Component({
            selector: 'dxi-col',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiColComponent);
    return DxiColComponent;
}(CollectionNestedOption));
var DxiColModule = /** @class */ (function () {
    function DxiColModule() {
    }
    DxiColModule = __decorate([
        NgModule({
            declarations: [
                DxiColComponent
            ],
            exports: [
                DxiColComponent
            ],
        })
    ], DxiColModule);
    return DxiColModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoCollisionComponent = /** @class */ (function (_super) {
    __extends(DxoCollisionComponent, _super);
    function DxoCollisionComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoCollisionComponent.prototype, "x", {
        get: function () {
            return this._getOption('x');
        },
        set: function (value) {
            this._setOption('x', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCollisionComponent.prototype, "y", {
        get: function () {
            return this._getOption('y');
        },
        set: function (value) {
            this._setOption('y', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCollisionComponent.prototype, "_optionPath", {
        get: function () {
            return 'collision';
        },
        enumerable: true,
        configurable: true
    });
    DxoCollisionComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoCollisionComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoCollisionComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoCollisionComponent.prototype, "x", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoCollisionComponent.prototype, "y", null);
    DxoCollisionComponent = __decorate([
        Component({
            selector: 'dxo-collision',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoCollisionComponent);
    return DxoCollisionComponent;
}(NestedOption));
var DxoCollisionModule = /** @class */ (function () {
    function DxoCollisionModule() {
    }
    DxoCollisionModule = __decorate([
        NgModule({
            declarations: [
                DxoCollisionComponent
            ],
            exports: [
                DxoCollisionComponent
            ],
        })
    ], DxoCollisionModule);
    return DxoCollisionModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoColorizerComponent = /** @class */ (function (_super) {
    __extends(DxoColorizerComponent, _super);
    function DxoColorizerComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoColorizerComponent.prototype, "colorCodeField", {
        get: function () {
            return this._getOption('colorCodeField');
        },
        set: function (value) {
            this._setOption('colorCodeField', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoColorizerComponent.prototype, "colorizeGroups", {
        get: function () {
            return this._getOption('colorizeGroups');
        },
        set: function (value) {
            this._setOption('colorizeGroups', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoColorizerComponent.prototype, "palette", {
        get: function () {
            return this._getOption('palette');
        },
        set: function (value) {
            this._setOption('palette', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoColorizerComponent.prototype, "paletteExtensionMode", {
        get: function () {
            return this._getOption('paletteExtensionMode');
        },
        set: function (value) {
            this._setOption('paletteExtensionMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoColorizerComponent.prototype, "range", {
        get: function () {
            return this._getOption('range');
        },
        set: function (value) {
            this._setOption('range', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoColorizerComponent.prototype, "type", {
        get: function () {
            return this._getOption('type');
        },
        set: function (value) {
            this._setOption('type', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoColorizerComponent.prototype, "_optionPath", {
        get: function () {
            return 'colorizer';
        },
        enumerable: true,
        configurable: true
    });
    DxoColorizerComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoColorizerComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoColorizerComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoColorizerComponent.prototype, "colorCodeField", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoColorizerComponent.prototype, "colorizeGroups", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoColorizerComponent.prototype, "palette", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoColorizerComponent.prototype, "paletteExtensionMode", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxoColorizerComponent.prototype, "range", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoColorizerComponent.prototype, "type", null);
    DxoColorizerComponent = __decorate([
        Component({
            selector: 'dxo-colorizer',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoColorizerComponent);
    return DxoColorizerComponent;
}(NestedOption));
var DxoColorizerModule = /** @class */ (function () {
    function DxoColorizerModule() {
    }
    DxoColorizerModule = __decorate([
        NgModule({
            declarations: [
                DxoColorizerComponent
            ],
            exports: [
                DxoColorizerComponent
            ],
        })
    ], DxoColorizerModule);
    return DxoColorizerModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoColumnChooserComponent = /** @class */ (function (_super) {
    __extends(DxoColumnChooserComponent, _super);
    function DxoColumnChooserComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoColumnChooserComponent.prototype, "allowSearch", {
        get: function () {
            return this._getOption('allowSearch');
        },
        set: function (value) {
            this._setOption('allowSearch', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoColumnChooserComponent.prototype, "emptyPanelText", {
        get: function () {
            return this._getOption('emptyPanelText');
        },
        set: function (value) {
            this._setOption('emptyPanelText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoColumnChooserComponent.prototype, "enabled", {
        get: function () {
            return this._getOption('enabled');
        },
        set: function (value) {
            this._setOption('enabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoColumnChooserComponent.prototype, "height", {
        get: function () {
            return this._getOption('height');
        },
        set: function (value) {
            this._setOption('height', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoColumnChooserComponent.prototype, "mode", {
        get: function () {
            return this._getOption('mode');
        },
        set: function (value) {
            this._setOption('mode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoColumnChooserComponent.prototype, "searchTimeout", {
        get: function () {
            return this._getOption('searchTimeout');
        },
        set: function (value) {
            this._setOption('searchTimeout', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoColumnChooserComponent.prototype, "title", {
        get: function () {
            return this._getOption('title');
        },
        set: function (value) {
            this._setOption('title', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoColumnChooserComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoColumnChooserComponent.prototype, "_optionPath", {
        get: function () {
            return 'columnChooser';
        },
        enumerable: true,
        configurable: true
    });
    DxoColumnChooserComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoColumnChooserComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoColumnChooserComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoColumnChooserComponent.prototype, "allowSearch", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoColumnChooserComponent.prototype, "emptyPanelText", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoColumnChooserComponent.prototype, "enabled", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoColumnChooserComponent.prototype, "height", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoColumnChooserComponent.prototype, "mode", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoColumnChooserComponent.prototype, "searchTimeout", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoColumnChooserComponent.prototype, "title", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoColumnChooserComponent.prototype, "width", null);
    DxoColumnChooserComponent = __decorate([
        Component({
            selector: 'dxo-column-chooser',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoColumnChooserComponent);
    return DxoColumnChooserComponent;
}(NestedOption));
var DxoColumnChooserModule = /** @class */ (function () {
    function DxoColumnChooserModule() {
    }
    DxoColumnChooserModule = __decorate([
        NgModule({
            declarations: [
                DxoColumnChooserComponent
            ],
            exports: [
                DxoColumnChooserComponent
            ],
        })
    ], DxoColumnChooserModule);
    return DxoColumnChooserModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiDataGridColumn = /** @class */ (function (_super) {
    __extends(DxiDataGridColumn, _super);
    function DxiDataGridColumn() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DxiDataGridColumn.prototype, "alignment", {
        get: function () {
            return this._getOption('alignment');
        },
        set: function (value) {
            this._setOption('alignment', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "allowEditing", {
        get: function () {
            return this._getOption('allowEditing');
        },
        set: function (value) {
            this._setOption('allowEditing', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "allowExporting", {
        get: function () {
            return this._getOption('allowExporting');
        },
        set: function (value) {
            this._setOption('allowExporting', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "allowFiltering", {
        get: function () {
            return this._getOption('allowFiltering');
        },
        set: function (value) {
            this._setOption('allowFiltering', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "allowFixing", {
        get: function () {
            return this._getOption('allowFixing');
        },
        set: function (value) {
            this._setOption('allowFixing', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "allowGrouping", {
        get: function () {
            return this._getOption('allowGrouping');
        },
        set: function (value) {
            this._setOption('allowGrouping', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "allowHeaderFiltering", {
        get: function () {
            return this._getOption('allowHeaderFiltering');
        },
        set: function (value) {
            this._setOption('allowHeaderFiltering', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "allowHiding", {
        get: function () {
            return this._getOption('allowHiding');
        },
        set: function (value) {
            this._setOption('allowHiding', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "allowReordering", {
        get: function () {
            return this._getOption('allowReordering');
        },
        set: function (value) {
            this._setOption('allowReordering', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "allowResizing", {
        get: function () {
            return this._getOption('allowResizing');
        },
        set: function (value) {
            this._setOption('allowResizing', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "allowSearch", {
        get: function () {
            return this._getOption('allowSearch');
        },
        set: function (value) {
            this._setOption('allowSearch', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "allowSorting", {
        get: function () {
            return this._getOption('allowSorting');
        },
        set: function (value) {
            this._setOption('allowSorting', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "autoExpandGroup", {
        get: function () {
            return this._getOption('autoExpandGroup');
        },
        set: function (value) {
            this._setOption('autoExpandGroup', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "buttons", {
        get: function () {
            return this._getOption('buttons');
        },
        set: function (value) {
            this._setOption('buttons', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "calculateCellValue", {
        get: function () {
            return this._getOption('calculateCellValue');
        },
        set: function (value) {
            this._setOption('calculateCellValue', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "calculateDisplayValue", {
        get: function () {
            return this._getOption('calculateDisplayValue');
        },
        set: function (value) {
            this._setOption('calculateDisplayValue', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "calculateFilterExpression", {
        get: function () {
            return this._getOption('calculateFilterExpression');
        },
        set: function (value) {
            this._setOption('calculateFilterExpression', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "calculateGroupValue", {
        get: function () {
            return this._getOption('calculateGroupValue');
        },
        set: function (value) {
            this._setOption('calculateGroupValue', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "calculateSortValue", {
        get: function () {
            return this._getOption('calculateSortValue');
        },
        set: function (value) {
            this._setOption('calculateSortValue', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "caption", {
        get: function () {
            return this._getOption('caption');
        },
        set: function (value) {
            this._setOption('caption', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "cellTemplate", {
        get: function () {
            return this._getOption('cellTemplate');
        },
        set: function (value) {
            this._setOption('cellTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "columns", {
        get: function () {
            return this._getOption('columns');
        },
        set: function (value) {
            this._setOption('columns', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "cssClass", {
        get: function () {
            return this._getOption('cssClass');
        },
        set: function (value) {
            this._setOption('cssClass', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "customizeText", {
        get: function () {
            return this._getOption('customizeText');
        },
        set: function (value) {
            this._setOption('customizeText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "dataField", {
        get: function () {
            return this._getOption('dataField');
        },
        set: function (value) {
            this._setOption('dataField', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "dataType", {
        get: function () {
            return this._getOption('dataType');
        },
        set: function (value) {
            this._setOption('dataType', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "editCellTemplate", {
        get: function () {
            return this._getOption('editCellTemplate');
        },
        set: function (value) {
            this._setOption('editCellTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "editorOptions", {
        get: function () {
            return this._getOption('editorOptions');
        },
        set: function (value) {
            this._setOption('editorOptions', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "encodeHtml", {
        get: function () {
            return this._getOption('encodeHtml');
        },
        set: function (value) {
            this._setOption('encodeHtml', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "falseText", {
        get: function () {
            return this._getOption('falseText');
        },
        set: function (value) {
            this._setOption('falseText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "filterOperations", {
        get: function () {
            return this._getOption('filterOperations');
        },
        set: function (value) {
            this._setOption('filterOperations', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "filterType", {
        get: function () {
            return this._getOption('filterType');
        },
        set: function (value) {
            this._setOption('filterType', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "filterValue", {
        get: function () {
            return this._getOption('filterValue');
        },
        set: function (value) {
            this._setOption('filterValue', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "filterValues", {
        get: function () {
            return this._getOption('filterValues');
        },
        set: function (value) {
            this._setOption('filterValues', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "fixed", {
        get: function () {
            return this._getOption('fixed');
        },
        set: function (value) {
            this._setOption('fixed', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "fixedPosition", {
        get: function () {
            return this._getOption('fixedPosition');
        },
        set: function (value) {
            this._setOption('fixedPosition', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "format", {
        get: function () {
            return this._getOption('format');
        },
        set: function (value) {
            this._setOption('format', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "formItem", {
        get: function () {
            return this._getOption('formItem');
        },
        set: function (value) {
            this._setOption('formItem', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "groupCellTemplate", {
        get: function () {
            return this._getOption('groupCellTemplate');
        },
        set: function (value) {
            this._setOption('groupCellTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "groupIndex", {
        get: function () {
            return this._getOption('groupIndex');
        },
        set: function (value) {
            this._setOption('groupIndex', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "headerCellTemplate", {
        get: function () {
            return this._getOption('headerCellTemplate');
        },
        set: function (value) {
            this._setOption('headerCellTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "headerFilter", {
        get: function () {
            return this._getOption('headerFilter');
        },
        set: function (value) {
            this._setOption('headerFilter', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "hidingPriority", {
        get: function () {
            return this._getOption('hidingPriority');
        },
        set: function (value) {
            this._setOption('hidingPriority', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "isBand", {
        get: function () {
            return this._getOption('isBand');
        },
        set: function (value) {
            this._setOption('isBand', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "lookup", {
        get: function () {
            return this._getOption('lookup');
        },
        set: function (value) {
            this._setOption('lookup', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "minWidth", {
        get: function () {
            return this._getOption('minWidth');
        },
        set: function (value) {
            this._setOption('minWidth', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "name", {
        get: function () {
            return this._getOption('name');
        },
        set: function (value) {
            this._setOption('name', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "ownerBand", {
        get: function () {
            return this._getOption('ownerBand');
        },
        set: function (value) {
            this._setOption('ownerBand', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "renderAsync", {
        get: function () {
            return this._getOption('renderAsync');
        },
        set: function (value) {
            this._setOption('renderAsync', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "selectedFilterOperation", {
        get: function () {
            return this._getOption('selectedFilterOperation');
        },
        set: function (value) {
            this._setOption('selectedFilterOperation', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "setCellValue", {
        get: function () {
            return this._getOption('setCellValue');
        },
        set: function (value) {
            this._setOption('setCellValue', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "showEditorAlways", {
        get: function () {
            return this._getOption('showEditorAlways');
        },
        set: function (value) {
            this._setOption('showEditorAlways', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "showInColumnChooser", {
        get: function () {
            return this._getOption('showInColumnChooser');
        },
        set: function (value) {
            this._setOption('showInColumnChooser', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "showWhenGrouped", {
        get: function () {
            return this._getOption('showWhenGrouped');
        },
        set: function (value) {
            this._setOption('showWhenGrouped', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "sortIndex", {
        get: function () {
            return this._getOption('sortIndex');
        },
        set: function (value) {
            this._setOption('sortIndex', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "sortingMethod", {
        get: function () {
            return this._getOption('sortingMethod');
        },
        set: function (value) {
            this._setOption('sortingMethod', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "sortOrder", {
        get: function () {
            return this._getOption('sortOrder');
        },
        set: function (value) {
            this._setOption('sortOrder', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "trueText", {
        get: function () {
            return this._getOption('trueText');
        },
        set: function (value) {
            this._setOption('trueText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "type", {
        get: function () {
            return this._getOption('type');
        },
        set: function (value) {
            this._setOption('type', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "validationRules", {
        get: function () {
            return this._getOption('validationRules');
        },
        set: function (value) {
            this._setOption('validationRules', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "visibleIndex", {
        get: function () {
            return this._getOption('visibleIndex');
        },
        set: function (value) {
            this._setOption('visibleIndex', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiDataGridColumn.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    return DxiDataGridColumn;
}(CollectionNestedOption));

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiColumnComponent = /** @class */ (function (_super) {
    __extends(DxiColumnComponent, _super);
    function DxiColumnComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        _this._createEventEmitters([
            { emit: 'filterValueChange' },
            { emit: 'filterValuesChange' },
            { emit: 'groupIndexChange' },
            { emit: 'selectedFilterOperationChange' },
            { emit: 'sortIndexChange' },
            { emit: 'sortOrderChange' },
            { emit: 'visibleChange' },
            { emit: 'visibleIndexChange' }
        ]);
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    DxiColumnComponent_1 = DxiColumnComponent;
    Object.defineProperty(DxiColumnComponent.prototype, "_optionPath", {
        get: function () {
            return 'columns';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiColumnComponent.prototype, "buttonsChildren", {
        get: function () {
            return this._getOption('buttons');
        },
        set: function (value) {
            this.setChildren('buttons', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiColumnComponent.prototype, "columnsChildren", {
        get: function () {
            return this._getOption('columns');
        },
        set: function (value) {
            this.setChildren('columns', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiColumnComponent.prototype, "validationRulesChildren", {
        get: function () {
            return this._getOption('validationRules');
        },
        set: function (value) {
            this.setChildren('validationRules', value);
        },
        enumerable: true,
        configurable: true
    });
    var DxiColumnComponent_1;
    DxiColumnComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxiColumnComponent.prototype, "filterValueChange", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxiColumnComponent.prototype, "filterValuesChange", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxiColumnComponent.prototype, "groupIndexChange", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxiColumnComponent.prototype, "selectedFilterOperationChange", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxiColumnComponent.prototype, "sortIndexChange", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxiColumnComponent.prototype, "sortOrderChange", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxiColumnComponent.prototype, "visibleChange", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxiColumnComponent.prototype, "visibleIndexChange", void 0);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiButtonComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxiColumnComponent.prototype, "buttonsChildren", null);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiColumnComponent_1; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxiColumnComponent.prototype, "columnsChildren", null);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiValidationRuleComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxiColumnComponent.prototype, "validationRulesChildren", null);
    DxiColumnComponent = DxiColumnComponent_1 = __decorate([
        Component({
            selector: 'dxi-column',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'alignment',
                'allowEditing',
                'allowExporting',
                'allowFiltering',
                'allowFixing',
                'allowGrouping',
                'allowHeaderFiltering',
                'allowHiding',
                'allowReordering',
                'allowResizing',
                'allowSearch',
                'allowSorting',
                'autoExpandGroup',
                'buttons',
                'calculateCellValue',
                'calculateDisplayValue',
                'calculateFilterExpression',
                'calculateGroupValue',
                'calculateSortValue',
                'caption',
                'cellTemplate',
                'columns',
                'cssClass',
                'customizeText',
                'dataField',
                'dataType',
                'editCellTemplate',
                'editorOptions',
                'encodeHtml',
                'falseText',
                'filterOperations',
                'filterType',
                'filterValue',
                'filterValues',
                'fixed',
                'fixedPosition',
                'format',
                'formItem',
                'groupCellTemplate',
                'groupIndex',
                'headerCellTemplate',
                'headerFilter',
                'hidingPriority',
                'isBand',
                'lookup',
                'minWidth',
                'name',
                'ownerBand',
                'renderAsync',
                'selectedFilterOperation',
                'setCellValue',
                'showEditorAlways',
                'showInColumnChooser',
                'showWhenGrouped',
                'sortIndex',
                'sortingMethod',
                'sortOrder',
                'trueText',
                'type',
                'validationRules',
                'visible',
                'visibleIndex',
                'width'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiColumnComponent);
    return DxiColumnComponent;
}(DxiDataGridColumn));
var DxiColumnModule = /** @class */ (function () {
    function DxiColumnModule() {
    }
    DxiColumnModule = __decorate([
        NgModule({
            declarations: [
                DxiColumnComponent
            ],
            exports: [
                DxiColumnComponent
            ],
        })
    ], DxiColumnModule);
    return DxiColumnModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoColumnFixingComponent = /** @class */ (function (_super) {
    __extends(DxoColumnFixingComponent, _super);
    function DxoColumnFixingComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoColumnFixingComponent.prototype, "enabled", {
        get: function () {
            return this._getOption('enabled');
        },
        set: function (value) {
            this._setOption('enabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoColumnFixingComponent.prototype, "texts", {
        get: function () {
            return this._getOption('texts');
        },
        set: function (value) {
            this._setOption('texts', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoColumnFixingComponent.prototype, "_optionPath", {
        get: function () {
            return 'columnFixing';
        },
        enumerable: true,
        configurable: true
    });
    DxoColumnFixingComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoColumnFixingComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoColumnFixingComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoColumnFixingComponent.prototype, "enabled", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoColumnFixingComponent.prototype, "texts", null);
    DxoColumnFixingComponent = __decorate([
        Component({
            selector: 'dxo-column-fixing',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoColumnFixingComponent);
    return DxoColumnFixingComponent;
}(NestedOption));
var DxoColumnFixingModule = /** @class */ (function () {
    function DxoColumnFixingModule() {
    }
    DxoColumnFixingModule = __decorate([
        NgModule({
            declarations: [
                DxoColumnFixingComponent
            ],
            exports: [
                DxoColumnFixingComponent
            ],
        })
    ], DxoColumnFixingModule);
    return DxoColumnFixingModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoChartCommonAnnotationConfig = /** @class */ (function (_super) {
    __extends(DxoChartCommonAnnotationConfig, _super);
    function DxoChartCommonAnnotationConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "allowDragging", {
        get: function () {
            return this._getOption('allowDragging');
        },
        set: function (value) {
            this._setOption('allowDragging', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "argument", {
        get: function () {
            return this._getOption('argument');
        },
        set: function (value) {
            this._setOption('argument', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "arrowLength", {
        get: function () {
            return this._getOption('arrowLength');
        },
        set: function (value) {
            this._setOption('arrowLength', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "arrowWidth", {
        get: function () {
            return this._getOption('arrowWidth');
        },
        set: function (value) {
            this._setOption('arrowWidth', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "axis", {
        get: function () {
            return this._getOption('axis');
        },
        set: function (value) {
            this._setOption('axis', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "border", {
        get: function () {
            return this._getOption('border');
        },
        set: function (value) {
            this._setOption('border', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "customizeTooltip", {
        get: function () {
            return this._getOption('customizeTooltip');
        },
        set: function (value) {
            this._setOption('customizeTooltip', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "data", {
        get: function () {
            return this._getOption('data');
        },
        set: function (value) {
            this._setOption('data', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "description", {
        get: function () {
            return this._getOption('description');
        },
        set: function (value) {
            this._setOption('description', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "font", {
        get: function () {
            return this._getOption('font');
        },
        set: function (value) {
            this._setOption('font', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "height", {
        get: function () {
            return this._getOption('height');
        },
        set: function (value) {
            this._setOption('height', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "image", {
        get: function () {
            return this._getOption('image');
        },
        set: function (value) {
            this._setOption('image', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "offsetX", {
        get: function () {
            return this._getOption('offsetX');
        },
        set: function (value) {
            this._setOption('offsetX', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "offsetY", {
        get: function () {
            return this._getOption('offsetY');
        },
        set: function (value) {
            this._setOption('offsetY', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "opacity", {
        get: function () {
            return this._getOption('opacity');
        },
        set: function (value) {
            this._setOption('opacity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "paddingLeftRight", {
        get: function () {
            return this._getOption('paddingLeftRight');
        },
        set: function (value) {
            this._setOption('paddingLeftRight', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "paddingTopBottom", {
        get: function () {
            return this._getOption('paddingTopBottom');
        },
        set: function (value) {
            this._setOption('paddingTopBottom', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "series", {
        get: function () {
            return this._getOption('series');
        },
        set: function (value) {
            this._setOption('series', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "shadow", {
        get: function () {
            return this._getOption('shadow');
        },
        set: function (value) {
            this._setOption('shadow', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "template", {
        get: function () {
            return this._getOption('template');
        },
        set: function (value) {
            this._setOption('template', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "text", {
        get: function () {
            return this._getOption('text');
        },
        set: function (value) {
            this._setOption('text', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "textOverflow", {
        get: function () {
            return this._getOption('textOverflow');
        },
        set: function (value) {
            this._setOption('textOverflow', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "tooltipEnabled", {
        get: function () {
            return this._getOption('tooltipEnabled');
        },
        set: function (value) {
            this._setOption('tooltipEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "tooltipTemplate", {
        get: function () {
            return this._getOption('tooltipTemplate');
        },
        set: function (value) {
            this._setOption('tooltipTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "type", {
        get: function () {
            return this._getOption('type');
        },
        set: function (value) {
            this._setOption('type', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "value", {
        get: function () {
            return this._getOption('value');
        },
        set: function (value) {
            this._setOption('value', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "wordWrap", {
        get: function () {
            return this._getOption('wordWrap');
        },
        set: function (value) {
            this._setOption('wordWrap', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "x", {
        get: function () {
            return this._getOption('x');
        },
        set: function (value) {
            this._setOption('x', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "y", {
        get: function () {
            return this._getOption('y');
        },
        set: function (value) {
            this._setOption('y', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "angle", {
        get: function () {
            return this._getOption('angle');
        },
        set: function (value) {
            this._setOption('angle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "radius", {
        get: function () {
            return this._getOption('radius');
        },
        set: function (value) {
            this._setOption('radius', value);
        },
        enumerable: true,
        configurable: true
    });
    return DxoChartCommonAnnotationConfig;
}(NestedOption));

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoCommonAnnotationSettingsComponent = /** @class */ (function (_super) {
    __extends(DxoCommonAnnotationSettingsComponent, _super);
    function DxoCommonAnnotationSettingsComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoCommonAnnotationSettingsComponent.prototype, "_optionPath", {
        get: function () {
            return 'commonAnnotationSettings';
        },
        enumerable: true,
        configurable: true
    });
    DxoCommonAnnotationSettingsComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoCommonAnnotationSettingsComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoCommonAnnotationSettingsComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoCommonAnnotationSettingsComponent = __decorate([
        Component({
            selector: 'dxo-common-annotation-settings',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'allowDragging',
                'argument',
                'arrowLength',
                'arrowWidth',
                'axis',
                'border',
                'color',
                'customizeTooltip',
                'data',
                'description',
                'font',
                'height',
                'image',
                'offsetX',
                'offsetY',
                'opacity',
                'paddingLeftRight',
                'paddingTopBottom',
                'series',
                'shadow',
                'template',
                'text',
                'textOverflow',
                'tooltipEnabled',
                'tooltipTemplate',
                'type',
                'value',
                'width',
                'wordWrap',
                'x',
                'y',
                'angle',
                'radius'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoCommonAnnotationSettingsComponent);
    return DxoCommonAnnotationSettingsComponent;
}(DxoChartCommonAnnotationConfig));
var DxoCommonAnnotationSettingsModule = /** @class */ (function () {
    function DxoCommonAnnotationSettingsModule() {
    }
    DxoCommonAnnotationSettingsModule = __decorate([
        NgModule({
            declarations: [
                DxoCommonAnnotationSettingsComponent
            ],
            exports: [
                DxoCommonAnnotationSettingsComponent
            ],
        })
    ], DxoCommonAnnotationSettingsModule);
    return DxoCommonAnnotationSettingsModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoCommonAxisSettingsComponent = /** @class */ (function (_super) {
    __extends(DxoCommonAxisSettingsComponent, _super);
    function DxoCommonAxisSettingsComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "allowDecimals", {
        get: function () {
            return this._getOption('allowDecimals');
        },
        set: function (value) {
            this._setOption('allowDecimals', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "breakStyle", {
        get: function () {
            return this._getOption('breakStyle');
        },
        set: function (value) {
            this._setOption('breakStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "constantLineStyle", {
        get: function () {
            return this._getOption('constantLineStyle');
        },
        set: function (value) {
            this._setOption('constantLineStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "discreteAxisDivisionMode", {
        get: function () {
            return this._getOption('discreteAxisDivisionMode');
        },
        set: function (value) {
            this._setOption('discreteAxisDivisionMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "endOnTick", {
        get: function () {
            return this._getOption('endOnTick');
        },
        set: function (value) {
            this._setOption('endOnTick', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "grid", {
        get: function () {
            return this._getOption('grid');
        },
        set: function (value) {
            this._setOption('grid', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "inverted", {
        get: function () {
            return this._getOption('inverted');
        },
        set: function (value) {
            this._setOption('inverted', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "label", {
        get: function () {
            return this._getOption('label');
        },
        set: function (value) {
            this._setOption('label', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "maxValueMargin", {
        get: function () {
            return this._getOption('maxValueMargin');
        },
        set: function (value) {
            this._setOption('maxValueMargin', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "minorGrid", {
        get: function () {
            return this._getOption('minorGrid');
        },
        set: function (value) {
            this._setOption('minorGrid', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "minorTick", {
        get: function () {
            return this._getOption('minorTick');
        },
        set: function (value) {
            this._setOption('minorTick', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "minValueMargin", {
        get: function () {
            return this._getOption('minValueMargin');
        },
        set: function (value) {
            this._setOption('minValueMargin', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "opacity", {
        get: function () {
            return this._getOption('opacity');
        },
        set: function (value) {
            this._setOption('opacity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "placeholderSize", {
        get: function () {
            return this._getOption('placeholderSize');
        },
        set: function (value) {
            this._setOption('placeholderSize', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "stripStyle", {
        get: function () {
            return this._getOption('stripStyle');
        },
        set: function (value) {
            this._setOption('stripStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "tick", {
        get: function () {
            return this._getOption('tick');
        },
        set: function (value) {
            this._setOption('tick', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "title", {
        get: function () {
            return this._getOption('title');
        },
        set: function (value) {
            this._setOption('title', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "valueMarginsEnabled", {
        get: function () {
            return this._getOption('valueMarginsEnabled');
        },
        set: function (value) {
            this._setOption('valueMarginsEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "_optionPath", {
        get: function () {
            return 'commonAxisSettings';
        },
        enumerable: true,
        configurable: true
    });
    DxoCommonAxisSettingsComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoCommonAxisSettingsComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoCommonAxisSettingsComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoCommonAxisSettingsComponent.prototype, "allowDecimals", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoCommonAxisSettingsComponent.prototype, "breakStyle", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoCommonAxisSettingsComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoCommonAxisSettingsComponent.prototype, "constantLineStyle", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoCommonAxisSettingsComponent.prototype, "discreteAxisDivisionMode", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoCommonAxisSettingsComponent.prototype, "endOnTick", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoCommonAxisSettingsComponent.prototype, "grid", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoCommonAxisSettingsComponent.prototype, "inverted", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoCommonAxisSettingsComponent.prototype, "label", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoCommonAxisSettingsComponent.prototype, "maxValueMargin", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoCommonAxisSettingsComponent.prototype, "minorGrid", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoCommonAxisSettingsComponent.prototype, "minorTick", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoCommonAxisSettingsComponent.prototype, "minValueMargin", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoCommonAxisSettingsComponent.prototype, "opacity", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoCommonAxisSettingsComponent.prototype, "placeholderSize", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoCommonAxisSettingsComponent.prototype, "stripStyle", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoCommonAxisSettingsComponent.prototype, "tick", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoCommonAxisSettingsComponent.prototype, "title", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoCommonAxisSettingsComponent.prototype, "valueMarginsEnabled", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoCommonAxisSettingsComponent.prototype, "visible", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoCommonAxisSettingsComponent.prototype, "width", null);
    DxoCommonAxisSettingsComponent = __decorate([
        Component({
            selector: 'dxo-common-axis-settings',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoCommonAxisSettingsComponent);
    return DxoCommonAxisSettingsComponent;
}(NestedOption));
var DxoCommonAxisSettingsModule = /** @class */ (function () {
    function DxoCommonAxisSettingsModule() {
    }
    DxoCommonAxisSettingsModule = __decorate([
        NgModule({
            declarations: [
                DxoCommonAxisSettingsComponent
            ],
            exports: [
                DxoCommonAxisSettingsComponent
            ],
        })
    ], DxoCommonAxisSettingsModule);
    return DxoCommonAxisSettingsModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoCommonPaneSettingsComponent = /** @class */ (function (_super) {
    __extends(DxoCommonPaneSettingsComponent, _super);
    function DxoCommonPaneSettingsComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoCommonPaneSettingsComponent.prototype, "backgroundColor", {
        get: function () {
            return this._getOption('backgroundColor');
        },
        set: function (value) {
            this._setOption('backgroundColor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCommonPaneSettingsComponent.prototype, "border", {
        get: function () {
            return this._getOption('border');
        },
        set: function (value) {
            this._setOption('border', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCommonPaneSettingsComponent.prototype, "_optionPath", {
        get: function () {
            return 'commonPaneSettings';
        },
        enumerable: true,
        configurable: true
    });
    DxoCommonPaneSettingsComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoCommonPaneSettingsComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoCommonPaneSettingsComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoCommonPaneSettingsComponent.prototype, "backgroundColor", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoCommonPaneSettingsComponent.prototype, "border", null);
    DxoCommonPaneSettingsComponent = __decorate([
        Component({
            selector: 'dxo-common-pane-settings',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoCommonPaneSettingsComponent);
    return DxoCommonPaneSettingsComponent;
}(NestedOption));
var DxoCommonPaneSettingsModule = /** @class */ (function () {
    function DxoCommonPaneSettingsModule() {
    }
    DxoCommonPaneSettingsModule = __decorate([
        NgModule({
            declarations: [
                DxoCommonPaneSettingsComponent
            ],
            exports: [
                DxoCommonPaneSettingsComponent
            ],
        })
    ], DxoCommonPaneSettingsModule);
    return DxoCommonPaneSettingsModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoCommonSeriesSettingsComponent = /** @class */ (function (_super) {
    __extends(DxoCommonSeriesSettingsComponent, _super);
    function DxoCommonSeriesSettingsComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoCommonSeriesSettingsComponent.prototype, "_optionPath", {
        get: function () {
            return 'commonSeriesSettings';
        },
        enumerable: true,
        configurable: true
    });
    DxoCommonSeriesSettingsComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoCommonSeriesSettingsComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoCommonSeriesSettingsComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoCommonSeriesSettingsComponent = __decorate([
        Component({
            selector: 'dxo-common-series-settings',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'aggregation',
                'area',
                'argumentField',
                'axis',
                'bar',
                'barOverlapGroup',
                'barPadding',
                'barWidth',
                'border',
                'bubble',
                'candlestick',
                'closeValueField',
                'color',
                'cornerRadius',
                'dashStyle',
                'fullstackedarea',
                'fullstackedbar',
                'fullstackedline',
                'fullstackedspline',
                'fullstackedsplinearea',
                'highValueField',
                'hoverMode',
                'hoverStyle',
                'ignoreEmptyPoints',
                'innerColor',
                'label',
                'line',
                'lowValueField',
                'maxLabelCount',
                'minBarSize',
                'opacity',
                'openValueField',
                'pane',
                'point',
                'rangearea',
                'rangebar',
                'rangeValue1Field',
                'rangeValue2Field',
                'reduction',
                'scatter',
                'selectionMode',
                'selectionStyle',
                'showInLegend',
                'sizeField',
                'spline',
                'splinearea',
                'stack',
                'stackedarea',
                'stackedbar',
                'stackedline',
                'stackedspline',
                'stackedsplinearea',
                'steparea',
                'stepline',
                'stock',
                'tagField',
                'type',
                'valueErrorBar',
                'valueField',
                'visible',
                'width',
                'argumentType',
                'minSegmentSize',
                'smallValuesGrouping',
                'closed'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoCommonSeriesSettingsComponent);
    return DxoCommonSeriesSettingsComponent;
}(DxoChartCommonSeriesSettings));
var DxoCommonSeriesSettingsModule = /** @class */ (function () {
    function DxoCommonSeriesSettingsModule() {
    }
    DxoCommonSeriesSettingsModule = __decorate([
        NgModule({
            declarations: [
                DxoCommonSeriesSettingsComponent
            ],
            exports: [
                DxoCommonSeriesSettingsComponent
            ],
        })
    ], DxoCommonSeriesSettingsModule);
    return DxoCommonSeriesSettingsModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiConnectionPointComponent = /** @class */ (function (_super) {
    __extends(DxiConnectionPointComponent, _super);
    function DxiConnectionPointComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiConnectionPointComponent.prototype, "x", {
        get: function () {
            return this._getOption('x');
        },
        set: function (value) {
            this._setOption('x', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiConnectionPointComponent.prototype, "y", {
        get: function () {
            return this._getOption('y');
        },
        set: function (value) {
            this._setOption('y', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiConnectionPointComponent.prototype, "_optionPath", {
        get: function () {
            return 'connectionPoints';
        },
        enumerable: true,
        configurable: true
    });
    DxiConnectionPointComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiConnectionPointComponent.prototype, "x", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiConnectionPointComponent.prototype, "y", null);
    DxiConnectionPointComponent = __decorate([
        Component({
            selector: 'dxi-connection-point',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiConnectionPointComponent);
    return DxiConnectionPointComponent;
}(CollectionNestedOption));
var DxiConnectionPointModule = /** @class */ (function () {
    function DxiConnectionPointModule() {
    }
    DxiConnectionPointModule = __decorate([
        NgModule({
            declarations: [
                DxiConnectionPointComponent
            ],
            exports: [
                DxiConnectionPointComponent
            ],
        })
    ], DxiConnectionPointModule);
    return DxiConnectionPointModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoConnectorComponent = /** @class */ (function (_super) {
    __extends(DxoConnectorComponent, _super);
    function DxoConnectorComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoConnectorComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoConnectorComponent.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoConnectorComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoConnectorComponent.prototype, "opacity", {
        get: function () {
            return this._getOption('opacity');
        },
        set: function (value) {
            this._setOption('opacity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoConnectorComponent.prototype, "_optionPath", {
        get: function () {
            return 'connector';
        },
        enumerable: true,
        configurable: true
    });
    DxoConnectorComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoConnectorComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoConnectorComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoConnectorComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoConnectorComponent.prototype, "visible", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoConnectorComponent.prototype, "width", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoConnectorComponent.prototype, "opacity", null);
    DxoConnectorComponent = __decorate([
        Component({
            selector: 'dxo-connector',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoConnectorComponent);
    return DxoConnectorComponent;
}(NestedOption));
var DxoConnectorModule = /** @class */ (function () {
    function DxoConnectorModule() {
    }
    DxoConnectorModule = __decorate([
        NgModule({
            declarations: [
                DxoConnectorComponent
            ],
            exports: [
                DxoConnectorComponent
            ],
        })
    ], DxoConnectorModule);
    return DxoConnectorModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoConstantLineStyleComponent = /** @class */ (function (_super) {
    __extends(DxoConstantLineStyleComponent, _super);
    function DxoConstantLineStyleComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoConstantLineStyleComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoConstantLineStyleComponent.prototype, "dashStyle", {
        get: function () {
            return this._getOption('dashStyle');
        },
        set: function (value) {
            this._setOption('dashStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoConstantLineStyleComponent.prototype, "label", {
        get: function () {
            return this._getOption('label');
        },
        set: function (value) {
            this._setOption('label', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoConstantLineStyleComponent.prototype, "paddingLeftRight", {
        get: function () {
            return this._getOption('paddingLeftRight');
        },
        set: function (value) {
            this._setOption('paddingLeftRight', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoConstantLineStyleComponent.prototype, "paddingTopBottom", {
        get: function () {
            return this._getOption('paddingTopBottom');
        },
        set: function (value) {
            this._setOption('paddingTopBottom', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoConstantLineStyleComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoConstantLineStyleComponent.prototype, "_optionPath", {
        get: function () {
            return 'constantLineStyle';
        },
        enumerable: true,
        configurable: true
    });
    DxoConstantLineStyleComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoConstantLineStyleComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoConstantLineStyleComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoConstantLineStyleComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoConstantLineStyleComponent.prototype, "dashStyle", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoConstantLineStyleComponent.prototype, "label", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoConstantLineStyleComponent.prototype, "paddingLeftRight", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoConstantLineStyleComponent.prototype, "paddingTopBottom", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoConstantLineStyleComponent.prototype, "width", null);
    DxoConstantLineStyleComponent = __decorate([
        Component({
            selector: 'dxo-constant-line-style',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoConstantLineStyleComponent);
    return DxoConstantLineStyleComponent;
}(NestedOption));
var DxoConstantLineStyleModule = /** @class */ (function () {
    function DxoConstantLineStyleModule() {
    }
    DxoConstantLineStyleModule = __decorate([
        NgModule({
            declarations: [
                DxoConstantLineStyleComponent
            ],
            exports: [
                DxoConstantLineStyleComponent
            ],
        })
    ], DxoConstantLineStyleModule);
    return DxoConstantLineStyleModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoFileManagerContextMenu = /** @class */ (function (_super) {
    __extends(DxoFileManagerContextMenu, _super);
    function DxoFileManagerContextMenu() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DxoFileManagerContextMenu.prototype, "commands", {
        get: function () {
            return this._getOption('commands');
        },
        set: function (value) {
            this._setOption('commands', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFileManagerContextMenu.prototype, "enabled", {
        get: function () {
            return this._getOption('enabled');
        },
        set: function (value) {
            this._setOption('enabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFileManagerContextMenu.prototype, "items", {
        get: function () {
            return this._getOption('items');
        },
        set: function (value) {
            this._setOption('items', value);
        },
        enumerable: true,
        configurable: true
    });
    return DxoFileManagerContextMenu;
}(NestedOption));

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoContextMenuComponent = /** @class */ (function (_super) {
    __extends(DxoContextMenuComponent, _super);
    function DxoContextMenuComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoContextMenuComponent.prototype, "_optionPath", {
        get: function () {
            return 'contextMenu';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoContextMenuComponent.prototype, "commandsChildren", {
        get: function () {
            return this._getOption('commands');
        },
        set: function (value) {
            this.setChildren('commands', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoContextMenuComponent.prototype, "itemsChildren", {
        get: function () {
            return this._getOption('items');
        },
        set: function (value) {
            this.setChildren('items', value);
        },
        enumerable: true,
        configurable: true
    });
    DxoContextMenuComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoContextMenuComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoContextMenuComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        ContentChildren(forwardRef(function () { return DxiCommandComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxoContextMenuComponent.prototype, "commandsChildren", null);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiItemComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxoContextMenuComponent.prototype, "itemsChildren", null);
    DxoContextMenuComponent = __decorate([
        Component({
            selector: 'dxo-context-menu',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'commands',
                'enabled',
                'items'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoContextMenuComponent);
    return DxoContextMenuComponent;
}(DxoFileManagerContextMenu));
var DxoContextMenuModule = /** @class */ (function () {
    function DxoContextMenuModule() {
    }
    DxoContextMenuModule = __decorate([
        NgModule({
            declarations: [
                DxoContextMenuComponent
            ],
            exports: [
                DxoContextMenuComponent
            ],
        })
    ], DxoContextMenuModule);
    return DxoContextMenuModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoContextToolboxComponent = /** @class */ (function (_super) {
    __extends(DxoContextToolboxComponent, _super);
    function DxoContextToolboxComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoContextToolboxComponent.prototype, "category", {
        get: function () {
            return this._getOption('category');
        },
        set: function (value) {
            this._setOption('category', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoContextToolboxComponent.prototype, "displayMode", {
        get: function () {
            return this._getOption('displayMode');
        },
        set: function (value) {
            this._setOption('displayMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoContextToolboxComponent.prototype, "enabled", {
        get: function () {
            return this._getOption('enabled');
        },
        set: function (value) {
            this._setOption('enabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoContextToolboxComponent.prototype, "shapes", {
        get: function () {
            return this._getOption('shapes');
        },
        set: function (value) {
            this._setOption('shapes', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoContextToolboxComponent.prototype, "_optionPath", {
        get: function () {
            return 'contextToolbox';
        },
        enumerable: true,
        configurable: true
    });
    DxoContextToolboxComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoContextToolboxComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoContextToolboxComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoContextToolboxComponent.prototype, "category", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoContextToolboxComponent.prototype, "displayMode", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoContextToolboxComponent.prototype, "enabled", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxoContextToolboxComponent.prototype, "shapes", null);
    DxoContextToolboxComponent = __decorate([
        Component({
            selector: 'dxo-context-toolbox',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoContextToolboxComponent);
    return DxoContextToolboxComponent;
}(NestedOption));
var DxoContextToolboxModule = /** @class */ (function () {
    function DxoContextToolboxModule() {
    }
    DxoContextToolboxModule = __decorate([
        NgModule({
            declarations: [
                DxoContextToolboxComponent
            ],
            exports: [
                DxoContextToolboxComponent
            ],
        })
    ], DxoContextToolboxModule);
    return DxoContextToolboxModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoControlBarComponent = /** @class */ (function (_super) {
    __extends(DxoControlBarComponent, _super);
    function DxoControlBarComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoControlBarComponent.prototype, "borderColor", {
        get: function () {
            return this._getOption('borderColor');
        },
        set: function (value) {
            this._setOption('borderColor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoControlBarComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoControlBarComponent.prototype, "enabled", {
        get: function () {
            return this._getOption('enabled');
        },
        set: function (value) {
            this._setOption('enabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoControlBarComponent.prototype, "horizontalAlignment", {
        get: function () {
            return this._getOption('horizontalAlignment');
        },
        set: function (value) {
            this._setOption('horizontalAlignment', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoControlBarComponent.prototype, "margin", {
        get: function () {
            return this._getOption('margin');
        },
        set: function (value) {
            this._setOption('margin', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoControlBarComponent.prototype, "opacity", {
        get: function () {
            return this._getOption('opacity');
        },
        set: function (value) {
            this._setOption('opacity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoControlBarComponent.prototype, "verticalAlignment", {
        get: function () {
            return this._getOption('verticalAlignment');
        },
        set: function (value) {
            this._setOption('verticalAlignment', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoControlBarComponent.prototype, "_optionPath", {
        get: function () {
            return 'controlBar';
        },
        enumerable: true,
        configurable: true
    });
    DxoControlBarComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoControlBarComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoControlBarComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoControlBarComponent.prototype, "borderColor", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoControlBarComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoControlBarComponent.prototype, "enabled", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoControlBarComponent.prototype, "horizontalAlignment", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoControlBarComponent.prototype, "margin", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoControlBarComponent.prototype, "opacity", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoControlBarComponent.prototype, "verticalAlignment", null);
    DxoControlBarComponent = __decorate([
        Component({
            selector: 'dxo-control-bar',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoControlBarComponent);
    return DxoControlBarComponent;
}(NestedOption));
var DxoControlBarModule = /** @class */ (function () {
    function DxoControlBarModule() {
    }
    DxoControlBarModule = __decorate([
        NgModule({
            declarations: [
                DxoControlBarComponent
            ],
            exports: [
                DxoControlBarComponent
            ],
        })
    ], DxoControlBarModule);
    return DxoControlBarModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoCrosshairComponent = /** @class */ (function (_super) {
    __extends(DxoCrosshairComponent, _super);
    function DxoCrosshairComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoCrosshairComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCrosshairComponent.prototype, "dashStyle", {
        get: function () {
            return this._getOption('dashStyle');
        },
        set: function (value) {
            this._setOption('dashStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCrosshairComponent.prototype, "enabled", {
        get: function () {
            return this._getOption('enabled');
        },
        set: function (value) {
            this._setOption('enabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCrosshairComponent.prototype, "horizontalLine", {
        get: function () {
            return this._getOption('horizontalLine');
        },
        set: function (value) {
            this._setOption('horizontalLine', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCrosshairComponent.prototype, "label", {
        get: function () {
            return this._getOption('label');
        },
        set: function (value) {
            this._setOption('label', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCrosshairComponent.prototype, "opacity", {
        get: function () {
            return this._getOption('opacity');
        },
        set: function (value) {
            this._setOption('opacity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCrosshairComponent.prototype, "verticalLine", {
        get: function () {
            return this._getOption('verticalLine');
        },
        set: function (value) {
            this._setOption('verticalLine', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCrosshairComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCrosshairComponent.prototype, "_optionPath", {
        get: function () {
            return 'crosshair';
        },
        enumerable: true,
        configurable: true
    });
    DxoCrosshairComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoCrosshairComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoCrosshairComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoCrosshairComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoCrosshairComponent.prototype, "dashStyle", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoCrosshairComponent.prototype, "enabled", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoCrosshairComponent.prototype, "horizontalLine", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoCrosshairComponent.prototype, "label", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoCrosshairComponent.prototype, "opacity", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoCrosshairComponent.prototype, "verticalLine", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoCrosshairComponent.prototype, "width", null);
    DxoCrosshairComponent = __decorate([
        Component({
            selector: 'dxo-crosshair',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoCrosshairComponent);
    return DxoCrosshairComponent;
}(NestedOption));
var DxoCrosshairModule = /** @class */ (function () {
    function DxoCrosshairModule() {
    }
    DxoCrosshairModule = __decorate([
        NgModule({
            declarations: [
                DxoCrosshairComponent
            ],
            exports: [
                DxoCrosshairComponent
            ],
        })
    ], DxoCrosshairModule);
    return DxoCrosshairModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoCursorOffsetComponent = /** @class */ (function (_super) {
    __extends(DxoCursorOffsetComponent, _super);
    function DxoCursorOffsetComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoCursorOffsetComponent.prototype, "x", {
        get: function () {
            return this._getOption('x');
        },
        set: function (value) {
            this._setOption('x', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCursorOffsetComponent.prototype, "y", {
        get: function () {
            return this._getOption('y');
        },
        set: function (value) {
            this._setOption('y', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCursorOffsetComponent.prototype, "_optionPath", {
        get: function () {
            return 'cursorOffset';
        },
        enumerable: true,
        configurable: true
    });
    DxoCursorOffsetComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoCursorOffsetComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoCursorOffsetComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoCursorOffsetComponent.prototype, "x", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoCursorOffsetComponent.prototype, "y", null);
    DxoCursorOffsetComponent = __decorate([
        Component({
            selector: 'dxo-cursor-offset',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoCursorOffsetComponent);
    return DxoCursorOffsetComponent;
}(NestedOption));
var DxoCursorOffsetModule = /** @class */ (function () {
    function DxoCursorOffsetModule() {
    }
    DxoCursorOffsetModule = __decorate([
        NgModule({
            declarations: [
                DxoCursorOffsetComponent
            ],
            exports: [
                DxoCursorOffsetComponent
            ],
        })
    ], DxoCursorOffsetModule);
    return DxoCursorOffsetModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiFilterBuilderCustomOperation = /** @class */ (function (_super) {
    __extends(DxiFilterBuilderCustomOperation, _super);
    function DxiFilterBuilderCustomOperation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DxiFilterBuilderCustomOperation.prototype, "calculateFilterExpression", {
        get: function () {
            return this._getOption('calculateFilterExpression');
        },
        set: function (value) {
            this._setOption('calculateFilterExpression', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderCustomOperation.prototype, "caption", {
        get: function () {
            return this._getOption('caption');
        },
        set: function (value) {
            this._setOption('caption', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderCustomOperation.prototype, "customizeText", {
        get: function () {
            return this._getOption('customizeText');
        },
        set: function (value) {
            this._setOption('customizeText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderCustomOperation.prototype, "dataTypes", {
        get: function () {
            return this._getOption('dataTypes');
        },
        set: function (value) {
            this._setOption('dataTypes', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderCustomOperation.prototype, "editorTemplate", {
        get: function () {
            return this._getOption('editorTemplate');
        },
        set: function (value) {
            this._setOption('editorTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderCustomOperation.prototype, "hasValue", {
        get: function () {
            return this._getOption('hasValue');
        },
        set: function (value) {
            this._setOption('hasValue', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderCustomOperation.prototype, "icon", {
        get: function () {
            return this._getOption('icon');
        },
        set: function (value) {
            this._setOption('icon', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderCustomOperation.prototype, "name", {
        get: function () {
            return this._getOption('name');
        },
        set: function (value) {
            this._setOption('name', value);
        },
        enumerable: true,
        configurable: true
    });
    return DxiFilterBuilderCustomOperation;
}(CollectionNestedOption));

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiCustomOperationComponent = /** @class */ (function (_super) {
    __extends(DxiCustomOperationComponent, _super);
    function DxiCustomOperationComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiCustomOperationComponent.prototype, "_optionPath", {
        get: function () {
            return 'customOperations';
        },
        enumerable: true,
        configurable: true
    });
    DxiCustomOperationComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxiCustomOperationComponent = __decorate([
        Component({
            selector: 'dxi-custom-operation',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'calculateFilterExpression',
                'caption',
                'customizeText',
                'dataTypes',
                'editorTemplate',
                'hasValue',
                'icon',
                'name'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiCustomOperationComponent);
    return DxiCustomOperationComponent;
}(DxiFilterBuilderCustomOperation));
var DxiCustomOperationModule = /** @class */ (function () {
    function DxiCustomOperationModule() {
    }
    DxiCustomOperationModule = __decorate([
        NgModule({
            declarations: [
                DxiCustomOperationComponent
            ],
            exports: [
                DxiCustomOperationComponent
            ],
        })
    ], DxiCustomOperationModule);
    return DxiCustomOperationModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiCustomShapeComponent = /** @class */ (function (_super) {
    __extends(DxiCustomShapeComponent, _super);
    function DxiCustomShapeComponent(parentOptionHost, optionHost, renderer, document, templateHost, element) {
        var _this = _super.call(this) || this;
        _this.renderer = renderer;
        _this.document = document;
        _this.element = element;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        templateHost.setHost(_this);
        return _this;
    }
    Object.defineProperty(DxiCustomShapeComponent.prototype, "allowEditImage", {
        get: function () {
            return this._getOption('allowEditImage');
        },
        set: function (value) {
            this._setOption('allowEditImage', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCustomShapeComponent.prototype, "allowEditText", {
        get: function () {
            return this._getOption('allowEditText');
        },
        set: function (value) {
            this._setOption('allowEditText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCustomShapeComponent.prototype, "allowResize", {
        get: function () {
            return this._getOption('allowResize');
        },
        set: function (value) {
            this._setOption('allowResize', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCustomShapeComponent.prototype, "backgroundImageHeight", {
        get: function () {
            return this._getOption('backgroundImageHeight');
        },
        set: function (value) {
            this._setOption('backgroundImageHeight', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCustomShapeComponent.prototype, "backgroundImageLeft", {
        get: function () {
            return this._getOption('backgroundImageLeft');
        },
        set: function (value) {
            this._setOption('backgroundImageLeft', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCustomShapeComponent.prototype, "backgroundImageToolboxUrl", {
        get: function () {
            return this._getOption('backgroundImageToolboxUrl');
        },
        set: function (value) {
            this._setOption('backgroundImageToolboxUrl', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCustomShapeComponent.prototype, "backgroundImageTop", {
        get: function () {
            return this._getOption('backgroundImageTop');
        },
        set: function (value) {
            this._setOption('backgroundImageTop', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCustomShapeComponent.prototype, "backgroundImageUrl", {
        get: function () {
            return this._getOption('backgroundImageUrl');
        },
        set: function (value) {
            this._setOption('backgroundImageUrl', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCustomShapeComponent.prototype, "backgroundImageWidth", {
        get: function () {
            return this._getOption('backgroundImageWidth');
        },
        set: function (value) {
            this._setOption('backgroundImageWidth', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCustomShapeComponent.prototype, "baseType", {
        get: function () {
            return this._getOption('baseType');
        },
        set: function (value) {
            this._setOption('baseType', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCustomShapeComponent.prototype, "category", {
        get: function () {
            return this._getOption('category');
        },
        set: function (value) {
            this._setOption('category', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCustomShapeComponent.prototype, "connectionPoints", {
        get: function () {
            return this._getOption('connectionPoints');
        },
        set: function (value) {
            this._setOption('connectionPoints', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCustomShapeComponent.prototype, "defaultHeight", {
        get: function () {
            return this._getOption('defaultHeight');
        },
        set: function (value) {
            this._setOption('defaultHeight', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCustomShapeComponent.prototype, "defaultImageUrl", {
        get: function () {
            return this._getOption('defaultImageUrl');
        },
        set: function (value) {
            this._setOption('defaultImageUrl', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCustomShapeComponent.prototype, "defaultText", {
        get: function () {
            return this._getOption('defaultText');
        },
        set: function (value) {
            this._setOption('defaultText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCustomShapeComponent.prototype, "defaultWidth", {
        get: function () {
            return this._getOption('defaultWidth');
        },
        set: function (value) {
            this._setOption('defaultWidth', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCustomShapeComponent.prototype, "imageHeight", {
        get: function () {
            return this._getOption('imageHeight');
        },
        set: function (value) {
            this._setOption('imageHeight', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCustomShapeComponent.prototype, "imageLeft", {
        get: function () {
            return this._getOption('imageLeft');
        },
        set: function (value) {
            this._setOption('imageLeft', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCustomShapeComponent.prototype, "imageTop", {
        get: function () {
            return this._getOption('imageTop');
        },
        set: function (value) {
            this._setOption('imageTop', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCustomShapeComponent.prototype, "imageWidth", {
        get: function () {
            return this._getOption('imageWidth');
        },
        set: function (value) {
            this._setOption('imageWidth', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCustomShapeComponent.prototype, "maxHeight", {
        get: function () {
            return this._getOption('maxHeight');
        },
        set: function (value) {
            this._setOption('maxHeight', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCustomShapeComponent.prototype, "maxWidth", {
        get: function () {
            return this._getOption('maxWidth');
        },
        set: function (value) {
            this._setOption('maxWidth', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCustomShapeComponent.prototype, "minHeight", {
        get: function () {
            return this._getOption('minHeight');
        },
        set: function (value) {
            this._setOption('minHeight', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCustomShapeComponent.prototype, "minWidth", {
        get: function () {
            return this._getOption('minWidth');
        },
        set: function (value) {
            this._setOption('minWidth', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCustomShapeComponent.prototype, "template", {
        get: function () {
            return this._getOption('template');
        },
        set: function (value) {
            this._setOption('template', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCustomShapeComponent.prototype, "templateHeight", {
        get: function () {
            return this._getOption('templateHeight');
        },
        set: function (value) {
            this._setOption('templateHeight', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCustomShapeComponent.prototype, "templateLeft", {
        get: function () {
            return this._getOption('templateLeft');
        },
        set: function (value) {
            this._setOption('templateLeft', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCustomShapeComponent.prototype, "templateTop", {
        get: function () {
            return this._getOption('templateTop');
        },
        set: function (value) {
            this._setOption('templateTop', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCustomShapeComponent.prototype, "templateWidth", {
        get: function () {
            return this._getOption('templateWidth');
        },
        set: function (value) {
            this._setOption('templateWidth', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCustomShapeComponent.prototype, "textHeight", {
        get: function () {
            return this._getOption('textHeight');
        },
        set: function (value) {
            this._setOption('textHeight', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCustomShapeComponent.prototype, "textLeft", {
        get: function () {
            return this._getOption('textLeft');
        },
        set: function (value) {
            this._setOption('textLeft', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCustomShapeComponent.prototype, "textTop", {
        get: function () {
            return this._getOption('textTop');
        },
        set: function (value) {
            this._setOption('textTop', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCustomShapeComponent.prototype, "textWidth", {
        get: function () {
            return this._getOption('textWidth');
        },
        set: function (value) {
            this._setOption('textWidth', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCustomShapeComponent.prototype, "title", {
        get: function () {
            return this._getOption('title');
        },
        set: function (value) {
            this._setOption('title', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCustomShapeComponent.prototype, "type", {
        get: function () {
            return this._getOption('type');
        },
        set: function (value) {
            this._setOption('type', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCustomShapeComponent.prototype, "_optionPath", {
        get: function () {
            return 'customShapes';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiCustomShapeComponent.prototype, "connectionPointsChildren", {
        get: function () {
            return this._getOption('connectionPoints');
        },
        set: function (value) {
            this.setChildren('connectionPoints', value);
        },
        enumerable: true,
        configurable: true
    });
    DxiCustomShapeComponent.prototype.setTemplate = function (template) {
        this.template = template;
    };
    DxiCustomShapeComponent.prototype.ngAfterViewInit = function () {
        extractTemplate(this, this.element, this.renderer, this.document);
    };
    DxiCustomShapeComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] },
        { type: Renderer2 },
        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },
        { type: DxTemplateHost, decorators: [{ type: Host }] },
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxiCustomShapeComponent.prototype, "allowEditImage", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxiCustomShapeComponent.prototype, "allowEditText", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxiCustomShapeComponent.prototype, "allowResize", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiCustomShapeComponent.prototype, "backgroundImageHeight", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiCustomShapeComponent.prototype, "backgroundImageLeft", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiCustomShapeComponent.prototype, "backgroundImageToolboxUrl", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiCustomShapeComponent.prototype, "backgroundImageTop", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiCustomShapeComponent.prototype, "backgroundImageUrl", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiCustomShapeComponent.prototype, "backgroundImageWidth", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiCustomShapeComponent.prototype, "baseType", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiCustomShapeComponent.prototype, "category", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxiCustomShapeComponent.prototype, "connectionPoints", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiCustomShapeComponent.prototype, "defaultHeight", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiCustomShapeComponent.prototype, "defaultImageUrl", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiCustomShapeComponent.prototype, "defaultText", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiCustomShapeComponent.prototype, "defaultWidth", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiCustomShapeComponent.prototype, "imageHeight", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiCustomShapeComponent.prototype, "imageLeft", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiCustomShapeComponent.prototype, "imageTop", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiCustomShapeComponent.prototype, "imageWidth", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiCustomShapeComponent.prototype, "maxHeight", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiCustomShapeComponent.prototype, "maxWidth", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiCustomShapeComponent.prototype, "minHeight", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiCustomShapeComponent.prototype, "minWidth", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiCustomShapeComponent.prototype, "template", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiCustomShapeComponent.prototype, "templateHeight", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiCustomShapeComponent.prototype, "templateLeft", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiCustomShapeComponent.prototype, "templateTop", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiCustomShapeComponent.prototype, "templateWidth", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiCustomShapeComponent.prototype, "textHeight", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiCustomShapeComponent.prototype, "textLeft", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiCustomShapeComponent.prototype, "textTop", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiCustomShapeComponent.prototype, "textWidth", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiCustomShapeComponent.prototype, "title", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiCustomShapeComponent.prototype, "type", null);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiConnectionPointComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxiCustomShapeComponent.prototype, "connectionPointsChildren", null);
    DxiCustomShapeComponent = __decorate([
        Component({
            selector: 'dxi-custom-shape',
            template: '<ng-content></ng-content>',
            providers: [NestedOptionHost, DxTemplateHost],
            styles: [':host { display: block; }']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __param(3, Inject(DOCUMENT)),
        __param(4, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost,
            Renderer2, Object, DxTemplateHost,
            ElementRef])
    ], DxiCustomShapeComponent);
    return DxiCustomShapeComponent;
}(CollectionNestedOption));
var DxiCustomShapeModule = /** @class */ (function () {
    function DxiCustomShapeModule() {
    }
    DxiCustomShapeModule = __decorate([
        NgModule({
            declarations: [
                DxiCustomShapeComponent
            ],
            exports: [
                DxiCustomShapeComponent
            ],
        })
    ], DxiCustomShapeModule);
    return DxiCustomShapeModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoDataPrepareSettingsComponent = /** @class */ (function (_super) {
    __extends(DxoDataPrepareSettingsComponent, _super);
    function DxoDataPrepareSettingsComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoDataPrepareSettingsComponent.prototype, "checkTypeForAllData", {
        get: function () {
            return this._getOption('checkTypeForAllData');
        },
        set: function (value) {
            this._setOption('checkTypeForAllData', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoDataPrepareSettingsComponent.prototype, "convertToAxisDataType", {
        get: function () {
            return this._getOption('convertToAxisDataType');
        },
        set: function (value) {
            this._setOption('convertToAxisDataType', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoDataPrepareSettingsComponent.prototype, "sortingMethod", {
        get: function () {
            return this._getOption('sortingMethod');
        },
        set: function (value) {
            this._setOption('sortingMethod', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoDataPrepareSettingsComponent.prototype, "_optionPath", {
        get: function () {
            return 'dataPrepareSettings';
        },
        enumerable: true,
        configurable: true
    });
    DxoDataPrepareSettingsComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoDataPrepareSettingsComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoDataPrepareSettingsComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoDataPrepareSettingsComponent.prototype, "checkTypeForAllData", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoDataPrepareSettingsComponent.prototype, "convertToAxisDataType", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoDataPrepareSettingsComponent.prototype, "sortingMethod", null);
    DxoDataPrepareSettingsComponent = __decorate([
        Component({
            selector: 'dxo-data-prepare-settings',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoDataPrepareSettingsComponent);
    return DxoDataPrepareSettingsComponent;
}(NestedOption));
var DxoDataPrepareSettingsModule = /** @class */ (function () {
    function DxoDataPrepareSettingsModule() {
    }
    DxoDataPrepareSettingsModule = __decorate([
        NgModule({
            declarations: [
                DxoDataPrepareSettingsComponent
            ],
            exports: [
                DxoDataPrepareSettingsComponent
            ],
        })
    ], DxoDataPrepareSettingsModule);
    return DxoDataPrepareSettingsModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoPivotGridDataSource = /** @class */ (function (_super) {
    __extends(DxoPivotGridDataSource, _super);
    function DxoPivotGridDataSource() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DxoPivotGridDataSource.prototype, "fields", {
        get: function () {
            return this._getOption('fields');
        },
        set: function (value) {
            this._setOption('fields', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPivotGridDataSource.prototype, "filter", {
        get: function () {
            return this._getOption('filter');
        },
        set: function (value) {
            this._setOption('filter', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPivotGridDataSource.prototype, "onChanged", {
        get: function () {
            return this._getOption('onChanged');
        },
        set: function (value) {
            this._setOption('onChanged', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPivotGridDataSource.prototype, "onFieldsPrepared", {
        get: function () {
            return this._getOption('onFieldsPrepared');
        },
        set: function (value) {
            this._setOption('onFieldsPrepared', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPivotGridDataSource.prototype, "onLoadError", {
        get: function () {
            return this._getOption('onLoadError');
        },
        set: function (value) {
            this._setOption('onLoadError', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPivotGridDataSource.prototype, "onLoadingChanged", {
        get: function () {
            return this._getOption('onLoadingChanged');
        },
        set: function (value) {
            this._setOption('onLoadingChanged', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPivotGridDataSource.prototype, "remoteOperations", {
        get: function () {
            return this._getOption('remoteOperations');
        },
        set: function (value) {
            this._setOption('remoteOperations', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPivotGridDataSource.prototype, "retrieveFields", {
        get: function () {
            return this._getOption('retrieveFields');
        },
        set: function (value) {
            this._setOption('retrieveFields', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPivotGridDataSource.prototype, "store", {
        get: function () {
            return this._getOption('store');
        },
        set: function (value) {
            this._setOption('store', value);
        },
        enumerable: true,
        configurable: true
    });
    return DxoPivotGridDataSource;
}(NestedOption));

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiFilterBuilderField = /** @class */ (function (_super) {
    __extends(DxiFilterBuilderField, _super);
    function DxiFilterBuilderField() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DxiFilterBuilderField.prototype, "calculateFilterExpression", {
        get: function () {
            return this._getOption('calculateFilterExpression');
        },
        set: function (value) {
            this._setOption('calculateFilterExpression', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "caption", {
        get: function () {
            return this._getOption('caption');
        },
        set: function (value) {
            this._setOption('caption', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "customizeText", {
        get: function () {
            return this._getOption('customizeText');
        },
        set: function (value) {
            this._setOption('customizeText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "dataField", {
        get: function () {
            return this._getOption('dataField');
        },
        set: function (value) {
            this._setOption('dataField', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "dataType", {
        get: function () {
            return this._getOption('dataType');
        },
        set: function (value) {
            this._setOption('dataType', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "editorOptions", {
        get: function () {
            return this._getOption('editorOptions');
        },
        set: function (value) {
            this._setOption('editorOptions', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "editorTemplate", {
        get: function () {
            return this._getOption('editorTemplate');
        },
        set: function (value) {
            this._setOption('editorTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "falseText", {
        get: function () {
            return this._getOption('falseText');
        },
        set: function (value) {
            this._setOption('falseText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "filterOperations", {
        get: function () {
            return this._getOption('filterOperations');
        },
        set: function (value) {
            this._setOption('filterOperations', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "format", {
        get: function () {
            return this._getOption('format');
        },
        set: function (value) {
            this._setOption('format', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "lookup", {
        get: function () {
            return this._getOption('lookup');
        },
        set: function (value) {
            this._setOption('lookup', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "name", {
        get: function () {
            return this._getOption('name');
        },
        set: function (value) {
            this._setOption('name', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "trueText", {
        get: function () {
            return this._getOption('trueText');
        },
        set: function (value) {
            this._setOption('trueText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "allowCrossGroupCalculation", {
        get: function () {
            return this._getOption('allowCrossGroupCalculation');
        },
        set: function (value) {
            this._setOption('allowCrossGroupCalculation', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "allowExpandAll", {
        get: function () {
            return this._getOption('allowExpandAll');
        },
        set: function (value) {
            this._setOption('allowExpandAll', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "allowFiltering", {
        get: function () {
            return this._getOption('allowFiltering');
        },
        set: function (value) {
            this._setOption('allowFiltering', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "allowSorting", {
        get: function () {
            return this._getOption('allowSorting');
        },
        set: function (value) {
            this._setOption('allowSorting', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "allowSortingBySummary", {
        get: function () {
            return this._getOption('allowSortingBySummary');
        },
        set: function (value) {
            this._setOption('allowSortingBySummary', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "area", {
        get: function () {
            return this._getOption('area');
        },
        set: function (value) {
            this._setOption('area', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "areaIndex", {
        get: function () {
            return this._getOption('areaIndex');
        },
        set: function (value) {
            this._setOption('areaIndex', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "calculateCustomSummary", {
        get: function () {
            return this._getOption('calculateCustomSummary');
        },
        set: function (value) {
            this._setOption('calculateCustomSummary', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "calculateSummaryValue", {
        get: function () {
            return this._getOption('calculateSummaryValue');
        },
        set: function (value) {
            this._setOption('calculateSummaryValue', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "displayFolder", {
        get: function () {
            return this._getOption('displayFolder');
        },
        set: function (value) {
            this._setOption('displayFolder', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "expanded", {
        get: function () {
            return this._getOption('expanded');
        },
        set: function (value) {
            this._setOption('expanded', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "filterType", {
        get: function () {
            return this._getOption('filterType');
        },
        set: function (value) {
            this._setOption('filterType', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "filterValues", {
        get: function () {
            return this._getOption('filterValues');
        },
        set: function (value) {
            this._setOption('filterValues', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "groupIndex", {
        get: function () {
            return this._getOption('groupIndex');
        },
        set: function (value) {
            this._setOption('groupIndex', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "groupInterval", {
        get: function () {
            return this._getOption('groupInterval');
        },
        set: function (value) {
            this._setOption('groupInterval', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "groupName", {
        get: function () {
            return this._getOption('groupName');
        },
        set: function (value) {
            this._setOption('groupName', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "headerFilter", {
        get: function () {
            return this._getOption('headerFilter');
        },
        set: function (value) {
            this._setOption('headerFilter', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "isMeasure", {
        get: function () {
            return this._getOption('isMeasure');
        },
        set: function (value) {
            this._setOption('isMeasure', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "precision", {
        get: function () {
            return this._getOption('precision');
        },
        set: function (value) {
            this._setOption('precision', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "runningTotal", {
        get: function () {
            return this._getOption('runningTotal');
        },
        set: function (value) {
            this._setOption('runningTotal', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "selector", {
        get: function () {
            return this._getOption('selector');
        },
        set: function (value) {
            this._setOption('selector', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "showGrandTotals", {
        get: function () {
            return this._getOption('showGrandTotals');
        },
        set: function (value) {
            this._setOption('showGrandTotals', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "showTotals", {
        get: function () {
            return this._getOption('showTotals');
        },
        set: function (value) {
            this._setOption('showTotals', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "showValues", {
        get: function () {
            return this._getOption('showValues');
        },
        set: function (value) {
            this._setOption('showValues', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "sortBy", {
        get: function () {
            return this._getOption('sortBy');
        },
        set: function (value) {
            this._setOption('sortBy', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "sortBySummaryField", {
        get: function () {
            return this._getOption('sortBySummaryField');
        },
        set: function (value) {
            this._setOption('sortBySummaryField', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "sortBySummaryPath", {
        get: function () {
            return this._getOption('sortBySummaryPath');
        },
        set: function (value) {
            this._setOption('sortBySummaryPath', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "sortingMethod", {
        get: function () {
            return this._getOption('sortingMethod');
        },
        set: function (value) {
            this._setOption('sortingMethod', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "sortOrder", {
        get: function () {
            return this._getOption('sortOrder');
        },
        set: function (value) {
            this._setOption('sortOrder', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "summaryDisplayMode", {
        get: function () {
            return this._getOption('summaryDisplayMode');
        },
        set: function (value) {
            this._setOption('summaryDisplayMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "summaryType", {
        get: function () {
            return this._getOption('summaryType');
        },
        set: function (value) {
            this._setOption('summaryType', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFilterBuilderField.prototype, "wordWrapEnabled", {
        get: function () {
            return this._getOption('wordWrapEnabled');
        },
        set: function (value) {
            this._setOption('wordWrapEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    return DxiFilterBuilderField;
}(CollectionNestedOption));

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiFieldComponent = /** @class */ (function (_super) {
    __extends(DxiFieldComponent, _super);
    function DxiFieldComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiFieldComponent.prototype, "_optionPath", {
        get: function () {
            return 'fields';
        },
        enumerable: true,
        configurable: true
    });
    DxiFieldComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxiFieldComponent = __decorate([
        Component({
            selector: 'dxi-field',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'calculateFilterExpression',
                'caption',
                'customizeText',
                'dataField',
                'dataType',
                'editorOptions',
                'editorTemplate',
                'falseText',
                'filterOperations',
                'format',
                'lookup',
                'name',
                'trueText',
                'allowCrossGroupCalculation',
                'allowExpandAll',
                'allowFiltering',
                'allowSorting',
                'allowSortingBySummary',
                'area',
                'areaIndex',
                'calculateCustomSummary',
                'calculateSummaryValue',
                'displayFolder',
                'expanded',
                'filterType',
                'filterValues',
                'groupIndex',
                'groupInterval',
                'groupName',
                'headerFilter',
                'isMeasure',
                'precision',
                'runningTotal',
                'selector',
                'showGrandTotals',
                'showTotals',
                'showValues',
                'sortBy',
                'sortBySummaryField',
                'sortBySummaryPath',
                'sortingMethod',
                'sortOrder',
                'summaryDisplayMode',
                'summaryType',
                'visible',
                'width',
                'wordWrapEnabled'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiFieldComponent);
    return DxiFieldComponent;
}(DxiFilterBuilderField));
var DxiFieldModule = /** @class */ (function () {
    function DxiFieldModule() {
    }
    DxiFieldModule = __decorate([
        NgModule({
            declarations: [
                DxiFieldComponent
            ],
            exports: [
                DxiFieldComponent
            ],
        })
    ], DxiFieldModule);
    return DxiFieldModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoDataSourceComponent = /** @class */ (function (_super) {
    __extends(DxoDataSourceComponent, _super);
    function DxoDataSourceComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        if ((console) && (console.warn)) {
            console.warn('The nested \'dxo-data-source\' component is deprecated in 17.2. ' +
                'Use the \'dataSource\' option instead. ' +
                'See:\nhttps://github.com/DevExpress/devextreme-angular/blob/master/CHANGELOG.md#17.2.3');
        }
        return _this;
    }
    Object.defineProperty(DxoDataSourceComponent.prototype, "_optionPath", {
        get: function () {
            return 'dataSource';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoDataSourceComponent.prototype, "fieldsChildren", {
        get: function () {
            return this._getOption('fields');
        },
        set: function (value) {
            this.setChildren('fields', value);
        },
        enumerable: true,
        configurable: true
    });
    DxoDataSourceComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoDataSourceComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoDataSourceComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        ContentChildren(forwardRef(function () { return DxiFieldComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxoDataSourceComponent.prototype, "fieldsChildren", null);
    DxoDataSourceComponent = __decorate([
        Component({
            selector: 'dxo-data-source',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'fields',
                'filter',
                'onChanged',
                'onFieldsPrepared',
                'onLoadError',
                'onLoadingChanged',
                'remoteOperations',
                'retrieveFields',
                'store'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoDataSourceComponent);
    return DxoDataSourceComponent;
}(DxoPivotGridDataSource));
var DxoDataSourceModule = /** @class */ (function () {
    function DxoDataSourceModule() {
    }
    DxoDataSourceModule = __decorate([
        NgModule({
            declarations: [
                DxoDataSourceComponent
            ],
            exports: [
                DxoDataSourceComponent
            ],
        })
    ], DxoDataSourceModule);
    return DxoDataSourceModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoDefaultItemPropertiesComponent = /** @class */ (function (_super) {
    __extends(DxoDefaultItemPropertiesComponent, _super);
    function DxoDefaultItemPropertiesComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoDefaultItemPropertiesComponent.prototype, "connectorLineEnd", {
        get: function () {
            return this._getOption('connectorLineEnd');
        },
        set: function (value) {
            this._setOption('connectorLineEnd', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoDefaultItemPropertiesComponent.prototype, "connectorLineStart", {
        get: function () {
            return this._getOption('connectorLineStart');
        },
        set: function (value) {
            this._setOption('connectorLineStart', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoDefaultItemPropertiesComponent.prototype, "connectorLineType", {
        get: function () {
            return this._getOption('connectorLineType');
        },
        set: function (value) {
            this._setOption('connectorLineType', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoDefaultItemPropertiesComponent.prototype, "style", {
        get: function () {
            return this._getOption('style');
        },
        set: function (value) {
            this._setOption('style', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoDefaultItemPropertiesComponent.prototype, "textStyle", {
        get: function () {
            return this._getOption('textStyle');
        },
        set: function (value) {
            this._setOption('textStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoDefaultItemPropertiesComponent.prototype, "_optionPath", {
        get: function () {
            return 'defaultItemProperties';
        },
        enumerable: true,
        configurable: true
    });
    DxoDefaultItemPropertiesComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoDefaultItemPropertiesComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoDefaultItemPropertiesComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoDefaultItemPropertiesComponent.prototype, "connectorLineEnd", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoDefaultItemPropertiesComponent.prototype, "connectorLineStart", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoDefaultItemPropertiesComponent.prototype, "connectorLineType", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoDefaultItemPropertiesComponent.prototype, "style", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoDefaultItemPropertiesComponent.prototype, "textStyle", null);
    DxoDefaultItemPropertiesComponent = __decorate([
        Component({
            selector: 'dxo-default-item-properties',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoDefaultItemPropertiesComponent);
    return DxoDefaultItemPropertiesComponent;
}(NestedOption));
var DxoDefaultItemPropertiesModule = /** @class */ (function () {
    function DxoDefaultItemPropertiesModule() {
    }
    DxoDefaultItemPropertiesModule = __decorate([
        NgModule({
            declarations: [
                DxoDefaultItemPropertiesComponent
            ],
            exports: [
                DxoDefaultItemPropertiesComponent
            ],
        })
    ], DxoDefaultItemPropertiesModule);
    return DxoDefaultItemPropertiesModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoDelayComponent = /** @class */ (function (_super) {
    __extends(DxoDelayComponent, _super);
    function DxoDelayComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoDelayComponent.prototype, "hide", {
        get: function () {
            return this._getOption('hide');
        },
        set: function (value) {
            this._setOption('hide', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoDelayComponent.prototype, "show", {
        get: function () {
            return this._getOption('show');
        },
        set: function (value) {
            this._setOption('show', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoDelayComponent.prototype, "_optionPath", {
        get: function () {
            return 'delay';
        },
        enumerable: true,
        configurable: true
    });
    DxoDelayComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoDelayComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoDelayComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoDelayComponent.prototype, "hide", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoDelayComponent.prototype, "show", null);
    DxoDelayComponent = __decorate([
        Component({
            selector: 'dxo-delay',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoDelayComponent);
    return DxoDelayComponent;
}(NestedOption));
var DxoDelayModule = /** @class */ (function () {
    function DxoDelayModule() {
    }
    DxoDelayModule = __decorate([
        NgModule({
            declarations: [
                DxoDelayComponent
            ],
            exports: [
                DxoDelayComponent
            ],
        })
    ], DxoDelayModule);
    return DxoDelayModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoDependenciesComponent = /** @class */ (function (_super) {
    __extends(DxoDependenciesComponent, _super);
    function DxoDependenciesComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoDependenciesComponent.prototype, "dataSource", {
        get: function () {
            return this._getOption('dataSource');
        },
        set: function (value) {
            this._setOption('dataSource', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoDependenciesComponent.prototype, "keyExpr", {
        get: function () {
            return this._getOption('keyExpr');
        },
        set: function (value) {
            this._setOption('keyExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoDependenciesComponent.prototype, "predecessorIdExpr", {
        get: function () {
            return this._getOption('predecessorIdExpr');
        },
        set: function (value) {
            this._setOption('predecessorIdExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoDependenciesComponent.prototype, "successorIdExpr", {
        get: function () {
            return this._getOption('successorIdExpr');
        },
        set: function (value) {
            this._setOption('successorIdExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoDependenciesComponent.prototype, "typeExpr", {
        get: function () {
            return this._getOption('typeExpr');
        },
        set: function (value) {
            this._setOption('typeExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoDependenciesComponent.prototype, "_optionPath", {
        get: function () {
            return 'dependencies';
        },
        enumerable: true,
        configurable: true
    });
    DxoDependenciesComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoDependenciesComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoDependenciesComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoDependenciesComponent.prototype, "dataSource", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoDependenciesComponent.prototype, "keyExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoDependenciesComponent.prototype, "predecessorIdExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoDependenciesComponent.prototype, "successorIdExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoDependenciesComponent.prototype, "typeExpr", null);
    DxoDependenciesComponent = __decorate([
        Component({
            selector: 'dxo-dependencies',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoDependenciesComponent);
    return DxoDependenciesComponent;
}(NestedOption));
var DxoDependenciesModule = /** @class */ (function () {
    function DxoDependenciesModule() {
    }
    DxoDependenciesModule = __decorate([
        NgModule({
            declarations: [
                DxoDependenciesComponent
            ],
            exports: [
                DxoDependenciesComponent
            ],
        })
    ], DxoDependenciesModule);
    return DxoDependenciesModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoDetailsComponent = /** @class */ (function (_super) {
    __extends(DxoDetailsComponent, _super);
    function DxoDetailsComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoDetailsComponent.prototype, "columns", {
        get: function () {
            return this._getOption('columns');
        },
        set: function (value) {
            this._setOption('columns', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoDetailsComponent.prototype, "_optionPath", {
        get: function () {
            return 'details';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoDetailsComponent.prototype, "columnsChildren", {
        get: function () {
            return this._getOption('columns');
        },
        set: function (value) {
            this.setChildren('columns', value);
        },
        enumerable: true,
        configurable: true
    });
    DxoDetailsComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoDetailsComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoDetailsComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxoDetailsComponent.prototype, "columns", null);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiColumnComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxoDetailsComponent.prototype, "columnsChildren", null);
    DxoDetailsComponent = __decorate([
        Component({
            selector: 'dxo-details',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoDetailsComponent);
    return DxoDetailsComponent;
}(NestedOption));
var DxoDetailsModule = /** @class */ (function () {
    function DxoDetailsModule() {
    }
    DxoDetailsModule = __decorate([
        NgModule({
            declarations: [
                DxoDetailsComponent
            ],
            exports: [
                DxoDetailsComponent
            ],
        })
    ], DxoDetailsModule);
    return DxoDetailsModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoDisplayFormatComponent = /** @class */ (function (_super) {
    __extends(DxoDisplayFormatComponent, _super);
    function DxoDisplayFormatComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoDisplayFormatComponent.prototype, "_optionPath", {
        get: function () {
            return 'displayFormat';
        },
        enumerable: true,
        configurable: true
    });
    DxoDisplayFormatComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoDisplayFormatComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoDisplayFormatComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoDisplayFormatComponent = __decorate([
        Component({
            selector: 'dxo-display-format',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'currency',
                'formatter',
                'parser',
                'precision',
                'type'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoDisplayFormatComponent);
    return DxoDisplayFormatComponent;
}(DxoFormat));
var DxoDisplayFormatModule = /** @class */ (function () {
    function DxoDisplayFormatModule() {
    }
    DxoDisplayFormatModule = __decorate([
        NgModule({
            declarations: [
                DxoDisplayFormatComponent
            ],
            exports: [
                DxoDisplayFormatComponent
            ],
        })
    ], DxoDisplayFormatModule);
    return DxoDisplayFormatModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoDragBoxStyleComponent = /** @class */ (function (_super) {
    __extends(DxoDragBoxStyleComponent, _super);
    function DxoDragBoxStyleComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoDragBoxStyleComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoDragBoxStyleComponent.prototype, "opacity", {
        get: function () {
            return this._getOption('opacity');
        },
        set: function (value) {
            this._setOption('opacity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoDragBoxStyleComponent.prototype, "_optionPath", {
        get: function () {
            return 'dragBoxStyle';
        },
        enumerable: true,
        configurable: true
    });
    DxoDragBoxStyleComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoDragBoxStyleComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoDragBoxStyleComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoDragBoxStyleComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoDragBoxStyleComponent.prototype, "opacity", null);
    DxoDragBoxStyleComponent = __decorate([
        Component({
            selector: 'dxo-drag-box-style',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoDragBoxStyleComponent);
    return DxoDragBoxStyleComponent;
}(NestedOption));
var DxoDragBoxStyleModule = /** @class */ (function () {
    function DxoDragBoxStyleModule() {
    }
    DxoDragBoxStyleModule = __decorate([
        NgModule({
            declarations: [
                DxoDragBoxStyleComponent
            ],
            exports: [
                DxoDragBoxStyleComponent
            ],
        })
    ], DxoDragBoxStyleModule);
    return DxoDragBoxStyleModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoPopupOptions = /** @class */ (function (_super) {
    __extends(DxoPopupOptions, _super);
    function DxoPopupOptions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DxoPopupOptions.prototype, "accessKey", {
        get: function () {
            return this._getOption('accessKey');
        },
        set: function (value) {
            this._setOption('accessKey', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "animation", {
        get: function () {
            return this._getOption('animation');
        },
        set: function (value) {
            this._setOption('animation', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "closeOnOutsideClick", {
        get: function () {
            return this._getOption('closeOnOutsideClick');
        },
        set: function (value) {
            this._setOption('closeOnOutsideClick', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "container", {
        get: function () {
            return this._getOption('container');
        },
        set: function (value) {
            this._setOption('container', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "contentTemplate", {
        get: function () {
            return this._getOption('contentTemplate');
        },
        set: function (value) {
            this._setOption('contentTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "deferRendering", {
        get: function () {
            return this._getOption('deferRendering');
        },
        set: function (value) {
            this._setOption('deferRendering', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "disabled", {
        get: function () {
            return this._getOption('disabled');
        },
        set: function (value) {
            this._setOption('disabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "dragEnabled", {
        get: function () {
            return this._getOption('dragEnabled');
        },
        set: function (value) {
            this._setOption('dragEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "elementAttr", {
        get: function () {
            return this._getOption('elementAttr');
        },
        set: function (value) {
            this._setOption('elementAttr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "focusStateEnabled", {
        get: function () {
            return this._getOption('focusStateEnabled');
        },
        set: function (value) {
            this._setOption('focusStateEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "fullScreen", {
        get: function () {
            return this._getOption('fullScreen');
        },
        set: function (value) {
            this._setOption('fullScreen', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "height", {
        get: function () {
            return this._getOption('height');
        },
        set: function (value) {
            this._setOption('height', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "hint", {
        get: function () {
            return this._getOption('hint');
        },
        set: function (value) {
            this._setOption('hint', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "hoverStateEnabled", {
        get: function () {
            return this._getOption('hoverStateEnabled');
        },
        set: function (value) {
            this._setOption('hoverStateEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "maxHeight", {
        get: function () {
            return this._getOption('maxHeight');
        },
        set: function (value) {
            this._setOption('maxHeight', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "maxWidth", {
        get: function () {
            return this._getOption('maxWidth');
        },
        set: function (value) {
            this._setOption('maxWidth', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "minHeight", {
        get: function () {
            return this._getOption('minHeight');
        },
        set: function (value) {
            this._setOption('minHeight', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "minWidth", {
        get: function () {
            return this._getOption('minWidth');
        },
        set: function (value) {
            this._setOption('minWidth', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "onContentReady", {
        get: function () {
            return this._getOption('onContentReady');
        },
        set: function (value) {
            this._setOption('onContentReady', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "onDisposing", {
        get: function () {
            return this._getOption('onDisposing');
        },
        set: function (value) {
            this._setOption('onDisposing', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "onHidden", {
        get: function () {
            return this._getOption('onHidden');
        },
        set: function (value) {
            this._setOption('onHidden', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "onHiding", {
        get: function () {
            return this._getOption('onHiding');
        },
        set: function (value) {
            this._setOption('onHiding', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "onInitialized", {
        get: function () {
            return this._getOption('onInitialized');
        },
        set: function (value) {
            this._setOption('onInitialized', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "onOptionChanged", {
        get: function () {
            return this._getOption('onOptionChanged');
        },
        set: function (value) {
            this._setOption('onOptionChanged', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "onResize", {
        get: function () {
            return this._getOption('onResize');
        },
        set: function (value) {
            this._setOption('onResize', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "onResizeEnd", {
        get: function () {
            return this._getOption('onResizeEnd');
        },
        set: function (value) {
            this._setOption('onResizeEnd', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "onResizeStart", {
        get: function () {
            return this._getOption('onResizeStart');
        },
        set: function (value) {
            this._setOption('onResizeStart', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "onShowing", {
        get: function () {
            return this._getOption('onShowing');
        },
        set: function (value) {
            this._setOption('onShowing', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "onShown", {
        get: function () {
            return this._getOption('onShown');
        },
        set: function (value) {
            this._setOption('onShown', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "onTitleRendered", {
        get: function () {
            return this._getOption('onTitleRendered');
        },
        set: function (value) {
            this._setOption('onTitleRendered', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "position", {
        get: function () {
            return this._getOption('position');
        },
        set: function (value) {
            this._setOption('position', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "resizeEnabled", {
        get: function () {
            return this._getOption('resizeEnabled');
        },
        set: function (value) {
            this._setOption('resizeEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "rtlEnabled", {
        get: function () {
            return this._getOption('rtlEnabled');
        },
        set: function (value) {
            this._setOption('rtlEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "shading", {
        get: function () {
            return this._getOption('shading');
        },
        set: function (value) {
            this._setOption('shading', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "shadingColor", {
        get: function () {
            return this._getOption('shadingColor');
        },
        set: function (value) {
            this._setOption('shadingColor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "showCloseButton", {
        get: function () {
            return this._getOption('showCloseButton');
        },
        set: function (value) {
            this._setOption('showCloseButton', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "showTitle", {
        get: function () {
            return this._getOption('showTitle');
        },
        set: function (value) {
            this._setOption('showTitle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "tabIndex", {
        get: function () {
            return this._getOption('tabIndex');
        },
        set: function (value) {
            this._setOption('tabIndex', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "title", {
        get: function () {
            return this._getOption('title');
        },
        set: function (value) {
            this._setOption('title', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "titleTemplate", {
        get: function () {
            return this._getOption('titleTemplate');
        },
        set: function (value) {
            this._setOption('titleTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "toolbarItems", {
        get: function () {
            return this._getOption('toolbarItems');
        },
        set: function (value) {
            this._setOption('toolbarItems', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "hideEvent", {
        get: function () {
            return this._getOption('hideEvent');
        },
        set: function (value) {
            this._setOption('hideEvent', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "showEvent", {
        get: function () {
            return this._getOption('showEvent');
        },
        set: function (value) {
            this._setOption('showEvent', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupOptions.prototype, "target", {
        get: function () {
            return this._getOption('target');
        },
        set: function (value) {
            this._setOption('target', value);
        },
        enumerable: true,
        configurable: true
    });
    return DxoPopupOptions;
}(NestedOption));

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiToolbarItemComponent = /** @class */ (function (_super) {
    __extends(DxiToolbarItemComponent, _super);
    function DxiToolbarItemComponent(parentOptionHost, optionHost, renderer, document, templateHost, element) {
        var _this = _super.call(this) || this;
        _this.renderer = renderer;
        _this.document = document;
        _this.element = element;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        templateHost.setHost(_this);
        return _this;
    }
    Object.defineProperty(DxiToolbarItemComponent.prototype, "disabled", {
        get: function () {
            return this._getOption('disabled');
        },
        set: function (value) {
            this._setOption('disabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiToolbarItemComponent.prototype, "html", {
        get: function () {
            return this._getOption('html');
        },
        set: function (value) {
            this._setOption('html', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiToolbarItemComponent.prototype, "location", {
        get: function () {
            return this._getOption('location');
        },
        set: function (value) {
            this._setOption('location', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiToolbarItemComponent.prototype, "options", {
        get: function () {
            return this._getOption('options');
        },
        set: function (value) {
            this._setOption('options', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiToolbarItemComponent.prototype, "template", {
        get: function () {
            return this._getOption('template');
        },
        set: function (value) {
            this._setOption('template', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiToolbarItemComponent.prototype, "text", {
        get: function () {
            return this._getOption('text');
        },
        set: function (value) {
            this._setOption('text', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiToolbarItemComponent.prototype, "toolbar", {
        get: function () {
            return this._getOption('toolbar');
        },
        set: function (value) {
            this._setOption('toolbar', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiToolbarItemComponent.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiToolbarItemComponent.prototype, "widget", {
        get: function () {
            return this._getOption('widget');
        },
        set: function (value) {
            this._setOption('widget', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiToolbarItemComponent.prototype, "_optionPath", {
        get: function () {
            return 'toolbarItems';
        },
        enumerable: true,
        configurable: true
    });
    DxiToolbarItemComponent.prototype.setTemplate = function (template) {
        this.template = template;
    };
    DxiToolbarItemComponent.prototype.ngAfterViewInit = function () {
        extractTemplate(this, this.element, this.renderer, this.document);
    };
    DxiToolbarItemComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] },
        { type: Renderer2 },
        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },
        { type: DxTemplateHost, decorators: [{ type: Host }] },
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxiToolbarItemComponent.prototype, "disabled", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiToolbarItemComponent.prototype, "html", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiToolbarItemComponent.prototype, "location", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiToolbarItemComponent.prototype, "options", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiToolbarItemComponent.prototype, "template", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiToolbarItemComponent.prototype, "text", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiToolbarItemComponent.prototype, "toolbar", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxiToolbarItemComponent.prototype, "visible", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiToolbarItemComponent.prototype, "widget", null);
    DxiToolbarItemComponent = __decorate([
        Component({
            selector: 'dxi-toolbar-item',
            template: '<ng-content></ng-content>',
            providers: [NestedOptionHost, DxTemplateHost],
            styles: [':host { display: block; }']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __param(3, Inject(DOCUMENT)),
        __param(4, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost,
            Renderer2, Object, DxTemplateHost,
            ElementRef])
    ], DxiToolbarItemComponent);
    return DxiToolbarItemComponent;
}(CollectionNestedOption));
var DxiToolbarItemModule = /** @class */ (function () {
    function DxiToolbarItemModule() {
    }
    DxiToolbarItemModule = __decorate([
        NgModule({
            declarations: [
                DxiToolbarItemComponent
            ],
            exports: [
                DxiToolbarItemComponent
            ],
        })
    ], DxiToolbarItemModule);
    return DxiToolbarItemModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoDropDownOptionsComponent = /** @class */ (function (_super) {
    __extends(DxoDropDownOptionsComponent, _super);
    function DxoDropDownOptionsComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        _this._createEventEmitters([
            { emit: 'heightChange' },
            { emit: 'positionChange' },
            { emit: 'visibleChange' },
            { emit: 'widthChange' }
        ]);
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoDropDownOptionsComponent.prototype, "_optionPath", {
        get: function () {
            return 'dropDownOptions';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoDropDownOptionsComponent.prototype, "toolbarItemsChildren", {
        get: function () {
            return this._getOption('toolbarItems');
        },
        set: function (value) {
            this.setChildren('toolbarItems', value);
        },
        enumerable: true,
        configurable: true
    });
    DxoDropDownOptionsComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoDropDownOptionsComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoDropDownOptionsComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxoDropDownOptionsComponent.prototype, "heightChange", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxoDropDownOptionsComponent.prototype, "positionChange", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxoDropDownOptionsComponent.prototype, "visibleChange", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxoDropDownOptionsComponent.prototype, "widthChange", void 0);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiToolbarItemComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxoDropDownOptionsComponent.prototype, "toolbarItemsChildren", null);
    DxoDropDownOptionsComponent = __decorate([
        Component({
            selector: 'dxo-drop-down-options',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'accessKey',
                'animation',
                'closeOnOutsideClick',
                'container',
                'contentTemplate',
                'deferRendering',
                'disabled',
                'dragEnabled',
                'elementAttr',
                'focusStateEnabled',
                'fullScreen',
                'height',
                'hint',
                'hoverStateEnabled',
                'maxHeight',
                'maxWidth',
                'minHeight',
                'minWidth',
                'onContentReady',
                'onDisposing',
                'onHidden',
                'onHiding',
                'onInitialized',
                'onOptionChanged',
                'onResize',
                'onResizeEnd',
                'onResizeStart',
                'onShowing',
                'onShown',
                'onTitleRendered',
                'position',
                'resizeEnabled',
                'rtlEnabled',
                'shading',
                'shadingColor',
                'showCloseButton',
                'showTitle',
                'tabIndex',
                'title',
                'titleTemplate',
                'toolbarItems',
                'visible',
                'width',
                'hideEvent',
                'showEvent',
                'target'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoDropDownOptionsComponent);
    return DxoDropDownOptionsComponent;
}(DxoPopupOptions));
var DxoDropDownOptionsModule = /** @class */ (function () {
    function DxoDropDownOptionsModule() {
    }
    DxoDropDownOptionsModule = __decorate([
        NgModule({
            declarations: [
                DxoDropDownOptionsComponent
            ],
            exports: [
                DxoDropDownOptionsComponent
            ],
        })
    ], DxoDropDownOptionsModule);
    return DxoDropDownOptionsModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoEdgesComponent = /** @class */ (function (_super) {
    __extends(DxoEdgesComponent, _super);
    function DxoEdgesComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoEdgesComponent.prototype, "dataSource", {
        get: function () {
            return this._getOption('dataSource');
        },
        set: function (value) {
            this._setOption('dataSource', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEdgesComponent.prototype, "fromExpr", {
        get: function () {
            return this._getOption('fromExpr');
        },
        set: function (value) {
            this._setOption('fromExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEdgesComponent.prototype, "fromLineEndExpr", {
        get: function () {
            return this._getOption('fromLineEndExpr');
        },
        set: function (value) {
            this._setOption('fromLineEndExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEdgesComponent.prototype, "fromPointIndexExpr", {
        get: function () {
            return this._getOption('fromPointIndexExpr');
        },
        set: function (value) {
            this._setOption('fromPointIndexExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEdgesComponent.prototype, "keyExpr", {
        get: function () {
            return this._getOption('keyExpr');
        },
        set: function (value) {
            this._setOption('keyExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEdgesComponent.prototype, "lineTypeExpr", {
        get: function () {
            return this._getOption('lineTypeExpr');
        },
        set: function (value) {
            this._setOption('lineTypeExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEdgesComponent.prototype, "lockedExpr", {
        get: function () {
            return this._getOption('lockedExpr');
        },
        set: function (value) {
            this._setOption('lockedExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEdgesComponent.prototype, "pointsExpr", {
        get: function () {
            return this._getOption('pointsExpr');
        },
        set: function (value) {
            this._setOption('pointsExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEdgesComponent.prototype, "styleExpr", {
        get: function () {
            return this._getOption('styleExpr');
        },
        set: function (value) {
            this._setOption('styleExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEdgesComponent.prototype, "textExpr", {
        get: function () {
            return this._getOption('textExpr');
        },
        set: function (value) {
            this._setOption('textExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEdgesComponent.prototype, "textStyleExpr", {
        get: function () {
            return this._getOption('textStyleExpr');
        },
        set: function (value) {
            this._setOption('textStyleExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEdgesComponent.prototype, "toExpr", {
        get: function () {
            return this._getOption('toExpr');
        },
        set: function (value) {
            this._setOption('toExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEdgesComponent.prototype, "toLineEndExpr", {
        get: function () {
            return this._getOption('toLineEndExpr');
        },
        set: function (value) {
            this._setOption('toLineEndExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEdgesComponent.prototype, "toPointIndexExpr", {
        get: function () {
            return this._getOption('toPointIndexExpr');
        },
        set: function (value) {
            this._setOption('toPointIndexExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEdgesComponent.prototype, "zIndexExpr", {
        get: function () {
            return this._getOption('zIndexExpr');
        },
        set: function (value) {
            this._setOption('zIndexExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEdgesComponent.prototype, "_optionPath", {
        get: function () {
            return 'edges';
        },
        enumerable: true,
        configurable: true
    });
    DxoEdgesComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoEdgesComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoEdgesComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoEdgesComponent.prototype, "dataSource", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoEdgesComponent.prototype, "fromExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoEdgesComponent.prototype, "fromLineEndExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoEdgesComponent.prototype, "fromPointIndexExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoEdgesComponent.prototype, "keyExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoEdgesComponent.prototype, "lineTypeExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoEdgesComponent.prototype, "lockedExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoEdgesComponent.prototype, "pointsExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoEdgesComponent.prototype, "styleExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoEdgesComponent.prototype, "textExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoEdgesComponent.prototype, "textStyleExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoEdgesComponent.prototype, "toExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoEdgesComponent.prototype, "toLineEndExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoEdgesComponent.prototype, "toPointIndexExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoEdgesComponent.prototype, "zIndexExpr", null);
    DxoEdgesComponent = __decorate([
        Component({
            selector: 'dxo-edges',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoEdgesComponent);
    return DxoEdgesComponent;
}(NestedOption));
var DxoEdgesModule = /** @class */ (function () {
    function DxoEdgesModule() {
    }
    DxoEdgesModule = __decorate([
        NgModule({
            declarations: [
                DxoEdgesComponent
            ],
            exports: [
                DxoEdgesComponent
            ],
        })
    ], DxoEdgesModule);
    return DxoEdgesModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoEditingComponent = /** @class */ (function (_super) {
    __extends(DxoEditingComponent, _super);
    function DxoEditingComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoEditingComponent.prototype, "allowAdding", {
        get: function () {
            return this._getOption('allowAdding');
        },
        set: function (value) {
            this._setOption('allowAdding', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEditingComponent.prototype, "allowDeleting", {
        get: function () {
            return this._getOption('allowDeleting');
        },
        set: function (value) {
            this._setOption('allowDeleting', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEditingComponent.prototype, "allowUpdating", {
        get: function () {
            return this._getOption('allowUpdating');
        },
        set: function (value) {
            this._setOption('allowUpdating', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEditingComponent.prototype, "confirmDelete", {
        get: function () {
            return this._getOption('confirmDelete');
        },
        set: function (value) {
            this._setOption('confirmDelete', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEditingComponent.prototype, "form", {
        get: function () {
            return this._getOption('form');
        },
        set: function (value) {
            this._setOption('form', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEditingComponent.prototype, "mode", {
        get: function () {
            return this._getOption('mode');
        },
        set: function (value) {
            this._setOption('mode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEditingComponent.prototype, "popup", {
        get: function () {
            return this._getOption('popup');
        },
        set: function (value) {
            this._setOption('popup', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEditingComponent.prototype, "refreshMode", {
        get: function () {
            return this._getOption('refreshMode');
        },
        set: function (value) {
            this._setOption('refreshMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEditingComponent.prototype, "selectTextOnEditStart", {
        get: function () {
            return this._getOption('selectTextOnEditStart');
        },
        set: function (value) {
            this._setOption('selectTextOnEditStart', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEditingComponent.prototype, "startEditAction", {
        get: function () {
            return this._getOption('startEditAction');
        },
        set: function (value) {
            this._setOption('startEditAction', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEditingComponent.prototype, "texts", {
        get: function () {
            return this._getOption('texts');
        },
        set: function (value) {
            this._setOption('texts', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEditingComponent.prototype, "useIcons", {
        get: function () {
            return this._getOption('useIcons');
        },
        set: function (value) {
            this._setOption('useIcons', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEditingComponent.prototype, "allowDependencyAdding", {
        get: function () {
            return this._getOption('allowDependencyAdding');
        },
        set: function (value) {
            this._setOption('allowDependencyAdding', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEditingComponent.prototype, "allowDependencyDeleting", {
        get: function () {
            return this._getOption('allowDependencyDeleting');
        },
        set: function (value) {
            this._setOption('allowDependencyDeleting', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEditingComponent.prototype, "allowResourceAdding", {
        get: function () {
            return this._getOption('allowResourceAdding');
        },
        set: function (value) {
            this._setOption('allowResourceAdding', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEditingComponent.prototype, "allowResourceDeleting", {
        get: function () {
            return this._getOption('allowResourceDeleting');
        },
        set: function (value) {
            this._setOption('allowResourceDeleting', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEditingComponent.prototype, "allowResourceUpdating", {
        get: function () {
            return this._getOption('allowResourceUpdating');
        },
        set: function (value) {
            this._setOption('allowResourceUpdating', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEditingComponent.prototype, "allowTaskAdding", {
        get: function () {
            return this._getOption('allowTaskAdding');
        },
        set: function (value) {
            this._setOption('allowTaskAdding', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEditingComponent.prototype, "allowTaskDeleting", {
        get: function () {
            return this._getOption('allowTaskDeleting');
        },
        set: function (value) {
            this._setOption('allowTaskDeleting', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEditingComponent.prototype, "allowTaskUpdating", {
        get: function () {
            return this._getOption('allowTaskUpdating');
        },
        set: function (value) {
            this._setOption('allowTaskUpdating', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEditingComponent.prototype, "enabled", {
        get: function () {
            return this._getOption('enabled');
        },
        set: function (value) {
            this._setOption('enabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEditingComponent.prototype, "allowDragging", {
        get: function () {
            return this._getOption('allowDragging');
        },
        set: function (value) {
            this._setOption('allowDragging', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEditingComponent.prototype, "allowEditingTimeZones", {
        get: function () {
            return this._getOption('allowEditingTimeZones');
        },
        set: function (value) {
            this._setOption('allowEditingTimeZones', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEditingComponent.prototype, "allowResizing", {
        get: function () {
            return this._getOption('allowResizing');
        },
        set: function (value) {
            this._setOption('allowResizing', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEditingComponent.prototype, "allowTimeZoneEditing", {
        get: function () {
            return this._getOption('allowTimeZoneEditing');
        },
        set: function (value) {
            this._setOption('allowTimeZoneEditing', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoEditingComponent.prototype, "_optionPath", {
        get: function () {
            return 'editing';
        },
        enumerable: true,
        configurable: true
    });
    DxoEditingComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoEditingComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoEditingComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoEditingComponent.prototype, "allowAdding", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoEditingComponent.prototype, "allowDeleting", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoEditingComponent.prototype, "allowUpdating", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoEditingComponent.prototype, "confirmDelete", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoEditingComponent.prototype, "form", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoEditingComponent.prototype, "mode", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoEditingComponent.prototype, "popup", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoEditingComponent.prototype, "refreshMode", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoEditingComponent.prototype, "selectTextOnEditStart", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoEditingComponent.prototype, "startEditAction", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoEditingComponent.prototype, "texts", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoEditingComponent.prototype, "useIcons", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoEditingComponent.prototype, "allowDependencyAdding", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoEditingComponent.prototype, "allowDependencyDeleting", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoEditingComponent.prototype, "allowResourceAdding", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoEditingComponent.prototype, "allowResourceDeleting", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoEditingComponent.prototype, "allowResourceUpdating", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoEditingComponent.prototype, "allowTaskAdding", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoEditingComponent.prototype, "allowTaskDeleting", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoEditingComponent.prototype, "allowTaskUpdating", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoEditingComponent.prototype, "enabled", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoEditingComponent.prototype, "allowDragging", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoEditingComponent.prototype, "allowEditingTimeZones", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoEditingComponent.prototype, "allowResizing", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoEditingComponent.prototype, "allowTimeZoneEditing", null);
    DxoEditingComponent = __decorate([
        Component({
            selector: 'dxo-editing',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoEditingComponent);
    return DxoEditingComponent;
}(NestedOption));
var DxoEditingModule = /** @class */ (function () {
    function DxoEditingModule() {
    }
    DxoEditingModule = __decorate([
        NgModule({
            declarations: [
                DxoEditingComponent
            ],
            exports: [
                DxoEditingComponent
            ],
        })
    ], DxoEditingModule);
    return DxoEditingModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoExportComponent = /** @class */ (function (_super) {
    __extends(DxoExportComponent, _super);
    function DxoExportComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoExportComponent.prototype, "backgroundColor", {
        get: function () {
            return this._getOption('backgroundColor');
        },
        set: function (value) {
            this._setOption('backgroundColor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoExportComponent.prototype, "enabled", {
        get: function () {
            return this._getOption('enabled');
        },
        set: function (value) {
            this._setOption('enabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoExportComponent.prototype, "fileName", {
        get: function () {
            return this._getOption('fileName');
        },
        set: function (value) {
            this._setOption('fileName', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoExportComponent.prototype, "formats", {
        get: function () {
            return this._getOption('formats');
        },
        set: function (value) {
            this._setOption('formats', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoExportComponent.prototype, "margin", {
        get: function () {
            return this._getOption('margin');
        },
        set: function (value) {
            this._setOption('margin', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoExportComponent.prototype, "printingEnabled", {
        get: function () {
            return this._getOption('printingEnabled');
        },
        set: function (value) {
            this._setOption('printingEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoExportComponent.prototype, "proxyUrl", {
        get: function () {
            return this._getOption('proxyUrl');
        },
        set: function (value) {
            this._setOption('proxyUrl', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoExportComponent.prototype, "svgToCanvas", {
        get: function () {
            return this._getOption('svgToCanvas');
        },
        set: function (value) {
            this._setOption('svgToCanvas', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoExportComponent.prototype, "allowExportSelectedData", {
        get: function () {
            return this._getOption('allowExportSelectedData');
        },
        set: function (value) {
            this._setOption('allowExportSelectedData', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoExportComponent.prototype, "customizeExcelCell", {
        get: function () {
            return this._getOption('customizeExcelCell');
        },
        set: function (value) {
            this._setOption('customizeExcelCell', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoExportComponent.prototype, "excelFilterEnabled", {
        get: function () {
            return this._getOption('excelFilterEnabled');
        },
        set: function (value) {
            this._setOption('excelFilterEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoExportComponent.prototype, "excelWrapTextEnabled", {
        get: function () {
            return this._getOption('excelWrapTextEnabled');
        },
        set: function (value) {
            this._setOption('excelWrapTextEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoExportComponent.prototype, "ignoreExcelErrors", {
        get: function () {
            return this._getOption('ignoreExcelErrors');
        },
        set: function (value) {
            this._setOption('ignoreExcelErrors', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoExportComponent.prototype, "texts", {
        get: function () {
            return this._getOption('texts');
        },
        set: function (value) {
            this._setOption('texts', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoExportComponent.prototype, "_optionPath", {
        get: function () {
            return 'export';
        },
        enumerable: true,
        configurable: true
    });
    DxoExportComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoExportComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoExportComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoExportComponent.prototype, "backgroundColor", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoExportComponent.prototype, "enabled", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoExportComponent.prototype, "fileName", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxoExportComponent.prototype, "formats", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoExportComponent.prototype, "margin", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoExportComponent.prototype, "printingEnabled", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoExportComponent.prototype, "proxyUrl", null);
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxoExportComponent.prototype, "svgToCanvas", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoExportComponent.prototype, "allowExportSelectedData", null);
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxoExportComponent.prototype, "customizeExcelCell", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoExportComponent.prototype, "excelFilterEnabled", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoExportComponent.prototype, "excelWrapTextEnabled", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoExportComponent.prototype, "ignoreExcelErrors", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoExportComponent.prototype, "texts", null);
    DxoExportComponent = __decorate([
        Component({
            selector: 'dxo-export',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoExportComponent);
    return DxoExportComponent;
}(NestedOption));
var DxoExportModule = /** @class */ (function () {
    function DxoExportModule() {
    }
    DxoExportModule = __decorate([
        NgModule({
            declarations: [
                DxoExportComponent
            ],
            exports: [
                DxoExportComponent
            ],
        })
    ], DxoExportModule);
    return DxoExportModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoFieldChooserComponent = /** @class */ (function (_super) {
    __extends(DxoFieldChooserComponent, _super);
    function DxoFieldChooserComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoFieldChooserComponent.prototype, "allowSearch", {
        get: function () {
            return this._getOption('allowSearch');
        },
        set: function (value) {
            this._setOption('allowSearch', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFieldChooserComponent.prototype, "applyChangesMode", {
        get: function () {
            return this._getOption('applyChangesMode');
        },
        set: function (value) {
            this._setOption('applyChangesMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFieldChooserComponent.prototype, "enabled", {
        get: function () {
            return this._getOption('enabled');
        },
        set: function (value) {
            this._setOption('enabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFieldChooserComponent.prototype, "height", {
        get: function () {
            return this._getOption('height');
        },
        set: function (value) {
            this._setOption('height', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFieldChooserComponent.prototype, "layout", {
        get: function () {
            return this._getOption('layout');
        },
        set: function (value) {
            this._setOption('layout', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFieldChooserComponent.prototype, "searchTimeout", {
        get: function () {
            return this._getOption('searchTimeout');
        },
        set: function (value) {
            this._setOption('searchTimeout', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFieldChooserComponent.prototype, "texts", {
        get: function () {
            return this._getOption('texts');
        },
        set: function (value) {
            this._setOption('texts', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFieldChooserComponent.prototype, "title", {
        get: function () {
            return this._getOption('title');
        },
        set: function (value) {
            this._setOption('title', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFieldChooserComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFieldChooserComponent.prototype, "_optionPath", {
        get: function () {
            return 'fieldChooser';
        },
        enumerable: true,
        configurable: true
    });
    DxoFieldChooserComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoFieldChooserComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoFieldChooserComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoFieldChooserComponent.prototype, "allowSearch", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoFieldChooserComponent.prototype, "applyChangesMode", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoFieldChooserComponent.prototype, "enabled", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoFieldChooserComponent.prototype, "height", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoFieldChooserComponent.prototype, "layout", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoFieldChooserComponent.prototype, "searchTimeout", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoFieldChooserComponent.prototype, "texts", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoFieldChooserComponent.prototype, "title", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoFieldChooserComponent.prototype, "width", null);
    DxoFieldChooserComponent = __decorate([
        Component({
            selector: 'dxo-field-chooser',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoFieldChooserComponent);
    return DxoFieldChooserComponent;
}(NestedOption));
var DxoFieldChooserModule = /** @class */ (function () {
    function DxoFieldChooserModule() {
    }
    DxoFieldChooserModule = __decorate([
        NgModule({
            declarations: [
                DxoFieldChooserComponent
            ],
            exports: [
                DxoFieldChooserComponent
            ],
        })
    ], DxoFieldChooserModule);
    return DxoFieldChooserModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoFieldPanelComponent = /** @class */ (function (_super) {
    __extends(DxoFieldPanelComponent, _super);
    function DxoFieldPanelComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoFieldPanelComponent.prototype, "allowFieldDragging", {
        get: function () {
            return this._getOption('allowFieldDragging');
        },
        set: function (value) {
            this._setOption('allowFieldDragging', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFieldPanelComponent.prototype, "showColumnFields", {
        get: function () {
            return this._getOption('showColumnFields');
        },
        set: function (value) {
            this._setOption('showColumnFields', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFieldPanelComponent.prototype, "showDataFields", {
        get: function () {
            return this._getOption('showDataFields');
        },
        set: function (value) {
            this._setOption('showDataFields', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFieldPanelComponent.prototype, "showFilterFields", {
        get: function () {
            return this._getOption('showFilterFields');
        },
        set: function (value) {
            this._setOption('showFilterFields', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFieldPanelComponent.prototype, "showRowFields", {
        get: function () {
            return this._getOption('showRowFields');
        },
        set: function (value) {
            this._setOption('showRowFields', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFieldPanelComponent.prototype, "texts", {
        get: function () {
            return this._getOption('texts');
        },
        set: function (value) {
            this._setOption('texts', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFieldPanelComponent.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFieldPanelComponent.prototype, "_optionPath", {
        get: function () {
            return 'fieldPanel';
        },
        enumerable: true,
        configurable: true
    });
    DxoFieldPanelComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoFieldPanelComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoFieldPanelComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoFieldPanelComponent.prototype, "allowFieldDragging", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoFieldPanelComponent.prototype, "showColumnFields", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoFieldPanelComponent.prototype, "showDataFields", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoFieldPanelComponent.prototype, "showFilterFields", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoFieldPanelComponent.prototype, "showRowFields", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoFieldPanelComponent.prototype, "texts", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoFieldPanelComponent.prototype, "visible", null);
    DxoFieldPanelComponent = __decorate([
        Component({
            selector: 'dxo-field-panel',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoFieldPanelComponent);
    return DxoFieldPanelComponent;
}(NestedOption));
var DxoFieldPanelModule = /** @class */ (function () {
    function DxoFieldPanelModule() {
    }
    DxoFieldPanelModule = __decorate([
        NgModule({
            declarations: [
                DxoFieldPanelComponent
            ],
            exports: [
                DxoFieldPanelComponent
            ],
        })
    ], DxoFieldPanelModule);
    return DxoFieldPanelModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiFileManagerToolbarItem = /** @class */ (function (_super) {
    __extends(DxiFileManagerToolbarItem, _super);
    function DxiFileManagerToolbarItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DxiFileManagerToolbarItem.prototype, "cssClass", {
        get: function () {
            return this._getOption('cssClass');
        },
        set: function (value) {
            this._setOption('cssClass', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFileManagerToolbarItem.prototype, "disabled", {
        get: function () {
            return this._getOption('disabled');
        },
        set: function (value) {
            this._setOption('disabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFileManagerToolbarItem.prototype, "html", {
        get: function () {
            return this._getOption('html');
        },
        set: function (value) {
            this._setOption('html', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFileManagerToolbarItem.prototype, "locateInMenu", {
        get: function () {
            return this._getOption('locateInMenu');
        },
        set: function (value) {
            this._setOption('locateInMenu', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFileManagerToolbarItem.prototype, "location", {
        get: function () {
            return this._getOption('location');
        },
        set: function (value) {
            this._setOption('location', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFileManagerToolbarItem.prototype, "menuItemTemplate", {
        get: function () {
            return this._getOption('menuItemTemplate');
        },
        set: function (value) {
            this._setOption('menuItemTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFileManagerToolbarItem.prototype, "name", {
        get: function () {
            return this._getOption('name');
        },
        set: function (value) {
            this._setOption('name', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFileManagerToolbarItem.prototype, "options", {
        get: function () {
            return this._getOption('options');
        },
        set: function (value) {
            this._setOption('options', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFileManagerToolbarItem.prototype, "showText", {
        get: function () {
            return this._getOption('showText');
        },
        set: function (value) {
            this._setOption('showText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFileManagerToolbarItem.prototype, "template", {
        get: function () {
            return this._getOption('template');
        },
        set: function (value) {
            this._setOption('template', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFileManagerToolbarItem.prototype, "text", {
        get: function () {
            return this._getOption('text');
        },
        set: function (value) {
            this._setOption('text', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFileManagerToolbarItem.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiFileManagerToolbarItem.prototype, "widget", {
        get: function () {
            return this._getOption('widget');
        },
        set: function (value) {
            this._setOption('widget', value);
        },
        enumerable: true,
        configurable: true
    });
    return DxiFileManagerToolbarItem;
}(CollectionNestedOption));

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiFileSelectionItemComponent = /** @class */ (function (_super) {
    __extends(DxiFileSelectionItemComponent, _super);
    function DxiFileSelectionItemComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiFileSelectionItemComponent.prototype, "_optionPath", {
        get: function () {
            return 'fileSelectionItems';
        },
        enumerable: true,
        configurable: true
    });
    DxiFileSelectionItemComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxiFileSelectionItemComponent = __decorate([
        Component({
            selector: 'dxi-file-selection-item',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'cssClass',
                'disabled',
                'html',
                'locateInMenu',
                'location',
                'menuItemTemplate',
                'name',
                'options',
                'showText',
                'template',
                'text',
                'visible',
                'widget'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiFileSelectionItemComponent);
    return DxiFileSelectionItemComponent;
}(DxiFileManagerToolbarItem));
var DxiFileSelectionItemModule = /** @class */ (function () {
    function DxiFileSelectionItemModule() {
    }
    DxiFileSelectionItemModule = __decorate([
        NgModule({
            declarations: [
                DxiFileSelectionItemComponent
            ],
            exports: [
                DxiFileSelectionItemComponent
            ],
        })
    ], DxiFileSelectionItemModule);
    return DxiFileSelectionItemModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoFilterBuilderPopupComponent = /** @class */ (function (_super) {
    __extends(DxoFilterBuilderPopupComponent, _super);
    function DxoFilterBuilderPopupComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        _this._createEventEmitters([
            { emit: 'heightChange' },
            { emit: 'positionChange' },
            { emit: 'visibleChange' },
            { emit: 'widthChange' }
        ]);
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoFilterBuilderPopupComponent.prototype, "_optionPath", {
        get: function () {
            return 'filterBuilderPopup';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterBuilderPopupComponent.prototype, "toolbarItemsChildren", {
        get: function () {
            return this._getOption('toolbarItems');
        },
        set: function (value) {
            this.setChildren('toolbarItems', value);
        },
        enumerable: true,
        configurable: true
    });
    DxoFilterBuilderPopupComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoFilterBuilderPopupComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoFilterBuilderPopupComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxoFilterBuilderPopupComponent.prototype, "heightChange", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxoFilterBuilderPopupComponent.prototype, "positionChange", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxoFilterBuilderPopupComponent.prototype, "visibleChange", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxoFilterBuilderPopupComponent.prototype, "widthChange", void 0);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiToolbarItemComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxoFilterBuilderPopupComponent.prototype, "toolbarItemsChildren", null);
    DxoFilterBuilderPopupComponent = __decorate([
        Component({
            selector: 'dxo-filter-builder-popup',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'accessKey',
                'animation',
                'closeOnOutsideClick',
                'container',
                'contentTemplate',
                'deferRendering',
                'disabled',
                'dragEnabled',
                'elementAttr',
                'focusStateEnabled',
                'fullScreen',
                'height',
                'hint',
                'hoverStateEnabled',
                'maxHeight',
                'maxWidth',
                'minHeight',
                'minWidth',
                'onContentReady',
                'onDisposing',
                'onHidden',
                'onHiding',
                'onInitialized',
                'onOptionChanged',
                'onResize',
                'onResizeEnd',
                'onResizeStart',
                'onShowing',
                'onShown',
                'onTitleRendered',
                'position',
                'resizeEnabled',
                'rtlEnabled',
                'shading',
                'shadingColor',
                'showCloseButton',
                'showTitle',
                'tabIndex',
                'title',
                'titleTemplate',
                'toolbarItems',
                'visible',
                'width'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoFilterBuilderPopupComponent);
    return DxoFilterBuilderPopupComponent;
}(DxoPopupOptions));
var DxoFilterBuilderPopupModule = /** @class */ (function () {
    function DxoFilterBuilderPopupModule() {
    }
    DxoFilterBuilderPopupModule = __decorate([
        NgModule({
            declarations: [
                DxoFilterBuilderPopupComponent
            ],
            exports: [
                DxoFilterBuilderPopupComponent
            ],
        })
    ], DxoFilterBuilderPopupModule);
    return DxoFilterBuilderPopupModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoFilterBuilderOptions = /** @class */ (function (_super) {
    __extends(DxoFilterBuilderOptions, _super);
    function DxoFilterBuilderOptions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DxoFilterBuilderOptions.prototype, "accessKey", {
        get: function () {
            return this._getOption('accessKey');
        },
        set: function (value) {
            this._setOption('accessKey', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterBuilderOptions.prototype, "activeStateEnabled", {
        get: function () {
            return this._getOption('activeStateEnabled');
        },
        set: function (value) {
            this._setOption('activeStateEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterBuilderOptions.prototype, "allowHierarchicalFields", {
        get: function () {
            return this._getOption('allowHierarchicalFields');
        },
        set: function (value) {
            this._setOption('allowHierarchicalFields', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterBuilderOptions.prototype, "customOperations", {
        get: function () {
            return this._getOption('customOperations');
        },
        set: function (value) {
            this._setOption('customOperations', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterBuilderOptions.prototype, "disabled", {
        get: function () {
            return this._getOption('disabled');
        },
        set: function (value) {
            this._setOption('disabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterBuilderOptions.prototype, "elementAttr", {
        get: function () {
            return this._getOption('elementAttr');
        },
        set: function (value) {
            this._setOption('elementAttr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterBuilderOptions.prototype, "fields", {
        get: function () {
            return this._getOption('fields');
        },
        set: function (value) {
            this._setOption('fields', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterBuilderOptions.prototype, "filterOperationDescriptions", {
        get: function () {
            return this._getOption('filterOperationDescriptions');
        },
        set: function (value) {
            this._setOption('filterOperationDescriptions', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterBuilderOptions.prototype, "focusStateEnabled", {
        get: function () {
            return this._getOption('focusStateEnabled');
        },
        set: function (value) {
            this._setOption('focusStateEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterBuilderOptions.prototype, "groupOperationDescriptions", {
        get: function () {
            return this._getOption('groupOperationDescriptions');
        },
        set: function (value) {
            this._setOption('groupOperationDescriptions', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterBuilderOptions.prototype, "groupOperations", {
        get: function () {
            return this._getOption('groupOperations');
        },
        set: function (value) {
            this._setOption('groupOperations', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterBuilderOptions.prototype, "height", {
        get: function () {
            return this._getOption('height');
        },
        set: function (value) {
            this._setOption('height', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterBuilderOptions.prototype, "hint", {
        get: function () {
            return this._getOption('hint');
        },
        set: function (value) {
            this._setOption('hint', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterBuilderOptions.prototype, "hoverStateEnabled", {
        get: function () {
            return this._getOption('hoverStateEnabled');
        },
        set: function (value) {
            this._setOption('hoverStateEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterBuilderOptions.prototype, "maxGroupLevel", {
        get: function () {
            return this._getOption('maxGroupLevel');
        },
        set: function (value) {
            this._setOption('maxGroupLevel', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterBuilderOptions.prototype, "onContentReady", {
        get: function () {
            return this._getOption('onContentReady');
        },
        set: function (value) {
            this._setOption('onContentReady', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterBuilderOptions.prototype, "onDisposing", {
        get: function () {
            return this._getOption('onDisposing');
        },
        set: function (value) {
            this._setOption('onDisposing', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterBuilderOptions.prototype, "onEditorPrepared", {
        get: function () {
            return this._getOption('onEditorPrepared');
        },
        set: function (value) {
            this._setOption('onEditorPrepared', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterBuilderOptions.prototype, "onEditorPreparing", {
        get: function () {
            return this._getOption('onEditorPreparing');
        },
        set: function (value) {
            this._setOption('onEditorPreparing', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterBuilderOptions.prototype, "onInitialized", {
        get: function () {
            return this._getOption('onInitialized');
        },
        set: function (value) {
            this._setOption('onInitialized', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterBuilderOptions.prototype, "onOptionChanged", {
        get: function () {
            return this._getOption('onOptionChanged');
        },
        set: function (value) {
            this._setOption('onOptionChanged', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterBuilderOptions.prototype, "onValueChanged", {
        get: function () {
            return this._getOption('onValueChanged');
        },
        set: function (value) {
            this._setOption('onValueChanged', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterBuilderOptions.prototype, "rtlEnabled", {
        get: function () {
            return this._getOption('rtlEnabled');
        },
        set: function (value) {
            this._setOption('rtlEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterBuilderOptions.prototype, "tabIndex", {
        get: function () {
            return this._getOption('tabIndex');
        },
        set: function (value) {
            this._setOption('tabIndex', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterBuilderOptions.prototype, "value", {
        get: function () {
            return this._getOption('value');
        },
        set: function (value) {
            this._setOption('value', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterBuilderOptions.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterBuilderOptions.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    return DxoFilterBuilderOptions;
}(NestedOption));

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoFilterBuilderComponent = /** @class */ (function (_super) {
    __extends(DxoFilterBuilderComponent, _super);
    function DxoFilterBuilderComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        _this._createEventEmitters([
            { emit: 'valueChange' }
        ]);
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoFilterBuilderComponent.prototype, "_optionPath", {
        get: function () {
            return 'filterBuilder';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterBuilderComponent.prototype, "customOperationsChildren", {
        get: function () {
            return this._getOption('customOperations');
        },
        set: function (value) {
            this.setChildren('customOperations', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterBuilderComponent.prototype, "fieldsChildren", {
        get: function () {
            return this._getOption('fields');
        },
        set: function (value) {
            this.setChildren('fields', value);
        },
        enumerable: true,
        configurable: true
    });
    DxoFilterBuilderComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoFilterBuilderComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoFilterBuilderComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxoFilterBuilderComponent.prototype, "valueChange", void 0);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiCustomOperationComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxoFilterBuilderComponent.prototype, "customOperationsChildren", null);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiFieldComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxoFilterBuilderComponent.prototype, "fieldsChildren", null);
    DxoFilterBuilderComponent = __decorate([
        Component({
            selector: 'dxo-filter-builder',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'accessKey',
                'activeStateEnabled',
                'allowHierarchicalFields',
                'customOperations',
                'disabled',
                'elementAttr',
                'fields',
                'filterOperationDescriptions',
                'focusStateEnabled',
                'groupOperationDescriptions',
                'groupOperations',
                'height',
                'hint',
                'hoverStateEnabled',
                'maxGroupLevel',
                'onContentReady',
                'onDisposing',
                'onEditorPrepared',
                'onEditorPreparing',
                'onInitialized',
                'onOptionChanged',
                'onValueChanged',
                'rtlEnabled',
                'tabIndex',
                'value',
                'visible',
                'width'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoFilterBuilderComponent);
    return DxoFilterBuilderComponent;
}(DxoFilterBuilderOptions));
var DxoFilterBuilderModule = /** @class */ (function () {
    function DxoFilterBuilderModule() {
    }
    DxoFilterBuilderModule = __decorate([
        NgModule({
            declarations: [
                DxoFilterBuilderComponent
            ],
            exports: [
                DxoFilterBuilderComponent
            ],
        })
    ], DxoFilterBuilderModule);
    return DxoFilterBuilderModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoFilterOperationDescriptionsComponent = /** @class */ (function (_super) {
    __extends(DxoFilterOperationDescriptionsComponent, _super);
    function DxoFilterOperationDescriptionsComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "between", {
        get: function () {
            return this._getOption('between');
        },
        set: function (value) {
            this._setOption('between', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "contains", {
        get: function () {
            return this._getOption('contains');
        },
        set: function (value) {
            this._setOption('contains', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "endsWith", {
        get: function () {
            return this._getOption('endsWith');
        },
        set: function (value) {
            this._setOption('endsWith', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "equal", {
        get: function () {
            return this._getOption('equal');
        },
        set: function (value) {
            this._setOption('equal', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "greaterThan", {
        get: function () {
            return this._getOption('greaterThan');
        },
        set: function (value) {
            this._setOption('greaterThan', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "greaterThanOrEqual", {
        get: function () {
            return this._getOption('greaterThanOrEqual');
        },
        set: function (value) {
            this._setOption('greaterThanOrEqual', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "isBlank", {
        get: function () {
            return this._getOption('isBlank');
        },
        set: function (value) {
            this._setOption('isBlank', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "isNotBlank", {
        get: function () {
            return this._getOption('isNotBlank');
        },
        set: function (value) {
            this._setOption('isNotBlank', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "lessThan", {
        get: function () {
            return this._getOption('lessThan');
        },
        set: function (value) {
            this._setOption('lessThan', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "lessThanOrEqual", {
        get: function () {
            return this._getOption('lessThanOrEqual');
        },
        set: function (value) {
            this._setOption('lessThanOrEqual', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "notContains", {
        get: function () {
            return this._getOption('notContains');
        },
        set: function (value) {
            this._setOption('notContains', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "notEqual", {
        get: function () {
            return this._getOption('notEqual');
        },
        set: function (value) {
            this._setOption('notEqual', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "startsWith", {
        get: function () {
            return this._getOption('startsWith');
        },
        set: function (value) {
            this._setOption('startsWith', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "_optionPath", {
        get: function () {
            return 'filterOperationDescriptions';
        },
        enumerable: true,
        configurable: true
    });
    DxoFilterOperationDescriptionsComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoFilterOperationDescriptionsComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoFilterOperationDescriptionsComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoFilterOperationDescriptionsComponent.prototype, "between", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoFilterOperationDescriptionsComponent.prototype, "contains", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoFilterOperationDescriptionsComponent.prototype, "endsWith", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoFilterOperationDescriptionsComponent.prototype, "equal", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoFilterOperationDescriptionsComponent.prototype, "greaterThan", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoFilterOperationDescriptionsComponent.prototype, "greaterThanOrEqual", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoFilterOperationDescriptionsComponent.prototype, "isBlank", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoFilterOperationDescriptionsComponent.prototype, "isNotBlank", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoFilterOperationDescriptionsComponent.prototype, "lessThan", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoFilterOperationDescriptionsComponent.prototype, "lessThanOrEqual", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoFilterOperationDescriptionsComponent.prototype, "notContains", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoFilterOperationDescriptionsComponent.prototype, "notEqual", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoFilterOperationDescriptionsComponent.prototype, "startsWith", null);
    DxoFilterOperationDescriptionsComponent = __decorate([
        Component({
            selector: 'dxo-filter-operation-descriptions',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoFilterOperationDescriptionsComponent);
    return DxoFilterOperationDescriptionsComponent;
}(NestedOption));
var DxoFilterOperationDescriptionsModule = /** @class */ (function () {
    function DxoFilterOperationDescriptionsModule() {
    }
    DxoFilterOperationDescriptionsModule = __decorate([
        NgModule({
            declarations: [
                DxoFilterOperationDescriptionsComponent
            ],
            exports: [
                DxoFilterOperationDescriptionsComponent
            ],
        })
    ], DxoFilterOperationDescriptionsModule);
    return DxoFilterOperationDescriptionsModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoFilterPanelComponent = /** @class */ (function (_super) {
    __extends(DxoFilterPanelComponent, _super);
    function DxoFilterPanelComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        _this._createEventEmitters([
            { emit: 'filterEnabledChange' }
        ]);
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoFilterPanelComponent.prototype, "customizeText", {
        get: function () {
            return this._getOption('customizeText');
        },
        set: function (value) {
            this._setOption('customizeText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterPanelComponent.prototype, "filterEnabled", {
        get: function () {
            return this._getOption('filterEnabled');
        },
        set: function (value) {
            this._setOption('filterEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterPanelComponent.prototype, "texts", {
        get: function () {
            return this._getOption('texts');
        },
        set: function (value) {
            this._setOption('texts', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterPanelComponent.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterPanelComponent.prototype, "_optionPath", {
        get: function () {
            return 'filterPanel';
        },
        enumerable: true,
        configurable: true
    });
    DxoFilterPanelComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoFilterPanelComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoFilterPanelComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxoFilterPanelComponent.prototype, "customizeText", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoFilterPanelComponent.prototype, "filterEnabled", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoFilterPanelComponent.prototype, "texts", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoFilterPanelComponent.prototype, "visible", null);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxoFilterPanelComponent.prototype, "filterEnabledChange", void 0);
    DxoFilterPanelComponent = __decorate([
        Component({
            selector: 'dxo-filter-panel',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoFilterPanelComponent);
    return DxoFilterPanelComponent;
}(NestedOption));
var DxoFilterPanelModule = /** @class */ (function () {
    function DxoFilterPanelModule() {
    }
    DxoFilterPanelModule = __decorate([
        NgModule({
            declarations: [
                DxoFilterPanelComponent
            ],
            exports: [
                DxoFilterPanelComponent
            ],
        })
    ], DxoFilterPanelModule);
    return DxoFilterPanelModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoFilterRowComponent = /** @class */ (function (_super) {
    __extends(DxoFilterRowComponent, _super);
    function DxoFilterRowComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoFilterRowComponent.prototype, "applyFilter", {
        get: function () {
            return this._getOption('applyFilter');
        },
        set: function (value) {
            this._setOption('applyFilter', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterRowComponent.prototype, "applyFilterText", {
        get: function () {
            return this._getOption('applyFilterText');
        },
        set: function (value) {
            this._setOption('applyFilterText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterRowComponent.prototype, "betweenEndText", {
        get: function () {
            return this._getOption('betweenEndText');
        },
        set: function (value) {
            this._setOption('betweenEndText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterRowComponent.prototype, "betweenStartText", {
        get: function () {
            return this._getOption('betweenStartText');
        },
        set: function (value) {
            this._setOption('betweenStartText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterRowComponent.prototype, "operationDescriptions", {
        get: function () {
            return this._getOption('operationDescriptions');
        },
        set: function (value) {
            this._setOption('operationDescriptions', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterRowComponent.prototype, "resetOperationText", {
        get: function () {
            return this._getOption('resetOperationText');
        },
        set: function (value) {
            this._setOption('resetOperationText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterRowComponent.prototype, "showAllText", {
        get: function () {
            return this._getOption('showAllText');
        },
        set: function (value) {
            this._setOption('showAllText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterRowComponent.prototype, "showOperationChooser", {
        get: function () {
            return this._getOption('showOperationChooser');
        },
        set: function (value) {
            this._setOption('showOperationChooser', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterRowComponent.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFilterRowComponent.prototype, "_optionPath", {
        get: function () {
            return 'filterRow';
        },
        enumerable: true,
        configurable: true
    });
    DxoFilterRowComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoFilterRowComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoFilterRowComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoFilterRowComponent.prototype, "applyFilter", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoFilterRowComponent.prototype, "applyFilterText", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoFilterRowComponent.prototype, "betweenEndText", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoFilterRowComponent.prototype, "betweenStartText", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoFilterRowComponent.prototype, "operationDescriptions", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoFilterRowComponent.prototype, "resetOperationText", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoFilterRowComponent.prototype, "showAllText", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoFilterRowComponent.prototype, "showOperationChooser", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoFilterRowComponent.prototype, "visible", null);
    DxoFilterRowComponent = __decorate([
        Component({
            selector: 'dxo-filter-row',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoFilterRowComponent);
    return DxoFilterRowComponent;
}(NestedOption));
var DxoFilterRowModule = /** @class */ (function () {
    function DxoFilterRowModule() {
    }
    DxoFilterRowModule = __decorate([
        NgModule({
            declarations: [
                DxoFilterRowComponent
            ],
            exports: [
                DxoFilterRowComponent
            ],
        })
    ], DxoFilterRowModule);
    return DxoFilterRowModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoVizFont = /** @class */ (function (_super) {
    __extends(DxoVizFont, _super);
    function DxoVizFont() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DxoVizFont.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoVizFont.prototype, "family", {
        get: function () {
            return this._getOption('family');
        },
        set: function (value) {
            this._setOption('family', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoVizFont.prototype, "opacity", {
        get: function () {
            return this._getOption('opacity');
        },
        set: function (value) {
            this._setOption('opacity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoVizFont.prototype, "size", {
        get: function () {
            return this._getOption('size');
        },
        set: function (value) {
            this._setOption('size', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoVizFont.prototype, "weight", {
        get: function () {
            return this._getOption('weight');
        },
        set: function (value) {
            this._setOption('weight', value);
        },
        enumerable: true,
        configurable: true
    });
    return DxoVizFont;
}(NestedOption));

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoFontComponent = /** @class */ (function (_super) {
    __extends(DxoFontComponent, _super);
    function DxoFontComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoFontComponent.prototype, "_optionPath", {
        get: function () {
            return 'font';
        },
        enumerable: true,
        configurable: true
    });
    DxoFontComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoFontComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoFontComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoFontComponent = __decorate([
        Component({
            selector: 'dxo-font',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'color',
                'family',
                'opacity',
                'size',
                'weight'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoFontComponent);
    return DxoFontComponent;
}(DxoVizFont));
var DxoFontModule = /** @class */ (function () {
    function DxoFontModule() {
    }
    DxoFontModule = __decorate([
        NgModule({
            declarations: [
                DxoFontComponent
            ],
            exports: [
                DxoFontComponent
            ],
        })
    ], DxoFontModule);
    return DxoFontModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoFormSimpleItem = /** @class */ (function (_super) {
    __extends(DxoFormSimpleItem, _super);
    function DxoFormSimpleItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DxoFormSimpleItem.prototype, "colSpan", {
        get: function () {
            return this._getOption('colSpan');
        },
        set: function (value) {
            this._setOption('colSpan', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormSimpleItem.prototype, "cssClass", {
        get: function () {
            return this._getOption('cssClass');
        },
        set: function (value) {
            this._setOption('cssClass', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormSimpleItem.prototype, "dataField", {
        get: function () {
            return this._getOption('dataField');
        },
        set: function (value) {
            this._setOption('dataField', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormSimpleItem.prototype, "editorOptions", {
        get: function () {
            return this._getOption('editorOptions');
        },
        set: function (value) {
            this._setOption('editorOptions', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormSimpleItem.prototype, "editorType", {
        get: function () {
            return this._getOption('editorType');
        },
        set: function (value) {
            this._setOption('editorType', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormSimpleItem.prototype, "helpText", {
        get: function () {
            return this._getOption('helpText');
        },
        set: function (value) {
            this._setOption('helpText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormSimpleItem.prototype, "isRequired", {
        get: function () {
            return this._getOption('isRequired');
        },
        set: function (value) {
            this._setOption('isRequired', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormSimpleItem.prototype, "itemType", {
        get: function () {
            return this._getOption('itemType');
        },
        set: function (value) {
            this._setOption('itemType', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormSimpleItem.prototype, "label", {
        get: function () {
            return this._getOption('label');
        },
        set: function (value) {
            this._setOption('label', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormSimpleItem.prototype, "name", {
        get: function () {
            return this._getOption('name');
        },
        set: function (value) {
            this._setOption('name', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormSimpleItem.prototype, "template", {
        get: function () {
            return this._getOption('template');
        },
        set: function (value) {
            this._setOption('template', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormSimpleItem.prototype, "validationRules", {
        get: function () {
            return this._getOption('validationRules');
        },
        set: function (value) {
            this._setOption('validationRules', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormSimpleItem.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormSimpleItem.prototype, "visibleIndex", {
        get: function () {
            return this._getOption('visibleIndex');
        },
        set: function (value) {
            this._setOption('visibleIndex', value);
        },
        enumerable: true,
        configurable: true
    });
    return DxoFormSimpleItem;
}(NestedOption));

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoFormItemComponent = /** @class */ (function (_super) {
    __extends(DxoFormItemComponent, _super);
    function DxoFormItemComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoFormItemComponent.prototype, "_optionPath", {
        get: function () {
            return 'formItem';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormItemComponent.prototype, "validationRulesChildren", {
        get: function () {
            return this._getOption('validationRules');
        },
        set: function (value) {
            this.setChildren('validationRules', value);
        },
        enumerable: true,
        configurable: true
    });
    DxoFormItemComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoFormItemComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoFormItemComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        ContentChildren(forwardRef(function () { return DxiValidationRuleComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxoFormItemComponent.prototype, "validationRulesChildren", null);
    DxoFormItemComponent = __decorate([
        Component({
            selector: 'dxo-form-item',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'colSpan',
                'cssClass',
                'dataField',
                'editorOptions',
                'editorType',
                'helpText',
                'isRequired',
                'itemType',
                'label',
                'name',
                'template',
                'validationRules',
                'visible',
                'visibleIndex'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoFormItemComponent);
    return DxoFormItemComponent;
}(DxoFormSimpleItem));
var DxoFormItemModule = /** @class */ (function () {
    function DxoFormItemModule() {
    }
    DxoFormItemModule = __decorate([
        NgModule({
            declarations: [
                DxoFormItemComponent
            ],
            exports: [
                DxoFormItemComponent
            ],
        })
    ], DxoFormItemModule);
    return DxoFormItemModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoFormOptions = /** @class */ (function (_super) {
    __extends(DxoFormOptions, _super);
    function DxoFormOptions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DxoFormOptions.prototype, "accessKey", {
        get: function () {
            return this._getOption('accessKey');
        },
        set: function (value) {
            this._setOption('accessKey', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormOptions.prototype, "activeStateEnabled", {
        get: function () {
            return this._getOption('activeStateEnabled');
        },
        set: function (value) {
            this._setOption('activeStateEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormOptions.prototype, "alignItemLabels", {
        get: function () {
            return this._getOption('alignItemLabels');
        },
        set: function (value) {
            this._setOption('alignItemLabels', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormOptions.prototype, "alignItemLabelsInAllGroups", {
        get: function () {
            return this._getOption('alignItemLabelsInAllGroups');
        },
        set: function (value) {
            this._setOption('alignItemLabelsInAllGroups', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormOptions.prototype, "colCount", {
        get: function () {
            return this._getOption('colCount');
        },
        set: function (value) {
            this._setOption('colCount', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormOptions.prototype, "colCountByScreen", {
        get: function () {
            return this._getOption('colCountByScreen');
        },
        set: function (value) {
            this._setOption('colCountByScreen', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormOptions.prototype, "customizeItem", {
        get: function () {
            return this._getOption('customizeItem');
        },
        set: function (value) {
            this._setOption('customizeItem', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormOptions.prototype, "disabled", {
        get: function () {
            return this._getOption('disabled');
        },
        set: function (value) {
            this._setOption('disabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormOptions.prototype, "elementAttr", {
        get: function () {
            return this._getOption('elementAttr');
        },
        set: function (value) {
            this._setOption('elementAttr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormOptions.prototype, "focusStateEnabled", {
        get: function () {
            return this._getOption('focusStateEnabled');
        },
        set: function (value) {
            this._setOption('focusStateEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormOptions.prototype, "formData", {
        get: function () {
            return this._getOption('formData');
        },
        set: function (value) {
            this._setOption('formData', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormOptions.prototype, "height", {
        get: function () {
            return this._getOption('height');
        },
        set: function (value) {
            this._setOption('height', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormOptions.prototype, "hint", {
        get: function () {
            return this._getOption('hint');
        },
        set: function (value) {
            this._setOption('hint', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormOptions.prototype, "hoverStateEnabled", {
        get: function () {
            return this._getOption('hoverStateEnabled');
        },
        set: function (value) {
            this._setOption('hoverStateEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormOptions.prototype, "items", {
        get: function () {
            return this._getOption('items');
        },
        set: function (value) {
            this._setOption('items', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormOptions.prototype, "labelLocation", {
        get: function () {
            return this._getOption('labelLocation');
        },
        set: function (value) {
            this._setOption('labelLocation', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormOptions.prototype, "minColWidth", {
        get: function () {
            return this._getOption('minColWidth');
        },
        set: function (value) {
            this._setOption('minColWidth', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormOptions.prototype, "onContentReady", {
        get: function () {
            return this._getOption('onContentReady');
        },
        set: function (value) {
            this._setOption('onContentReady', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormOptions.prototype, "onDisposing", {
        get: function () {
            return this._getOption('onDisposing');
        },
        set: function (value) {
            this._setOption('onDisposing', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormOptions.prototype, "onEditorEnterKey", {
        get: function () {
            return this._getOption('onEditorEnterKey');
        },
        set: function (value) {
            this._setOption('onEditorEnterKey', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormOptions.prototype, "onFieldDataChanged", {
        get: function () {
            return this._getOption('onFieldDataChanged');
        },
        set: function (value) {
            this._setOption('onFieldDataChanged', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormOptions.prototype, "onInitialized", {
        get: function () {
            return this._getOption('onInitialized');
        },
        set: function (value) {
            this._setOption('onInitialized', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormOptions.prototype, "onOptionChanged", {
        get: function () {
            return this._getOption('onOptionChanged');
        },
        set: function (value) {
            this._setOption('onOptionChanged', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormOptions.prototype, "optionalMark", {
        get: function () {
            return this._getOption('optionalMark');
        },
        set: function (value) {
            this._setOption('optionalMark', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormOptions.prototype, "readOnly", {
        get: function () {
            return this._getOption('readOnly');
        },
        set: function (value) {
            this._setOption('readOnly', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormOptions.prototype, "requiredMark", {
        get: function () {
            return this._getOption('requiredMark');
        },
        set: function (value) {
            this._setOption('requiredMark', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormOptions.prototype, "requiredMessage", {
        get: function () {
            return this._getOption('requiredMessage');
        },
        set: function (value) {
            this._setOption('requiredMessage', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormOptions.prototype, "rtlEnabled", {
        get: function () {
            return this._getOption('rtlEnabled');
        },
        set: function (value) {
            this._setOption('rtlEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormOptions.prototype, "screenByWidth", {
        get: function () {
            return this._getOption('screenByWidth');
        },
        set: function (value) {
            this._setOption('screenByWidth', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormOptions.prototype, "scrollingEnabled", {
        get: function () {
            return this._getOption('scrollingEnabled');
        },
        set: function (value) {
            this._setOption('scrollingEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormOptions.prototype, "showColonAfterLabel", {
        get: function () {
            return this._getOption('showColonAfterLabel');
        },
        set: function (value) {
            this._setOption('showColonAfterLabel', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormOptions.prototype, "showOptionalMark", {
        get: function () {
            return this._getOption('showOptionalMark');
        },
        set: function (value) {
            this._setOption('showOptionalMark', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormOptions.prototype, "showRequiredMark", {
        get: function () {
            return this._getOption('showRequiredMark');
        },
        set: function (value) {
            this._setOption('showRequiredMark', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormOptions.prototype, "showValidationSummary", {
        get: function () {
            return this._getOption('showValidationSummary');
        },
        set: function (value) {
            this._setOption('showValidationSummary', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormOptions.prototype, "tabIndex", {
        get: function () {
            return this._getOption('tabIndex');
        },
        set: function (value) {
            this._setOption('tabIndex', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormOptions.prototype, "validationGroup", {
        get: function () {
            return this._getOption('validationGroup');
        },
        set: function (value) {
            this._setOption('validationGroup', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormOptions.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormOptions.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    return DxoFormOptions;
}(NestedOption));

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoFormComponent = /** @class */ (function (_super) {
    __extends(DxoFormComponent, _super);
    function DxoFormComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        _this._createEventEmitters([
            { emit: 'formDataChange' }
        ]);
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoFormComponent.prototype, "_optionPath", {
        get: function () {
            return 'form';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFormComponent.prototype, "itemsChildren", {
        get: function () {
            return this._getOption('items');
        },
        set: function (value) {
            this.setChildren('items', value);
        },
        enumerable: true,
        configurable: true
    });
    DxoFormComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoFormComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoFormComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxoFormComponent.prototype, "formDataChange", void 0);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiItemComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxoFormComponent.prototype, "itemsChildren", null);
    DxoFormComponent = __decorate([
        Component({
            selector: 'dxo-form',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'accessKey',
                'activeStateEnabled',
                'alignItemLabels',
                'alignItemLabelsInAllGroups',
                'colCount',
                'colCountByScreen',
                'customizeItem',
                'disabled',
                'elementAttr',
                'focusStateEnabled',
                'formData',
                'height',
                'hint',
                'hoverStateEnabled',
                'items',
                'labelLocation',
                'minColWidth',
                'onContentReady',
                'onDisposing',
                'onEditorEnterKey',
                'onFieldDataChanged',
                'onInitialized',
                'onOptionChanged',
                'optionalMark',
                'readOnly',
                'requiredMark',
                'requiredMessage',
                'rtlEnabled',
                'screenByWidth',
                'scrollingEnabled',
                'showColonAfterLabel',
                'showOptionalMark',
                'showRequiredMark',
                'showValidationSummary',
                'tabIndex',
                'validationGroup',
                'visible',
                'width'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoFormComponent);
    return DxoFormComponent;
}(DxoFormOptions));
var DxoFormModule = /** @class */ (function () {
    function DxoFormModule() {
    }
    DxoFormModule = __decorate([
        NgModule({
            declarations: [
                DxoFormComponent
            ],
            exports: [
                DxoFormComponent
            ],
        })
    ], DxoFormModule);
    return DxoFormModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoFormatComponent = /** @class */ (function (_super) {
    __extends(DxoFormatComponent, _super);
    function DxoFormatComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoFormatComponent.prototype, "_optionPath", {
        get: function () {
            return 'format';
        },
        enumerable: true,
        configurable: true
    });
    DxoFormatComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoFormatComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoFormatComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoFormatComponent = __decorate([
        Component({
            selector: 'dxo-format',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'currency',
                'formatter',
                'parser',
                'precision',
                'type'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoFormatComponent);
    return DxoFormatComponent;
}(DxoFormat));
var DxoFormatModule = /** @class */ (function () {
    function DxoFormatModule() {
    }
    DxoFormatModule = __decorate([
        NgModule({
            declarations: [
                DxoFormatComponent
            ],
            exports: [
                DxoFormatComponent
            ],
        })
    ], DxoFormatModule);
    return DxoFormatModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoFullstackedareaComponent = /** @class */ (function (_super) {
    __extends(DxoFullstackedareaComponent, _super);
    function DxoFullstackedareaComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoFullstackedareaComponent.prototype, "_optionPath", {
        get: function () {
            return 'fullstackedarea';
        },
        enumerable: true,
        configurable: true
    });
    DxoFullstackedareaComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoFullstackedareaComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoFullstackedareaComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoFullstackedareaComponent = __decorate([
        Component({
            selector: 'dxo-fullstackedarea',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'aggregation',
                'area',
                'argumentField',
                'axis',
                'bar',
                'barOverlapGroup',
                'barPadding',
                'barWidth',
                'border',
                'bubble',
                'candlestick',
                'closeValueField',
                'color',
                'cornerRadius',
                'dashStyle',
                'fullstackedarea',
                'fullstackedbar',
                'fullstackedline',
                'fullstackedspline',
                'fullstackedsplinearea',
                'highValueField',
                'hoverMode',
                'hoverStyle',
                'ignoreEmptyPoints',
                'innerColor',
                'label',
                'line',
                'lowValueField',
                'maxLabelCount',
                'minBarSize',
                'opacity',
                'openValueField',
                'pane',
                'point',
                'rangearea',
                'rangebar',
                'rangeValue1Field',
                'rangeValue2Field',
                'reduction',
                'scatter',
                'selectionMode',
                'selectionStyle',
                'showInLegend',
                'sizeField',
                'spline',
                'splinearea',
                'stack',
                'stackedarea',
                'stackedbar',
                'stackedline',
                'stackedspline',
                'stackedsplinearea',
                'steparea',
                'stepline',
                'stock',
                'tagField',
                'type',
                'valueErrorBar',
                'valueField',
                'visible',
                'width'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoFullstackedareaComponent);
    return DxoFullstackedareaComponent;
}(DxoChartCommonSeriesSettings));
var DxoFullstackedareaModule = /** @class */ (function () {
    function DxoFullstackedareaModule() {
    }
    DxoFullstackedareaModule = __decorate([
        NgModule({
            declarations: [
                DxoFullstackedareaComponent
            ],
            exports: [
                DxoFullstackedareaComponent
            ],
        })
    ], DxoFullstackedareaModule);
    return DxoFullstackedareaModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoFullstackedbarComponent = /** @class */ (function (_super) {
    __extends(DxoFullstackedbarComponent, _super);
    function DxoFullstackedbarComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoFullstackedbarComponent.prototype, "_optionPath", {
        get: function () {
            return 'fullstackedbar';
        },
        enumerable: true,
        configurable: true
    });
    DxoFullstackedbarComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoFullstackedbarComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoFullstackedbarComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoFullstackedbarComponent = __decorate([
        Component({
            selector: 'dxo-fullstackedbar',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'aggregation',
                'area',
                'argumentField',
                'axis',
                'bar',
                'barOverlapGroup',
                'barPadding',
                'barWidth',
                'border',
                'bubble',
                'candlestick',
                'closeValueField',
                'color',
                'cornerRadius',
                'dashStyle',
                'fullstackedarea',
                'fullstackedbar',
                'fullstackedline',
                'fullstackedspline',
                'fullstackedsplinearea',
                'highValueField',
                'hoverMode',
                'hoverStyle',
                'ignoreEmptyPoints',
                'innerColor',
                'label',
                'line',
                'lowValueField',
                'maxLabelCount',
                'minBarSize',
                'opacity',
                'openValueField',
                'pane',
                'point',
                'rangearea',
                'rangebar',
                'rangeValue1Field',
                'rangeValue2Field',
                'reduction',
                'scatter',
                'selectionMode',
                'selectionStyle',
                'showInLegend',
                'sizeField',
                'spline',
                'splinearea',
                'stack',
                'stackedarea',
                'stackedbar',
                'stackedline',
                'stackedspline',
                'stackedsplinearea',
                'steparea',
                'stepline',
                'stock',
                'tagField',
                'type',
                'valueErrorBar',
                'valueField',
                'visible',
                'width'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoFullstackedbarComponent);
    return DxoFullstackedbarComponent;
}(DxoChartCommonSeriesSettings));
var DxoFullstackedbarModule = /** @class */ (function () {
    function DxoFullstackedbarModule() {
    }
    DxoFullstackedbarModule = __decorate([
        NgModule({
            declarations: [
                DxoFullstackedbarComponent
            ],
            exports: [
                DxoFullstackedbarComponent
            ],
        })
    ], DxoFullstackedbarModule);
    return DxoFullstackedbarModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoFullstackedlineComponent = /** @class */ (function (_super) {
    __extends(DxoFullstackedlineComponent, _super);
    function DxoFullstackedlineComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoFullstackedlineComponent.prototype, "_optionPath", {
        get: function () {
            return 'fullstackedline';
        },
        enumerable: true,
        configurable: true
    });
    DxoFullstackedlineComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoFullstackedlineComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoFullstackedlineComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoFullstackedlineComponent = __decorate([
        Component({
            selector: 'dxo-fullstackedline',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'aggregation',
                'area',
                'argumentField',
                'axis',
                'bar',
                'barOverlapGroup',
                'barPadding',
                'barWidth',
                'border',
                'bubble',
                'candlestick',
                'closeValueField',
                'color',
                'cornerRadius',
                'dashStyle',
                'fullstackedarea',
                'fullstackedbar',
                'fullstackedline',
                'fullstackedspline',
                'fullstackedsplinearea',
                'highValueField',
                'hoverMode',
                'hoverStyle',
                'ignoreEmptyPoints',
                'innerColor',
                'label',
                'line',
                'lowValueField',
                'maxLabelCount',
                'minBarSize',
                'opacity',
                'openValueField',
                'pane',
                'point',
                'rangearea',
                'rangebar',
                'rangeValue1Field',
                'rangeValue2Field',
                'reduction',
                'scatter',
                'selectionMode',
                'selectionStyle',
                'showInLegend',
                'sizeField',
                'spline',
                'splinearea',
                'stack',
                'stackedarea',
                'stackedbar',
                'stackedline',
                'stackedspline',
                'stackedsplinearea',
                'steparea',
                'stepline',
                'stock',
                'tagField',
                'type',
                'valueErrorBar',
                'valueField',
                'visible',
                'width'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoFullstackedlineComponent);
    return DxoFullstackedlineComponent;
}(DxoChartCommonSeriesSettings));
var DxoFullstackedlineModule = /** @class */ (function () {
    function DxoFullstackedlineModule() {
    }
    DxoFullstackedlineModule = __decorate([
        NgModule({
            declarations: [
                DxoFullstackedlineComponent
            ],
            exports: [
                DxoFullstackedlineComponent
            ],
        })
    ], DxoFullstackedlineModule);
    return DxoFullstackedlineModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoFullstackedsplineComponent = /** @class */ (function (_super) {
    __extends(DxoFullstackedsplineComponent, _super);
    function DxoFullstackedsplineComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoFullstackedsplineComponent.prototype, "_optionPath", {
        get: function () {
            return 'fullstackedspline';
        },
        enumerable: true,
        configurable: true
    });
    DxoFullstackedsplineComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoFullstackedsplineComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoFullstackedsplineComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoFullstackedsplineComponent = __decorate([
        Component({
            selector: 'dxo-fullstackedspline',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'aggregation',
                'area',
                'argumentField',
                'axis',
                'bar',
                'barOverlapGroup',
                'barPadding',
                'barWidth',
                'border',
                'bubble',
                'candlestick',
                'closeValueField',
                'color',
                'cornerRadius',
                'dashStyle',
                'fullstackedarea',
                'fullstackedbar',
                'fullstackedline',
                'fullstackedspline',
                'fullstackedsplinearea',
                'highValueField',
                'hoverMode',
                'hoverStyle',
                'ignoreEmptyPoints',
                'innerColor',
                'label',
                'line',
                'lowValueField',
                'maxLabelCount',
                'minBarSize',
                'opacity',
                'openValueField',
                'pane',
                'point',
                'rangearea',
                'rangebar',
                'rangeValue1Field',
                'rangeValue2Field',
                'reduction',
                'scatter',
                'selectionMode',
                'selectionStyle',
                'showInLegend',
                'sizeField',
                'spline',
                'splinearea',
                'stack',
                'stackedarea',
                'stackedbar',
                'stackedline',
                'stackedspline',
                'stackedsplinearea',
                'steparea',
                'stepline',
                'stock',
                'tagField',
                'type',
                'valueErrorBar',
                'valueField',
                'visible',
                'width'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoFullstackedsplineComponent);
    return DxoFullstackedsplineComponent;
}(DxoChartCommonSeriesSettings));
var DxoFullstackedsplineModule = /** @class */ (function () {
    function DxoFullstackedsplineModule() {
    }
    DxoFullstackedsplineModule = __decorate([
        NgModule({
            declarations: [
                DxoFullstackedsplineComponent
            ],
            exports: [
                DxoFullstackedsplineComponent
            ],
        })
    ], DxoFullstackedsplineModule);
    return DxoFullstackedsplineModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoFullstackedsplineareaComponent = /** @class */ (function (_super) {
    __extends(DxoFullstackedsplineareaComponent, _super);
    function DxoFullstackedsplineareaComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoFullstackedsplineareaComponent.prototype, "_optionPath", {
        get: function () {
            return 'fullstackedsplinearea';
        },
        enumerable: true,
        configurable: true
    });
    DxoFullstackedsplineareaComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoFullstackedsplineareaComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoFullstackedsplineareaComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoFullstackedsplineareaComponent = __decorate([
        Component({
            selector: 'dxo-fullstackedsplinearea',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'aggregation',
                'area',
                'argumentField',
                'axis',
                'bar',
                'barOverlapGroup',
                'barPadding',
                'barWidth',
                'border',
                'bubble',
                'candlestick',
                'closeValueField',
                'color',
                'cornerRadius',
                'dashStyle',
                'fullstackedarea',
                'fullstackedbar',
                'fullstackedline',
                'fullstackedspline',
                'fullstackedsplinearea',
                'highValueField',
                'hoverMode',
                'hoverStyle',
                'ignoreEmptyPoints',
                'innerColor',
                'label',
                'line',
                'lowValueField',
                'maxLabelCount',
                'minBarSize',
                'opacity',
                'openValueField',
                'pane',
                'point',
                'rangearea',
                'rangebar',
                'rangeValue1Field',
                'rangeValue2Field',
                'reduction',
                'scatter',
                'selectionMode',
                'selectionStyle',
                'showInLegend',
                'sizeField',
                'spline',
                'splinearea',
                'stack',
                'stackedarea',
                'stackedbar',
                'stackedline',
                'stackedspline',
                'stackedsplinearea',
                'steparea',
                'stepline',
                'stock',
                'tagField',
                'type',
                'valueErrorBar',
                'valueField',
                'visible',
                'width'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoFullstackedsplineareaComponent);
    return DxoFullstackedsplineareaComponent;
}(DxoChartCommonSeriesSettings));
var DxoFullstackedsplineareaModule = /** @class */ (function () {
    function DxoFullstackedsplineareaModule() {
    }
    DxoFullstackedsplineareaModule = __decorate([
        NgModule({
            declarations: [
                DxoFullstackedsplineareaComponent
            ],
            exports: [
                DxoFullstackedsplineareaComponent
            ],
        })
    ], DxoFullstackedsplineareaModule);
    return DxoFullstackedsplineareaModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoGeometryComponent = /** @class */ (function (_super) {
    __extends(DxoGeometryComponent, _super);
    function DxoGeometryComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoGeometryComponent.prototype, "endAngle", {
        get: function () {
            return this._getOption('endAngle');
        },
        set: function (value) {
            this._setOption('endAngle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGeometryComponent.prototype, "startAngle", {
        get: function () {
            return this._getOption('startAngle');
        },
        set: function (value) {
            this._setOption('startAngle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGeometryComponent.prototype, "orientation", {
        get: function () {
            return this._getOption('orientation');
        },
        set: function (value) {
            this._setOption('orientation', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGeometryComponent.prototype, "_optionPath", {
        get: function () {
            return 'geometry';
        },
        enumerable: true,
        configurable: true
    });
    DxoGeometryComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoGeometryComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoGeometryComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoGeometryComponent.prototype, "endAngle", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoGeometryComponent.prototype, "startAngle", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoGeometryComponent.prototype, "orientation", null);
    DxoGeometryComponent = __decorate([
        Component({
            selector: 'dxo-geometry',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoGeometryComponent);
    return DxoGeometryComponent;
}(NestedOption));
var DxoGeometryModule = /** @class */ (function () {
    function DxoGeometryModule() {
    }
    DxoGeometryModule = __decorate([
        NgModule({
            declarations: [
                DxoGeometryComponent
            ],
            exports: [
                DxoGeometryComponent
            ],
        })
    ], DxoGeometryModule);
    return DxoGeometryModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoGridSizeComponent = /** @class */ (function (_super) {
    __extends(DxoGridSizeComponent, _super);
    function DxoGridSizeComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoGridSizeComponent.prototype, "items", {
        get: function () {
            return this._getOption('items');
        },
        set: function (value) {
            this._setOption('items', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGridSizeComponent.prototype, "value", {
        get: function () {
            return this._getOption('value');
        },
        set: function (value) {
            this._setOption('value', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGridSizeComponent.prototype, "_optionPath", {
        get: function () {
            return 'gridSize';
        },
        enumerable: true,
        configurable: true
    });
    DxoGridSizeComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoGridSizeComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoGridSizeComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxoGridSizeComponent.prototype, "items", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoGridSizeComponent.prototype, "value", null);
    DxoGridSizeComponent = __decorate([
        Component({
            selector: 'dxo-grid-size',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoGridSizeComponent);
    return DxoGridSizeComponent;
}(NestedOption));
var DxoGridSizeModule = /** @class */ (function () {
    function DxoGridSizeModule() {
    }
    DxoGridSizeModule = __decorate([
        NgModule({
            declarations: [
                DxoGridSizeComponent
            ],
            exports: [
                DxoGridSizeComponent
            ],
        })
    ], DxoGridSizeModule);
    return DxoGridSizeModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoGridComponent = /** @class */ (function (_super) {
    __extends(DxoGridComponent, _super);
    function DxoGridComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoGridComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGridComponent.prototype, "opacity", {
        get: function () {
            return this._getOption('opacity');
        },
        set: function (value) {
            this._setOption('opacity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGridComponent.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGridComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGridComponent.prototype, "_optionPath", {
        get: function () {
            return 'grid';
        },
        enumerable: true,
        configurable: true
    });
    DxoGridComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoGridComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoGridComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoGridComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoGridComponent.prototype, "opacity", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoGridComponent.prototype, "visible", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoGridComponent.prototype, "width", null);
    DxoGridComponent = __decorate([
        Component({
            selector: 'dxo-grid',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoGridComponent);
    return DxoGridComponent;
}(NestedOption));
var DxoGridModule = /** @class */ (function () {
    function DxoGridModule() {
    }
    DxoGridModule = __decorate([
        NgModule({
            declarations: [
                DxoGridComponent
            ],
            exports: [
                DxoGridComponent
            ],
        })
    ], DxoGridModule);
    return DxoGridModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiGroupItemComponent = /** @class */ (function (_super) {
    __extends(DxiGroupItemComponent, _super);
    function DxiGroupItemComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiGroupItemComponent.prototype, "alignByColumn", {
        get: function () {
            return this._getOption('alignByColumn');
        },
        set: function (value) {
            this._setOption('alignByColumn', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiGroupItemComponent.prototype, "column", {
        get: function () {
            return this._getOption('column');
        },
        set: function (value) {
            this._setOption('column', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiGroupItemComponent.prototype, "customizeText", {
        get: function () {
            return this._getOption('customizeText');
        },
        set: function (value) {
            this._setOption('customizeText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiGroupItemComponent.prototype, "displayFormat", {
        get: function () {
            return this._getOption('displayFormat');
        },
        set: function (value) {
            this._setOption('displayFormat', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiGroupItemComponent.prototype, "name", {
        get: function () {
            return this._getOption('name');
        },
        set: function (value) {
            this._setOption('name', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiGroupItemComponent.prototype, "showInColumn", {
        get: function () {
            return this._getOption('showInColumn');
        },
        set: function (value) {
            this._setOption('showInColumn', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiGroupItemComponent.prototype, "showInGroupFooter", {
        get: function () {
            return this._getOption('showInGroupFooter');
        },
        set: function (value) {
            this._setOption('showInGroupFooter', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiGroupItemComponent.prototype, "skipEmptyValues", {
        get: function () {
            return this._getOption('skipEmptyValues');
        },
        set: function (value) {
            this._setOption('skipEmptyValues', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiGroupItemComponent.prototype, "summaryType", {
        get: function () {
            return this._getOption('summaryType');
        },
        set: function (value) {
            this._setOption('summaryType', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiGroupItemComponent.prototype, "valueFormat", {
        get: function () {
            return this._getOption('valueFormat');
        },
        set: function (value) {
            this._setOption('valueFormat', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiGroupItemComponent.prototype, "_optionPath", {
        get: function () {
            return 'groupItems';
        },
        enumerable: true,
        configurable: true
    });
    DxiGroupItemComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxiGroupItemComponent.prototype, "alignByColumn", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiGroupItemComponent.prototype, "column", null);
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxiGroupItemComponent.prototype, "customizeText", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiGroupItemComponent.prototype, "displayFormat", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiGroupItemComponent.prototype, "name", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiGroupItemComponent.prototype, "showInColumn", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxiGroupItemComponent.prototype, "showInGroupFooter", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxiGroupItemComponent.prototype, "skipEmptyValues", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiGroupItemComponent.prototype, "summaryType", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiGroupItemComponent.prototype, "valueFormat", null);
    DxiGroupItemComponent = __decorate([
        Component({
            selector: 'dxi-group-item',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiGroupItemComponent);
    return DxiGroupItemComponent;
}(CollectionNestedOption));
var DxiGroupItemModule = /** @class */ (function () {
    function DxiGroupItemModule() {
    }
    DxiGroupItemModule = __decorate([
        NgModule({
            declarations: [
                DxiGroupItemComponent
            ],
            exports: [
                DxiGroupItemComponent
            ],
        })
    ], DxiGroupItemModule);
    return DxiGroupItemModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoGroupOperationDescriptionsComponent = /** @class */ (function (_super) {
    __extends(DxoGroupOperationDescriptionsComponent, _super);
    function DxoGroupOperationDescriptionsComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoGroupOperationDescriptionsComponent.prototype, "and", {
        get: function () {
            return this._getOption('and');
        },
        set: function (value) {
            this._setOption('and', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGroupOperationDescriptionsComponent.prototype, "notAnd", {
        get: function () {
            return this._getOption('notAnd');
        },
        set: function (value) {
            this._setOption('notAnd', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGroupOperationDescriptionsComponent.prototype, "notOr", {
        get: function () {
            return this._getOption('notOr');
        },
        set: function (value) {
            this._setOption('notOr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGroupOperationDescriptionsComponent.prototype, "or", {
        get: function () {
            return this._getOption('or');
        },
        set: function (value) {
            this._setOption('or', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGroupOperationDescriptionsComponent.prototype, "_optionPath", {
        get: function () {
            return 'groupOperationDescriptions';
        },
        enumerable: true,
        configurable: true
    });
    DxoGroupOperationDescriptionsComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoGroupOperationDescriptionsComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoGroupOperationDescriptionsComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoGroupOperationDescriptionsComponent.prototype, "and", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoGroupOperationDescriptionsComponent.prototype, "notAnd", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoGroupOperationDescriptionsComponent.prototype, "notOr", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoGroupOperationDescriptionsComponent.prototype, "or", null);
    DxoGroupOperationDescriptionsComponent = __decorate([
        Component({
            selector: 'dxo-group-operation-descriptions',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoGroupOperationDescriptionsComponent);
    return DxoGroupOperationDescriptionsComponent;
}(NestedOption));
var DxoGroupOperationDescriptionsModule = /** @class */ (function () {
    function DxoGroupOperationDescriptionsModule() {
    }
    DxoGroupOperationDescriptionsModule = __decorate([
        NgModule({
            declarations: [
                DxoGroupOperationDescriptionsComponent
            ],
            exports: [
                DxoGroupOperationDescriptionsComponent
            ],
        })
    ], DxoGroupOperationDescriptionsModule);
    return DxoGroupOperationDescriptionsModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoGroupPanelComponent = /** @class */ (function (_super) {
    __extends(DxoGroupPanelComponent, _super);
    function DxoGroupPanelComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoGroupPanelComponent.prototype, "allowColumnDragging", {
        get: function () {
            return this._getOption('allowColumnDragging');
        },
        set: function (value) {
            this._setOption('allowColumnDragging', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGroupPanelComponent.prototype, "emptyPanelText", {
        get: function () {
            return this._getOption('emptyPanelText');
        },
        set: function (value) {
            this._setOption('emptyPanelText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGroupPanelComponent.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGroupPanelComponent.prototype, "_optionPath", {
        get: function () {
            return 'groupPanel';
        },
        enumerable: true,
        configurable: true
    });
    DxoGroupPanelComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoGroupPanelComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoGroupPanelComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoGroupPanelComponent.prototype, "allowColumnDragging", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoGroupPanelComponent.prototype, "emptyPanelText", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoGroupPanelComponent.prototype, "visible", null);
    DxoGroupPanelComponent = __decorate([
        Component({
            selector: 'dxo-group-panel',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoGroupPanelComponent);
    return DxoGroupPanelComponent;
}(NestedOption));
var DxoGroupPanelModule = /** @class */ (function () {
    function DxoGroupPanelModule() {
    }
    DxoGroupPanelModule = __decorate([
        NgModule({
            declarations: [
                DxoGroupPanelComponent
            ],
            exports: [
                DxoGroupPanelComponent
            ],
        })
    ], DxoGroupPanelModule);
    return DxoGroupPanelModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoGroupComponent = /** @class */ (function (_super) {
    __extends(DxoGroupComponent, _super);
    function DxoGroupComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoGroupComponent.prototype, "border", {
        get: function () {
            return this._getOption('border');
        },
        set: function (value) {
            this._setOption('border', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGroupComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGroupComponent.prototype, "headerHeight", {
        get: function () {
            return this._getOption('headerHeight');
        },
        set: function (value) {
            this._setOption('headerHeight', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGroupComponent.prototype, "hoverEnabled", {
        get: function () {
            return this._getOption('hoverEnabled');
        },
        set: function (value) {
            this._setOption('hoverEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGroupComponent.prototype, "hoverStyle", {
        get: function () {
            return this._getOption('hoverStyle');
        },
        set: function (value) {
            this._setOption('hoverStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGroupComponent.prototype, "label", {
        get: function () {
            return this._getOption('label');
        },
        set: function (value) {
            this._setOption('label', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGroupComponent.prototype, "selectionStyle", {
        get: function () {
            return this._getOption('selectionStyle');
        },
        set: function (value) {
            this._setOption('selectionStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGroupComponent.prototype, "_optionPath", {
        get: function () {
            return 'group';
        },
        enumerable: true,
        configurable: true
    });
    DxoGroupComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoGroupComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoGroupComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoGroupComponent.prototype, "border", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoGroupComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoGroupComponent.prototype, "headerHeight", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoGroupComponent.prototype, "hoverEnabled", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoGroupComponent.prototype, "hoverStyle", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoGroupComponent.prototype, "label", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoGroupComponent.prototype, "selectionStyle", null);
    DxoGroupComponent = __decorate([
        Component({
            selector: 'dxo-group',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoGroupComponent);
    return DxoGroupComponent;
}(NestedOption));
var DxoGroupModule = /** @class */ (function () {
    function DxoGroupModule() {
    }
    DxoGroupModule = __decorate([
        NgModule({
            declarations: [
                DxoGroupComponent
            ],
            exports: [
                DxoGroupComponent
            ],
        })
    ], DxoGroupModule);
    return DxoGroupModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoGroupingComponent = /** @class */ (function (_super) {
    __extends(DxoGroupingComponent, _super);
    function DxoGroupingComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoGroupingComponent.prototype, "allowCollapsing", {
        get: function () {
            return this._getOption('allowCollapsing');
        },
        set: function (value) {
            this._setOption('allowCollapsing', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGroupingComponent.prototype, "autoExpandAll", {
        get: function () {
            return this._getOption('autoExpandAll');
        },
        set: function (value) {
            this._setOption('autoExpandAll', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGroupingComponent.prototype, "contextMenuEnabled", {
        get: function () {
            return this._getOption('contextMenuEnabled');
        },
        set: function (value) {
            this._setOption('contextMenuEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGroupingComponent.prototype, "expandMode", {
        get: function () {
            return this._getOption('expandMode');
        },
        set: function (value) {
            this._setOption('expandMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGroupingComponent.prototype, "texts", {
        get: function () {
            return this._getOption('texts');
        },
        set: function (value) {
            this._setOption('texts', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGroupingComponent.prototype, "_optionPath", {
        get: function () {
            return 'grouping';
        },
        enumerable: true,
        configurable: true
    });
    DxoGroupingComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoGroupingComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoGroupingComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoGroupingComponent.prototype, "allowCollapsing", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoGroupingComponent.prototype, "autoExpandAll", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoGroupingComponent.prototype, "contextMenuEnabled", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoGroupingComponent.prototype, "expandMode", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoGroupingComponent.prototype, "texts", null);
    DxoGroupingComponent = __decorate([
        Component({
            selector: 'dxo-grouping',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoGroupingComponent);
    return DxoGroupingComponent;
}(NestedOption));
var DxoGroupingModule = /** @class */ (function () {
    function DxoGroupingModule() {
    }
    DxoGroupingModule = __decorate([
        NgModule({
            declarations: [
                DxoGroupingComponent
            ],
            exports: [
                DxoGroupingComponent
            ],
        })
    ], DxoGroupingModule);
    return DxoGroupingModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoHatchingComponent = /** @class */ (function (_super) {
    __extends(DxoHatchingComponent, _super);
    function DxoHatchingComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoHatchingComponent.prototype, "direction", {
        get: function () {
            return this._getOption('direction');
        },
        set: function (value) {
            this._setOption('direction', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHatchingComponent.prototype, "opacity", {
        get: function () {
            return this._getOption('opacity');
        },
        set: function (value) {
            this._setOption('opacity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHatchingComponent.prototype, "step", {
        get: function () {
            return this._getOption('step');
        },
        set: function (value) {
            this._setOption('step', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHatchingComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHatchingComponent.prototype, "_optionPath", {
        get: function () {
            return 'hatching';
        },
        enumerable: true,
        configurable: true
    });
    DxoHatchingComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoHatchingComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoHatchingComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoHatchingComponent.prototype, "direction", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoHatchingComponent.prototype, "opacity", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoHatchingComponent.prototype, "step", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoHatchingComponent.prototype, "width", null);
    DxoHatchingComponent = __decorate([
        Component({
            selector: 'dxo-hatching',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoHatchingComponent);
    return DxoHatchingComponent;
}(NestedOption));
var DxoHatchingModule = /** @class */ (function () {
    function DxoHatchingModule() {
    }
    DxoHatchingModule = __decorate([
        NgModule({
            declarations: [
                DxoHatchingComponent
            ],
            exports: [
                DxoHatchingComponent
            ],
        })
    ], DxoHatchingModule);
    return DxoHatchingModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoHeaderFilterComponent = /** @class */ (function (_super) {
    __extends(DxoHeaderFilterComponent, _super);
    function DxoHeaderFilterComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoHeaderFilterComponent.prototype, "allowSearch", {
        get: function () {
            return this._getOption('allowSearch');
        },
        set: function (value) {
            this._setOption('allowSearch', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHeaderFilterComponent.prototype, "dataSource", {
        get: function () {
            return this._getOption('dataSource');
        },
        set: function (value) {
            this._setOption('dataSource', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHeaderFilterComponent.prototype, "groupInterval", {
        get: function () {
            return this._getOption('groupInterval');
        },
        set: function (value) {
            this._setOption('groupInterval', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHeaderFilterComponent.prototype, "height", {
        get: function () {
            return this._getOption('height');
        },
        set: function (value) {
            this._setOption('height', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHeaderFilterComponent.prototype, "searchMode", {
        get: function () {
            return this._getOption('searchMode');
        },
        set: function (value) {
            this._setOption('searchMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHeaderFilterComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHeaderFilterComponent.prototype, "searchTimeout", {
        get: function () {
            return this._getOption('searchTimeout');
        },
        set: function (value) {
            this._setOption('searchTimeout', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHeaderFilterComponent.prototype, "texts", {
        get: function () {
            return this._getOption('texts');
        },
        set: function (value) {
            this._setOption('texts', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHeaderFilterComponent.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHeaderFilterComponent.prototype, "showRelevantValues", {
        get: function () {
            return this._getOption('showRelevantValues');
        },
        set: function (value) {
            this._setOption('showRelevantValues', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHeaderFilterComponent.prototype, "_optionPath", {
        get: function () {
            return 'headerFilter';
        },
        enumerable: true,
        configurable: true
    });
    DxoHeaderFilterComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoHeaderFilterComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoHeaderFilterComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoHeaderFilterComponent.prototype, "allowSearch", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoHeaderFilterComponent.prototype, "dataSource", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoHeaderFilterComponent.prototype, "groupInterval", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoHeaderFilterComponent.prototype, "height", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoHeaderFilterComponent.prototype, "searchMode", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoHeaderFilterComponent.prototype, "width", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoHeaderFilterComponent.prototype, "searchTimeout", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoHeaderFilterComponent.prototype, "texts", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoHeaderFilterComponent.prototype, "visible", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoHeaderFilterComponent.prototype, "showRelevantValues", null);
    DxoHeaderFilterComponent = __decorate([
        Component({
            selector: 'dxo-header-filter',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoHeaderFilterComponent);
    return DxoHeaderFilterComponent;
}(NestedOption));
var DxoHeaderFilterModule = /** @class */ (function () {
    function DxoHeaderFilterModule() {
    }
    DxoHeaderFilterModule = __decorate([
        NgModule({
            declarations: [
                DxoHeaderFilterComponent
            ],
            exports: [
                DxoHeaderFilterComponent
            ],
        })
    ], DxoHeaderFilterModule);
    return DxoHeaderFilterModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoHeightComponent = /** @class */ (function (_super) {
    __extends(DxoHeightComponent, _super);
    function DxoHeightComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoHeightComponent.prototype, "rangeMaxPoint", {
        get: function () {
            return this._getOption('rangeMaxPoint');
        },
        set: function (value) {
            this._setOption('rangeMaxPoint', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHeightComponent.prototype, "rangeMinPoint", {
        get: function () {
            return this._getOption('rangeMinPoint');
        },
        set: function (value) {
            this._setOption('rangeMinPoint', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHeightComponent.prototype, "_optionPath", {
        get: function () {
            return 'height';
        },
        enumerable: true,
        configurable: true
    });
    DxoHeightComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoHeightComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoHeightComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoHeightComponent.prototype, "rangeMaxPoint", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoHeightComponent.prototype, "rangeMinPoint", null);
    DxoHeightComponent = __decorate([
        Component({
            selector: 'dxo-height',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoHeightComponent);
    return DxoHeightComponent;
}(NestedOption));
var DxoHeightModule = /** @class */ (function () {
    function DxoHeightModule() {
    }
    DxoHeightModule = __decorate([
        NgModule({
            declarations: [
                DxoHeightComponent
            ],
            exports: [
                DxoHeightComponent
            ],
        })
    ], DxoHeightModule);
    return DxoHeightModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoHideEventComponent = /** @class */ (function (_super) {
    __extends(DxoHideEventComponent, _super);
    function DxoHideEventComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoHideEventComponent.prototype, "delay", {
        get: function () {
            return this._getOption('delay');
        },
        set: function (value) {
            this._setOption('delay', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHideEventComponent.prototype, "name", {
        get: function () {
            return this._getOption('name');
        },
        set: function (value) {
            this._setOption('name', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHideEventComponent.prototype, "_optionPath", {
        get: function () {
            return 'hideEvent';
        },
        enumerable: true,
        configurable: true
    });
    DxoHideEventComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoHideEventComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoHideEventComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoHideEventComponent.prototype, "delay", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoHideEventComponent.prototype, "name", null);
    DxoHideEventComponent = __decorate([
        Component({
            selector: 'dxo-hide-event',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoHideEventComponent);
    return DxoHideEventComponent;
}(NestedOption));
var DxoHideEventModule = /** @class */ (function () {
    function DxoHideEventModule() {
    }
    DxoHideEventModule = __decorate([
        NgModule({
            declarations: [
                DxoHideEventComponent
            ],
            exports: [
                DxoHideEventComponent
            ],
        })
    ], DxoHideEventModule);
    return DxoHideEventModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoHideComponent = /** @class */ (function (_super) {
    __extends(DxoHideComponent, _super);
    function DxoHideComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoHideComponent.prototype, "_optionPath", {
        get: function () {
            return 'hide';
        },
        enumerable: true,
        configurable: true
    });
    DxoHideComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoHideComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoHideComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoHideComponent = __decorate([
        Component({
            selector: 'dxo-hide',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'complete',
                'delay',
                'direction',
                'duration',
                'easing',
                'from',
                'staggerDelay',
                'start',
                'to',
                'type'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoHideComponent);
    return DxoHideComponent;
}(DxoAnimationConfig));
var DxoHideModule = /** @class */ (function () {
    function DxoHideModule() {
    }
    DxoHideModule = __decorate([
        NgModule({
            declarations: [
                DxoHideComponent
            ],
            exports: [
                DxoHideComponent
            ],
        })
    ], DxoHideModule);
    return DxoHideModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoHistoryToolbarComponent = /** @class */ (function (_super) {
    __extends(DxoHistoryToolbarComponent, _super);
    function DxoHistoryToolbarComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoHistoryToolbarComponent.prototype, "commands", {
        get: function () {
            return this._getOption('commands');
        },
        set: function (value) {
            this._setOption('commands', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHistoryToolbarComponent.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHistoryToolbarComponent.prototype, "_optionPath", {
        get: function () {
            return 'historyToolbar';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHistoryToolbarComponent.prototype, "commandsChildren", {
        get: function () {
            return this._getOption('commands');
        },
        set: function (value) {
            this.setChildren('commands', value);
        },
        enumerable: true,
        configurable: true
    });
    DxoHistoryToolbarComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoHistoryToolbarComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoHistoryToolbarComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxoHistoryToolbarComponent.prototype, "commands", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoHistoryToolbarComponent.prototype, "visible", null);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiCommandComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxoHistoryToolbarComponent.prototype, "commandsChildren", null);
    DxoHistoryToolbarComponent = __decorate([
        Component({
            selector: 'dxo-history-toolbar',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoHistoryToolbarComponent);
    return DxoHistoryToolbarComponent;
}(NestedOption));
var DxoHistoryToolbarModule = /** @class */ (function () {
    function DxoHistoryToolbarModule() {
    }
    DxoHistoryToolbarModule = __decorate([
        NgModule({
            declarations: [
                DxoHistoryToolbarComponent
            ],
            exports: [
                DxoHistoryToolbarComponent
            ],
        })
    ], DxoHistoryToolbarModule);
    return DxoHistoryToolbarModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoHorizontalLineComponent = /** @class */ (function (_super) {
    __extends(DxoHorizontalLineComponent, _super);
    function DxoHorizontalLineComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoHorizontalLineComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHorizontalLineComponent.prototype, "dashStyle", {
        get: function () {
            return this._getOption('dashStyle');
        },
        set: function (value) {
            this._setOption('dashStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHorizontalLineComponent.prototype, "label", {
        get: function () {
            return this._getOption('label');
        },
        set: function (value) {
            this._setOption('label', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHorizontalLineComponent.prototype, "opacity", {
        get: function () {
            return this._getOption('opacity');
        },
        set: function (value) {
            this._setOption('opacity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHorizontalLineComponent.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHorizontalLineComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHorizontalLineComponent.prototype, "_optionPath", {
        get: function () {
            return 'horizontalLine';
        },
        enumerable: true,
        configurable: true
    });
    DxoHorizontalLineComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoHorizontalLineComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoHorizontalLineComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoHorizontalLineComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoHorizontalLineComponent.prototype, "dashStyle", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoHorizontalLineComponent.prototype, "label", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoHorizontalLineComponent.prototype, "opacity", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoHorizontalLineComponent.prototype, "visible", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoHorizontalLineComponent.prototype, "width", null);
    DxoHorizontalLineComponent = __decorate([
        Component({
            selector: 'dxo-horizontal-line',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoHorizontalLineComponent);
    return DxoHorizontalLineComponent;
}(NestedOption));
var DxoHorizontalLineModule = /** @class */ (function () {
    function DxoHorizontalLineModule() {
    }
    DxoHorizontalLineModule = __decorate([
        NgModule({
            declarations: [
                DxoHorizontalLineComponent
            ],
            exports: [
                DxoHorizontalLineComponent
            ],
        })
    ], DxoHorizontalLineModule);
    return DxoHorizontalLineModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoHoverStyleComponent = /** @class */ (function (_super) {
    __extends(DxoHoverStyleComponent, _super);
    function DxoHoverStyleComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoHoverStyleComponent.prototype, "border", {
        get: function () {
            return this._getOption('border');
        },
        set: function (value) {
            this._setOption('border', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHoverStyleComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHoverStyleComponent.prototype, "dashStyle", {
        get: function () {
            return this._getOption('dashStyle');
        },
        set: function (value) {
            this._setOption('dashStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHoverStyleComponent.prototype, "hatching", {
        get: function () {
            return this._getOption('hatching');
        },
        set: function (value) {
            this._setOption('hatching', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHoverStyleComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHoverStyleComponent.prototype, "size", {
        get: function () {
            return this._getOption('size');
        },
        set: function (value) {
            this._setOption('size', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHoverStyleComponent.prototype, "opacity", {
        get: function () {
            return this._getOption('opacity');
        },
        set: function (value) {
            this._setOption('opacity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHoverStyleComponent.prototype, "_optionPath", {
        get: function () {
            return 'hoverStyle';
        },
        enumerable: true,
        configurable: true
    });
    DxoHoverStyleComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoHoverStyleComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoHoverStyleComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoHoverStyleComponent.prototype, "border", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoHoverStyleComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoHoverStyleComponent.prototype, "dashStyle", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoHoverStyleComponent.prototype, "hatching", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoHoverStyleComponent.prototype, "width", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoHoverStyleComponent.prototype, "size", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoHoverStyleComponent.prototype, "opacity", null);
    DxoHoverStyleComponent = __decorate([
        Component({
            selector: 'dxo-hover-style',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoHoverStyleComponent);
    return DxoHoverStyleComponent;
}(NestedOption));
var DxoHoverStyleModule = /** @class */ (function () {
    function DxoHoverStyleModule() {
    }
    DxoHoverStyleModule = __decorate([
        NgModule({
            declarations: [
                DxoHoverStyleComponent
            ],
            exports: [
                DxoHoverStyleComponent
            ],
        })
    ], DxoHoverStyleModule);
    return DxoHoverStyleModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoImageComponent = /** @class */ (function (_super) {
    __extends(DxoImageComponent, _super);
    function DxoImageComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoImageComponent.prototype, "height", {
        get: function () {
            return this._getOption('height');
        },
        set: function (value) {
            this._setOption('height', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoImageComponent.prototype, "url", {
        get: function () {
            return this._getOption('url');
        },
        set: function (value) {
            this._setOption('url', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoImageComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoImageComponent.prototype, "location", {
        get: function () {
            return this._getOption('location');
        },
        set: function (value) {
            this._setOption('location', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoImageComponent.prototype, "_optionPath", {
        get: function () {
            return 'image';
        },
        enumerable: true,
        configurable: true
    });
    DxoImageComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoImageComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoImageComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoImageComponent.prototype, "height", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoImageComponent.prototype, "url", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoImageComponent.prototype, "width", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoImageComponent.prototype, "location", null);
    DxoImageComponent = __decorate([
        Component({
            selector: 'dxo-image',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoImageComponent);
    return DxoImageComponent;
}(NestedOption));
var DxoImageModule = /** @class */ (function () {
    function DxoImageModule() {
    }
    DxoImageModule = __decorate([
        NgModule({
            declarations: [
                DxoImageComponent
            ],
            exports: [
                DxoImageComponent
            ],
        })
    ], DxoImageModule);
    return DxoImageModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoIndentComponent = /** @class */ (function (_super) {
    __extends(DxoIndentComponent, _super);
    function DxoIndentComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoIndentComponent.prototype, "left", {
        get: function () {
            return this._getOption('left');
        },
        set: function (value) {
            this._setOption('left', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoIndentComponent.prototype, "right", {
        get: function () {
            return this._getOption('right');
        },
        set: function (value) {
            this._setOption('right', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoIndentComponent.prototype, "_optionPath", {
        get: function () {
            return 'indent';
        },
        enumerable: true,
        configurable: true
    });
    DxoIndentComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoIndentComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoIndentComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoIndentComponent.prototype, "left", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoIndentComponent.prototype, "right", null);
    DxoIndentComponent = __decorate([
        Component({
            selector: 'dxo-indent',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoIndentComponent);
    return DxoIndentComponent;
}(NestedOption));
var DxoIndentModule = /** @class */ (function () {
    function DxoIndentModule() {
    }
    DxoIndentModule = __decorate([
        NgModule({
            declarations: [
                DxoIndentComponent
            ],
            exports: [
                DxoIndentComponent
            ],
        })
    ], DxoIndentModule);
    return DxoIndentModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoSortableOptions = /** @class */ (function (_super) {
    __extends(DxoSortableOptions, _super);
    function DxoSortableOptions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DxoSortableOptions.prototype, "allowDropInsideItem", {
        get: function () {
            return this._getOption('allowDropInsideItem');
        },
        set: function (value) {
            this._setOption('allowDropInsideItem', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSortableOptions.prototype, "allowReordering", {
        get: function () {
            return this._getOption('allowReordering');
        },
        set: function (value) {
            this._setOption('allowReordering', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSortableOptions.prototype, "autoScroll", {
        get: function () {
            return this._getOption('autoScroll');
        },
        set: function (value) {
            this._setOption('autoScroll', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSortableOptions.prototype, "boundary", {
        get: function () {
            return this._getOption('boundary');
        },
        set: function (value) {
            this._setOption('boundary', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSortableOptions.prototype, "container", {
        get: function () {
            return this._getOption('container');
        },
        set: function (value) {
            this._setOption('container', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSortableOptions.prototype, "cursorOffset", {
        get: function () {
            return this._getOption('cursorOffset');
        },
        set: function (value) {
            this._setOption('cursorOffset', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSortableOptions.prototype, "data", {
        get: function () {
            return this._getOption('data');
        },
        set: function (value) {
            this._setOption('data', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSortableOptions.prototype, "dragDirection", {
        get: function () {
            return this._getOption('dragDirection');
        },
        set: function (value) {
            this._setOption('dragDirection', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSortableOptions.prototype, "dragTemplate", {
        get: function () {
            return this._getOption('dragTemplate');
        },
        set: function (value) {
            this._setOption('dragTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSortableOptions.prototype, "dropFeedbackMode", {
        get: function () {
            return this._getOption('dropFeedbackMode');
        },
        set: function (value) {
            this._setOption('dropFeedbackMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSortableOptions.prototype, "elementAttr", {
        get: function () {
            return this._getOption('elementAttr');
        },
        set: function (value) {
            this._setOption('elementAttr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSortableOptions.prototype, "filter", {
        get: function () {
            return this._getOption('filter');
        },
        set: function (value) {
            this._setOption('filter', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSortableOptions.prototype, "group", {
        get: function () {
            return this._getOption('group');
        },
        set: function (value) {
            this._setOption('group', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSortableOptions.prototype, "handle", {
        get: function () {
            return this._getOption('handle');
        },
        set: function (value) {
            this._setOption('handle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSortableOptions.prototype, "height", {
        get: function () {
            return this._getOption('height');
        },
        set: function (value) {
            this._setOption('height', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSortableOptions.prototype, "itemOrientation", {
        get: function () {
            return this._getOption('itemOrientation');
        },
        set: function (value) {
            this._setOption('itemOrientation', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSortableOptions.prototype, "moveItemOnDrop", {
        get: function () {
            return this._getOption('moveItemOnDrop');
        },
        set: function (value) {
            this._setOption('moveItemOnDrop', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSortableOptions.prototype, "onAdd", {
        get: function () {
            return this._getOption('onAdd');
        },
        set: function (value) {
            this._setOption('onAdd', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSortableOptions.prototype, "onDisposing", {
        get: function () {
            return this._getOption('onDisposing');
        },
        set: function (value) {
            this._setOption('onDisposing', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSortableOptions.prototype, "onDragChange", {
        get: function () {
            return this._getOption('onDragChange');
        },
        set: function (value) {
            this._setOption('onDragChange', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSortableOptions.prototype, "onDragEnd", {
        get: function () {
            return this._getOption('onDragEnd');
        },
        set: function (value) {
            this._setOption('onDragEnd', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSortableOptions.prototype, "onDragMove", {
        get: function () {
            return this._getOption('onDragMove');
        },
        set: function (value) {
            this._setOption('onDragMove', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSortableOptions.prototype, "onDragStart", {
        get: function () {
            return this._getOption('onDragStart');
        },
        set: function (value) {
            this._setOption('onDragStart', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSortableOptions.prototype, "onInitialized", {
        get: function () {
            return this._getOption('onInitialized');
        },
        set: function (value) {
            this._setOption('onInitialized', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSortableOptions.prototype, "onOptionChanged", {
        get: function () {
            return this._getOption('onOptionChanged');
        },
        set: function (value) {
            this._setOption('onOptionChanged', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSortableOptions.prototype, "onRemove", {
        get: function () {
            return this._getOption('onRemove');
        },
        set: function (value) {
            this._setOption('onRemove', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSortableOptions.prototype, "onReorder", {
        get: function () {
            return this._getOption('onReorder');
        },
        set: function (value) {
            this._setOption('onReorder', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSortableOptions.prototype, "rtlEnabled", {
        get: function () {
            return this._getOption('rtlEnabled');
        },
        set: function (value) {
            this._setOption('rtlEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSortableOptions.prototype, "scrollSensitivity", {
        get: function () {
            return this._getOption('scrollSensitivity');
        },
        set: function (value) {
            this._setOption('scrollSensitivity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSortableOptions.prototype, "scrollSpeed", {
        get: function () {
            return this._getOption('scrollSpeed');
        },
        set: function (value) {
            this._setOption('scrollSpeed', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSortableOptions.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    return DxoSortableOptions;
}(NestedOption));

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoItemDraggingComponent = /** @class */ (function (_super) {
    __extends(DxoItemDraggingComponent, _super);
    function DxoItemDraggingComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoItemDraggingComponent.prototype, "_optionPath", {
        get: function () {
            return 'itemDragging';
        },
        enumerable: true,
        configurable: true
    });
    DxoItemDraggingComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoItemDraggingComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoItemDraggingComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoItemDraggingComponent = __decorate([
        Component({
            selector: 'dxo-item-dragging',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'allowDropInsideItem',
                'allowReordering',
                'autoScroll',
                'boundary',
                'container',
                'cursorOffset',
                'data',
                'dragDirection',
                'dragTemplate',
                'dropFeedbackMode',
                'elementAttr',
                'filter',
                'group',
                'handle',
                'height',
                'itemOrientation',
                'moveItemOnDrop',
                'onAdd',
                'onDisposing',
                'onDragChange',
                'onDragEnd',
                'onDragMove',
                'onDragStart',
                'onInitialized',
                'onOptionChanged',
                'onRemove',
                'onReorder',
                'rtlEnabled',
                'scrollSensitivity',
                'scrollSpeed',
                'width'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoItemDraggingComponent);
    return DxoItemDraggingComponent;
}(DxoSortableOptions));
var DxoItemDraggingModule = /** @class */ (function () {
    function DxoItemDraggingModule() {
    }
    DxoItemDraggingModule = __decorate([
        NgModule({
            declarations: [
                DxoItemDraggingComponent
            ],
            exports: [
                DxoItemDraggingComponent
            ],
        })
    ], DxoItemDraggingModule);
    return DxoItemDraggingModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoItemTextFormatComponent = /** @class */ (function (_super) {
    __extends(DxoItemTextFormatComponent, _super);
    function DxoItemTextFormatComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoItemTextFormatComponent.prototype, "_optionPath", {
        get: function () {
            return 'itemTextFormat';
        },
        enumerable: true,
        configurable: true
    });
    DxoItemTextFormatComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoItemTextFormatComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoItemTextFormatComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoItemTextFormatComponent = __decorate([
        Component({
            selector: 'dxo-item-text-format',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'currency',
                'formatter',
                'parser',
                'precision',
                'type'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoItemTextFormatComponent);
    return DxoItemTextFormatComponent;
}(DxoFormat));
var DxoItemTextFormatModule = /** @class */ (function () {
    function DxoItemTextFormatModule() {
    }
    DxoItemTextFormatModule = __decorate([
        NgModule({
            declarations: [
                DxoItemTextFormatComponent
            ],
            exports: [
                DxoItemTextFormatComponent
            ],
        })
    ], DxoItemTextFormatModule);
    return DxoItemTextFormatModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoItemViewComponent = /** @class */ (function (_super) {
    __extends(DxoItemViewComponent, _super);
    function DxoItemViewComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoItemViewComponent.prototype, "details", {
        get: function () {
            return this._getOption('details');
        },
        set: function (value) {
            this._setOption('details', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoItemViewComponent.prototype, "mode", {
        get: function () {
            return this._getOption('mode');
        },
        set: function (value) {
            this._setOption('mode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoItemViewComponent.prototype, "showFolders", {
        get: function () {
            return this._getOption('showFolders');
        },
        set: function (value) {
            this._setOption('showFolders', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoItemViewComponent.prototype, "showParentFolder", {
        get: function () {
            return this._getOption('showParentFolder');
        },
        set: function (value) {
            this._setOption('showParentFolder', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoItemViewComponent.prototype, "_optionPath", {
        get: function () {
            return 'itemView';
        },
        enumerable: true,
        configurable: true
    });
    DxoItemViewComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoItemViewComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoItemViewComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoItemViewComponent.prototype, "details", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoItemViewComponent.prototype, "mode", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoItemViewComponent.prototype, "showFolders", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoItemViewComponent.prototype, "showParentFolder", null);
    DxoItemViewComponent = __decorate([
        Component({
            selector: 'dxo-item-view',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoItemViewComponent);
    return DxoItemViewComponent;
}(NestedOption));
var DxoItemViewModule = /** @class */ (function () {
    function DxoItemViewModule() {
    }
    DxoItemViewModule = __decorate([
        NgModule({
            declarations: [
                DxoItemViewComponent
            ],
            exports: [
                DxoItemViewComponent
            ],
        })
    ], DxoItemViewModule);
    return DxoItemViewModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoItemComponent = /** @class */ (function (_super) {
    __extends(DxoItemComponent, _super);
    function DxoItemComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoItemComponent.prototype, "border", {
        get: function () {
            return this._getOption('border');
        },
        set: function (value) {
            this._setOption('border', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoItemComponent.prototype, "hoverStyle", {
        get: function () {
            return this._getOption('hoverStyle');
        },
        set: function (value) {
            this._setOption('hoverStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoItemComponent.prototype, "selectionStyle", {
        get: function () {
            return this._getOption('selectionStyle');
        },
        set: function (value) {
            this._setOption('selectionStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoItemComponent.prototype, "_optionPath", {
        get: function () {
            return 'item';
        },
        enumerable: true,
        configurable: true
    });
    DxoItemComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoItemComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoItemComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoItemComponent.prototype, "border", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoItemComponent.prototype, "hoverStyle", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoItemComponent.prototype, "selectionStyle", null);
    DxoItemComponent = __decorate([
        Component({
            selector: 'dxo-item',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoItemComponent);
    return DxoItemComponent;
}(NestedOption));
var DxoItemModule = /** @class */ (function () {
    function DxoItemModule() {
    }
    DxoItemModule = __decorate([
        NgModule({
            declarations: [
                DxoItemComponent
            ],
            exports: [
                DxoItemComponent
            ],
        })
    ], DxoItemModule);
    return DxoItemModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoKeyComponent = /** @class */ (function (_super) {
    __extends(DxoKeyComponent, _super);
    function DxoKeyComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoKeyComponent.prototype, "bing", {
        get: function () {
            return this._getOption('bing');
        },
        set: function (value) {
            this._setOption('bing', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoKeyComponent.prototype, "google", {
        get: function () {
            return this._getOption('google');
        },
        set: function (value) {
            this._setOption('google', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoKeyComponent.prototype, "googleStatic", {
        get: function () {
            return this._getOption('googleStatic');
        },
        set: function (value) {
            this._setOption('googleStatic', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoKeyComponent.prototype, "_optionPath", {
        get: function () {
            return 'key';
        },
        enumerable: true,
        configurable: true
    });
    DxoKeyComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoKeyComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoKeyComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoKeyComponent.prototype, "bing", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoKeyComponent.prototype, "google", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoKeyComponent.prototype, "googleStatic", null);
    DxoKeyComponent = __decorate([
        Component({
            selector: 'dxo-key',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoKeyComponent);
    return DxoKeyComponent;
}(NestedOption));
var DxoKeyModule = /** @class */ (function () {
    function DxoKeyModule() {
    }
    DxoKeyModule = __decorate([
        NgModule({
            declarations: [
                DxoKeyComponent
            ],
            exports: [
                DxoKeyComponent
            ],
        })
    ], DxoKeyModule);
    return DxoKeyModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoKeyboardNavigationComponent = /** @class */ (function (_super) {
    __extends(DxoKeyboardNavigationComponent, _super);
    function DxoKeyboardNavigationComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoKeyboardNavigationComponent.prototype, "editOnKeyPress", {
        get: function () {
            return this._getOption('editOnKeyPress');
        },
        set: function (value) {
            this._setOption('editOnKeyPress', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoKeyboardNavigationComponent.prototype, "enabled", {
        get: function () {
            return this._getOption('enabled');
        },
        set: function (value) {
            this._setOption('enabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoKeyboardNavigationComponent.prototype, "enterKeyAction", {
        get: function () {
            return this._getOption('enterKeyAction');
        },
        set: function (value) {
            this._setOption('enterKeyAction', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoKeyboardNavigationComponent.prototype, "enterKeyDirection", {
        get: function () {
            return this._getOption('enterKeyDirection');
        },
        set: function (value) {
            this._setOption('enterKeyDirection', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoKeyboardNavigationComponent.prototype, "_optionPath", {
        get: function () {
            return 'keyboardNavigation';
        },
        enumerable: true,
        configurable: true
    });
    DxoKeyboardNavigationComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoKeyboardNavigationComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoKeyboardNavigationComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoKeyboardNavigationComponent.prototype, "editOnKeyPress", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoKeyboardNavigationComponent.prototype, "enabled", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoKeyboardNavigationComponent.prototype, "enterKeyAction", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoKeyboardNavigationComponent.prototype, "enterKeyDirection", null);
    DxoKeyboardNavigationComponent = __decorate([
        Component({
            selector: 'dxo-keyboard-navigation',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoKeyboardNavigationComponent);
    return DxoKeyboardNavigationComponent;
}(NestedOption));
var DxoKeyboardNavigationModule = /** @class */ (function () {
    function DxoKeyboardNavigationModule() {
    }
    DxoKeyboardNavigationModule = __decorate([
        NgModule({
            declarations: [
                DxoKeyboardNavigationComponent
            ],
            exports: [
                DxoKeyboardNavigationComponent
            ],
        })
    ], DxoKeyboardNavigationModule);
    return DxoKeyboardNavigationModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoLabelComponent = /** @class */ (function (_super) {
    __extends(DxoLabelComponent, _super);
    function DxoLabelComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoLabelComponent.prototype, "connectorColor", {
        get: function () {
            return this._getOption('connectorColor');
        },
        set: function (value) {
            this._setOption('connectorColor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "connectorWidth", {
        get: function () {
            return this._getOption('connectorWidth');
        },
        set: function (value) {
            this._setOption('connectorWidth', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "customizeText", {
        get: function () {
            return this._getOption('customizeText');
        },
        set: function (value) {
            this._setOption('customizeText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "font", {
        get: function () {
            return this._getOption('font');
        },
        set: function (value) {
            this._setOption('font', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "format", {
        get: function () {
            return this._getOption('format');
        },
        set: function (value) {
            this._setOption('format', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "indent", {
        get: function () {
            return this._getOption('indent');
        },
        set: function (value) {
            this._setOption('indent', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "horizontalAlignment", {
        get: function () {
            return this._getOption('horizontalAlignment');
        },
        set: function (value) {
            this._setOption('horizontalAlignment', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "position", {
        get: function () {
            return this._getOption('position');
        },
        set: function (value) {
            this._setOption('position', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "text", {
        get: function () {
            return this._getOption('text');
        },
        set: function (value) {
            this._setOption('text', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "verticalAlignment", {
        get: function () {
            return this._getOption('verticalAlignment');
        },
        set: function (value) {
            this._setOption('verticalAlignment', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "alignment", {
        get: function () {
            return this._getOption('alignment');
        },
        set: function (value) {
            this._setOption('alignment', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "customizeHint", {
        get: function () {
            return this._getOption('customizeHint');
        },
        set: function (value) {
            this._setOption('customizeHint', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "displayMode", {
        get: function () {
            return this._getOption('displayMode');
        },
        set: function (value) {
            this._setOption('displayMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "indentFromAxis", {
        get: function () {
            return this._getOption('indentFromAxis');
        },
        set: function (value) {
            this._setOption('indentFromAxis', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "overlappingBehavior", {
        get: function () {
            return this._getOption('overlappingBehavior');
        },
        set: function (value) {
            this._setOption('overlappingBehavior', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "rotationAngle", {
        get: function () {
            return this._getOption('rotationAngle');
        },
        set: function (value) {
            this._setOption('rotationAngle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "staggeringSpacing", {
        get: function () {
            return this._getOption('staggeringSpacing');
        },
        set: function (value) {
            this._setOption('staggeringSpacing', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "textOverflow", {
        get: function () {
            return this._getOption('textOverflow');
        },
        set: function (value) {
            this._setOption('textOverflow', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "wordWrap", {
        get: function () {
            return this._getOption('wordWrap');
        },
        set: function (value) {
            this._setOption('wordWrap', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "argumentFormat", {
        get: function () {
            return this._getOption('argumentFormat');
        },
        set: function (value) {
            this._setOption('argumentFormat', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "backgroundColor", {
        get: function () {
            return this._getOption('backgroundColor');
        },
        set: function (value) {
            this._setOption('backgroundColor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "border", {
        get: function () {
            return this._getOption('border');
        },
        set: function (value) {
            this._setOption('border', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "connector", {
        get: function () {
            return this._getOption('connector');
        },
        set: function (value) {
            this._setOption('connector', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "horizontalOffset", {
        get: function () {
            return this._getOption('horizontalOffset');
        },
        set: function (value) {
            this._setOption('horizontalOffset', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "showForZeroValues", {
        get: function () {
            return this._getOption('showForZeroValues');
        },
        set: function (value) {
            this._setOption('showForZeroValues', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "verticalOffset", {
        get: function () {
            return this._getOption('verticalOffset');
        },
        set: function (value) {
            this._setOption('verticalOffset', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "hideFirstOrLast", {
        get: function () {
            return this._getOption('hideFirstOrLast');
        },
        set: function (value) {
            this._setOption('hideFirstOrLast', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "indentFromTick", {
        get: function () {
            return this._getOption('indentFromTick');
        },
        set: function (value) {
            this._setOption('indentFromTick', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "useRangeColors", {
        get: function () {
            return this._getOption('useRangeColors');
        },
        set: function (value) {
            this._setOption('useRangeColors', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "location", {
        get: function () {
            return this._getOption('location');
        },
        set: function (value) {
            this._setOption('location', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "showColon", {
        get: function () {
            return this._getOption('showColon');
        },
        set: function (value) {
            this._setOption('showColon', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "radialOffset", {
        get: function () {
            return this._getOption('radialOffset');
        },
        set: function (value) {
            this._setOption('radialOffset', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "topIndent", {
        get: function () {
            return this._getOption('topIndent');
        },
        set: function (value) {
            this._setOption('topIndent', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "shadow", {
        get: function () {
            return this._getOption('shadow');
        },
        set: function (value) {
            this._setOption('shadow', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "useNodeColors", {
        get: function () {
            return this._getOption('useNodeColors');
        },
        set: function (value) {
            this._setOption('useNodeColors', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "dataField", {
        get: function () {
            return this._getOption('dataField');
        },
        set: function (value) {
            this._setOption('dataField', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "enabled", {
        get: function () {
            return this._getOption('enabled');
        },
        set: function (value) {
            this._setOption('enabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "_optionPath", {
        get: function () {
            return 'label';
        },
        enumerable: true,
        configurable: true
    });
    DxoLabelComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoLabelComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoLabelComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoLabelComponent.prototype, "connectorColor", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoLabelComponent.prototype, "connectorWidth", null);
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxoLabelComponent.prototype, "customizeText", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "font", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "format", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoLabelComponent.prototype, "indent", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoLabelComponent.prototype, "visible", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoLabelComponent.prototype, "horizontalAlignment", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoLabelComponent.prototype, "position", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoLabelComponent.prototype, "text", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoLabelComponent.prototype, "verticalAlignment", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoLabelComponent.prototype, "alignment", null);
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxoLabelComponent.prototype, "customizeHint", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoLabelComponent.prototype, "displayMode", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoLabelComponent.prototype, "indentFromAxis", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoLabelComponent.prototype, "overlappingBehavior", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoLabelComponent.prototype, "rotationAngle", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoLabelComponent.prototype, "staggeringSpacing", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoLabelComponent.prototype, "textOverflow", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoLabelComponent.prototype, "wordWrap", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "argumentFormat", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoLabelComponent.prototype, "backgroundColor", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "border", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "connector", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoLabelComponent.prototype, "horizontalOffset", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoLabelComponent.prototype, "showForZeroValues", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoLabelComponent.prototype, "verticalOffset", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoLabelComponent.prototype, "hideFirstOrLast", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoLabelComponent.prototype, "indentFromTick", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoLabelComponent.prototype, "useRangeColors", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoLabelComponent.prototype, "location", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoLabelComponent.prototype, "showColon", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoLabelComponent.prototype, "radialOffset", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoLabelComponent.prototype, "topIndent", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "shadow", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoLabelComponent.prototype, "useNodeColors", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoLabelComponent.prototype, "dataField", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoLabelComponent.prototype, "enabled", null);
    DxoLabelComponent = __decorate([
        Component({
            selector: 'dxo-label',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoLabelComponent);
    return DxoLabelComponent;
}(NestedOption));
var DxoLabelModule = /** @class */ (function () {
    function DxoLabelModule() {
    }
    DxoLabelModule = __decorate([
        NgModule({
            declarations: [
                DxoLabelComponent
            ],
            exports: [
                DxoLabelComponent
            ],
        })
    ], DxoLabelModule);
    return DxoLabelModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiLayerComponent = /** @class */ (function (_super) {
    __extends(DxiLayerComponent, _super);
    function DxiLayerComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiLayerComponent.prototype, "borderColor", {
        get: function () {
            return this._getOption('borderColor');
        },
        set: function (value) {
            this._setOption('borderColor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "borderWidth", {
        get: function () {
            return this._getOption('borderWidth');
        },
        set: function (value) {
            this._setOption('borderWidth', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "colorGroupingField", {
        get: function () {
            return this._getOption('colorGroupingField');
        },
        set: function (value) {
            this._setOption('colorGroupingField', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "colorGroups", {
        get: function () {
            return this._getOption('colorGroups');
        },
        set: function (value) {
            this._setOption('colorGroups', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "customize", {
        get: function () {
            return this._getOption('customize');
        },
        set: function (value) {
            this._setOption('customize', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "dataField", {
        get: function () {
            return this._getOption('dataField');
        },
        set: function (value) {
            this._setOption('dataField', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "dataSource", {
        get: function () {
            return this._getOption('dataSource');
        },
        set: function (value) {
            this._setOption('dataSource', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "elementType", {
        get: function () {
            return this._getOption('elementType');
        },
        set: function (value) {
            this._setOption('elementType', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "hoveredBorderColor", {
        get: function () {
            return this._getOption('hoveredBorderColor');
        },
        set: function (value) {
            this._setOption('hoveredBorderColor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "hoveredBorderWidth", {
        get: function () {
            return this._getOption('hoveredBorderWidth');
        },
        set: function (value) {
            this._setOption('hoveredBorderWidth', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "hoveredColor", {
        get: function () {
            return this._getOption('hoveredColor');
        },
        set: function (value) {
            this._setOption('hoveredColor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "hoverEnabled", {
        get: function () {
            return this._getOption('hoverEnabled');
        },
        set: function (value) {
            this._setOption('hoverEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "label", {
        get: function () {
            return this._getOption('label');
        },
        set: function (value) {
            this._setOption('label', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "maxSize", {
        get: function () {
            return this._getOption('maxSize');
        },
        set: function (value) {
            this._setOption('maxSize', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "minSize", {
        get: function () {
            return this._getOption('minSize');
        },
        set: function (value) {
            this._setOption('minSize', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "name", {
        get: function () {
            return this._getOption('name');
        },
        set: function (value) {
            this._setOption('name', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "opacity", {
        get: function () {
            return this._getOption('opacity');
        },
        set: function (value) {
            this._setOption('opacity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "palette", {
        get: function () {
            return this._getOption('palette');
        },
        set: function (value) {
            this._setOption('palette', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "paletteSize", {
        get: function () {
            return this._getOption('paletteSize');
        },
        set: function (value) {
            this._setOption('paletteSize', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "selectedBorderColor", {
        get: function () {
            return this._getOption('selectedBorderColor');
        },
        set: function (value) {
            this._setOption('selectedBorderColor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "selectedBorderWidth", {
        get: function () {
            return this._getOption('selectedBorderWidth');
        },
        set: function (value) {
            this._setOption('selectedBorderWidth', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "selectedColor", {
        get: function () {
            return this._getOption('selectedColor');
        },
        set: function (value) {
            this._setOption('selectedColor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "selectionMode", {
        get: function () {
            return this._getOption('selectionMode');
        },
        set: function (value) {
            this._setOption('selectionMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "size", {
        get: function () {
            return this._getOption('size');
        },
        set: function (value) {
            this._setOption('size', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "sizeGroupingField", {
        get: function () {
            return this._getOption('sizeGroupingField');
        },
        set: function (value) {
            this._setOption('sizeGroupingField', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "sizeGroups", {
        get: function () {
            return this._getOption('sizeGroups');
        },
        set: function (value) {
            this._setOption('sizeGroups', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "type", {
        get: function () {
            return this._getOption('type');
        },
        set: function (value) {
            this._setOption('type', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "_optionPath", {
        get: function () {
            return 'layers';
        },
        enumerable: true,
        configurable: true
    });
    DxiLayerComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiLayerComponent.prototype, "borderColor", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiLayerComponent.prototype, "borderWidth", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiLayerComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiLayerComponent.prototype, "colorGroupingField", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxiLayerComponent.prototype, "colorGroups", null);
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxiLayerComponent.prototype, "customize", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiLayerComponent.prototype, "dataField", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLayerComponent.prototype, "dataSource", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiLayerComponent.prototype, "elementType", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiLayerComponent.prototype, "hoveredBorderColor", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiLayerComponent.prototype, "hoveredBorderWidth", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiLayerComponent.prototype, "hoveredColor", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxiLayerComponent.prototype, "hoverEnabled", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLayerComponent.prototype, "label", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiLayerComponent.prototype, "maxSize", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiLayerComponent.prototype, "minSize", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiLayerComponent.prototype, "name", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiLayerComponent.prototype, "opacity", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLayerComponent.prototype, "palette", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiLayerComponent.prototype, "paletteSize", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiLayerComponent.prototype, "selectedBorderColor", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiLayerComponent.prototype, "selectedBorderWidth", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiLayerComponent.prototype, "selectedColor", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiLayerComponent.prototype, "selectionMode", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiLayerComponent.prototype, "size", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiLayerComponent.prototype, "sizeGroupingField", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxiLayerComponent.prototype, "sizeGroups", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiLayerComponent.prototype, "type", null);
    DxiLayerComponent = __decorate([
        Component({
            selector: 'dxi-layer',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiLayerComponent);
    return DxiLayerComponent;
}(CollectionNestedOption));
var DxiLayerModule = /** @class */ (function () {
    function DxiLayerModule() {
    }
    DxiLayerModule = __decorate([
        NgModule({
            declarations: [
                DxiLayerComponent
            ],
            exports: [
                DxiLayerComponent
            ],
        })
    ], DxiLayerModule);
    return DxiLayerModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiLegendComponent = /** @class */ (function (_super) {
    __extends(DxiLegendComponent, _super);
    function DxiLegendComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiLegendComponent.prototype, "backgroundColor", {
        get: function () {
            return this._getOption('backgroundColor');
        },
        set: function (value) {
            this._setOption('backgroundColor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLegendComponent.prototype, "border", {
        get: function () {
            return this._getOption('border');
        },
        set: function (value) {
            this._setOption('border', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLegendComponent.prototype, "columnCount", {
        get: function () {
            return this._getOption('columnCount');
        },
        set: function (value) {
            this._setOption('columnCount', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLegendComponent.prototype, "columnItemSpacing", {
        get: function () {
            return this._getOption('columnItemSpacing');
        },
        set: function (value) {
            this._setOption('columnItemSpacing', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLegendComponent.prototype, "customizeHint", {
        get: function () {
            return this._getOption('customizeHint');
        },
        set: function (value) {
            this._setOption('customizeHint', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLegendComponent.prototype, "customizeItems", {
        get: function () {
            return this._getOption('customizeItems');
        },
        set: function (value) {
            this._setOption('customizeItems', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLegendComponent.prototype, "customizeText", {
        get: function () {
            return this._getOption('customizeText');
        },
        set: function (value) {
            this._setOption('customizeText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLegendComponent.prototype, "font", {
        get: function () {
            return this._getOption('font');
        },
        set: function (value) {
            this._setOption('font', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLegendComponent.prototype, "horizontalAlignment", {
        get: function () {
            return this._getOption('horizontalAlignment');
        },
        set: function (value) {
            this._setOption('horizontalAlignment', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLegendComponent.prototype, "itemsAlignment", {
        get: function () {
            return this._getOption('itemsAlignment');
        },
        set: function (value) {
            this._setOption('itemsAlignment', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLegendComponent.prototype, "itemTextPosition", {
        get: function () {
            return this._getOption('itemTextPosition');
        },
        set: function (value) {
            this._setOption('itemTextPosition', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLegendComponent.prototype, "margin", {
        get: function () {
            return this._getOption('margin');
        },
        set: function (value) {
            this._setOption('margin', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLegendComponent.prototype, "markerColor", {
        get: function () {
            return this._getOption('markerColor');
        },
        set: function (value) {
            this._setOption('markerColor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLegendComponent.prototype, "markerShape", {
        get: function () {
            return this._getOption('markerShape');
        },
        set: function (value) {
            this._setOption('markerShape', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLegendComponent.prototype, "markerSize", {
        get: function () {
            return this._getOption('markerSize');
        },
        set: function (value) {
            this._setOption('markerSize', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLegendComponent.prototype, "markerTemplate", {
        get: function () {
            return this._getOption('markerTemplate');
        },
        set: function (value) {
            this._setOption('markerTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLegendComponent.prototype, "orientation", {
        get: function () {
            return this._getOption('orientation');
        },
        set: function (value) {
            this._setOption('orientation', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLegendComponent.prototype, "paddingLeftRight", {
        get: function () {
            return this._getOption('paddingLeftRight');
        },
        set: function (value) {
            this._setOption('paddingLeftRight', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLegendComponent.prototype, "paddingTopBottom", {
        get: function () {
            return this._getOption('paddingTopBottom');
        },
        set: function (value) {
            this._setOption('paddingTopBottom', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLegendComponent.prototype, "rowCount", {
        get: function () {
            return this._getOption('rowCount');
        },
        set: function (value) {
            this._setOption('rowCount', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLegendComponent.prototype, "rowItemSpacing", {
        get: function () {
            return this._getOption('rowItemSpacing');
        },
        set: function (value) {
            this._setOption('rowItemSpacing', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLegendComponent.prototype, "source", {
        get: function () {
            return this._getOption('source');
        },
        set: function (value) {
            this._setOption('source', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLegendComponent.prototype, "title", {
        get: function () {
            return this._getOption('title');
        },
        set: function (value) {
            this._setOption('title', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLegendComponent.prototype, "verticalAlignment", {
        get: function () {
            return this._getOption('verticalAlignment');
        },
        set: function (value) {
            this._setOption('verticalAlignment', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLegendComponent.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLegendComponent.prototype, "_optionPath", {
        get: function () {
            return 'legends';
        },
        enumerable: true,
        configurable: true
    });
    DxiLegendComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiLegendComponent.prototype, "backgroundColor", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLegendComponent.prototype, "border", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiLegendComponent.prototype, "columnCount", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiLegendComponent.prototype, "columnItemSpacing", null);
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxiLegendComponent.prototype, "customizeHint", null);
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxiLegendComponent.prototype, "customizeItems", null);
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxiLegendComponent.prototype, "customizeText", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLegendComponent.prototype, "font", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiLegendComponent.prototype, "horizontalAlignment", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiLegendComponent.prototype, "itemsAlignment", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiLegendComponent.prototype, "itemTextPosition", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLegendComponent.prototype, "margin", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiLegendComponent.prototype, "markerColor", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiLegendComponent.prototype, "markerShape", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiLegendComponent.prototype, "markerSize", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLegendComponent.prototype, "markerTemplate", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiLegendComponent.prototype, "orientation", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiLegendComponent.prototype, "paddingLeftRight", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiLegendComponent.prototype, "paddingTopBottom", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiLegendComponent.prototype, "rowCount", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiLegendComponent.prototype, "rowItemSpacing", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLegendComponent.prototype, "source", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLegendComponent.prototype, "title", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiLegendComponent.prototype, "verticalAlignment", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxiLegendComponent.prototype, "visible", null);
    DxiLegendComponent = __decorate([
        Component({
            selector: 'dxi-legend',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiLegendComponent);
    return DxiLegendComponent;
}(CollectionNestedOption));
var DxiLegendModule = /** @class */ (function () {
    function DxiLegendModule() {
    }
    DxiLegendModule = __decorate([
        NgModule({
            declarations: [
                DxiLegendComponent
            ],
            exports: [
                DxiLegendComponent
            ],
        })
    ], DxiLegendModule);
    return DxiLegendModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoLegendComponent = /** @class */ (function (_super) {
    __extends(DxoLegendComponent, _super);
    function DxoLegendComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoLegendComponent.prototype, "backgroundColor", {
        get: function () {
            return this._getOption('backgroundColor');
        },
        set: function (value) {
            this._setOption('backgroundColor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "border", {
        get: function () {
            return this._getOption('border');
        },
        set: function (value) {
            this._setOption('border', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "columnCount", {
        get: function () {
            return this._getOption('columnCount');
        },
        set: function (value) {
            this._setOption('columnCount', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "columnItemSpacing", {
        get: function () {
            return this._getOption('columnItemSpacing');
        },
        set: function (value) {
            this._setOption('columnItemSpacing', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "customizeHint", {
        get: function () {
            return this._getOption('customizeHint');
        },
        set: function (value) {
            this._setOption('customizeHint', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "customizeItems", {
        get: function () {
            return this._getOption('customizeItems');
        },
        set: function (value) {
            this._setOption('customizeItems', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "customizeText", {
        get: function () {
            return this._getOption('customizeText');
        },
        set: function (value) {
            this._setOption('customizeText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "font", {
        get: function () {
            return this._getOption('font');
        },
        set: function (value) {
            this._setOption('font', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "horizontalAlignment", {
        get: function () {
            return this._getOption('horizontalAlignment');
        },
        set: function (value) {
            this._setOption('horizontalAlignment', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "itemsAlignment", {
        get: function () {
            return this._getOption('itemsAlignment');
        },
        set: function (value) {
            this._setOption('itemsAlignment', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "itemTextFormat", {
        get: function () {
            return this._getOption('itemTextFormat');
        },
        set: function (value) {
            this._setOption('itemTextFormat', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "itemTextPosition", {
        get: function () {
            return this._getOption('itemTextPosition');
        },
        set: function (value) {
            this._setOption('itemTextPosition', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "margin", {
        get: function () {
            return this._getOption('margin');
        },
        set: function (value) {
            this._setOption('margin', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "markerSize", {
        get: function () {
            return this._getOption('markerSize');
        },
        set: function (value) {
            this._setOption('markerSize', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "markerTemplate", {
        get: function () {
            return this._getOption('markerTemplate');
        },
        set: function (value) {
            this._setOption('markerTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "orientation", {
        get: function () {
            return this._getOption('orientation');
        },
        set: function (value) {
            this._setOption('orientation', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "paddingLeftRight", {
        get: function () {
            return this._getOption('paddingLeftRight');
        },
        set: function (value) {
            this._setOption('paddingLeftRight', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "paddingTopBottom", {
        get: function () {
            return this._getOption('paddingTopBottom');
        },
        set: function (value) {
            this._setOption('paddingTopBottom', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "rowCount", {
        get: function () {
            return this._getOption('rowCount');
        },
        set: function (value) {
            this._setOption('rowCount', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "rowItemSpacing", {
        get: function () {
            return this._getOption('rowItemSpacing');
        },
        set: function (value) {
            this._setOption('rowItemSpacing', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "title", {
        get: function () {
            return this._getOption('title');
        },
        set: function (value) {
            this._setOption('title', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "verticalAlignment", {
        get: function () {
            return this._getOption('verticalAlignment');
        },
        set: function (value) {
            this._setOption('verticalAlignment', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "hoverMode", {
        get: function () {
            return this._getOption('hoverMode');
        },
        set: function (value) {
            this._setOption('hoverMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "position", {
        get: function () {
            return this._getOption('position');
        },
        set: function (value) {
            this._setOption('position', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "_optionPath", {
        get: function () {
            return 'legend';
        },
        enumerable: true,
        configurable: true
    });
    DxoLegendComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoLegendComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoLegendComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoLegendComponent.prototype, "backgroundColor", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLegendComponent.prototype, "border", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoLegendComponent.prototype, "columnCount", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoLegendComponent.prototype, "columnItemSpacing", null);
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxoLegendComponent.prototype, "customizeHint", null);
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxoLegendComponent.prototype, "customizeItems", null);
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxoLegendComponent.prototype, "customizeText", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLegendComponent.prototype, "font", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoLegendComponent.prototype, "horizontalAlignment", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoLegendComponent.prototype, "itemsAlignment", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLegendComponent.prototype, "itemTextFormat", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoLegendComponent.prototype, "itemTextPosition", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLegendComponent.prototype, "margin", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoLegendComponent.prototype, "markerSize", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLegendComponent.prototype, "markerTemplate", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoLegendComponent.prototype, "orientation", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoLegendComponent.prototype, "paddingLeftRight", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoLegendComponent.prototype, "paddingTopBottom", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoLegendComponent.prototype, "rowCount", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoLegendComponent.prototype, "rowItemSpacing", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLegendComponent.prototype, "title", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoLegendComponent.prototype, "verticalAlignment", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoLegendComponent.prototype, "visible", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoLegendComponent.prototype, "hoverMode", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoLegendComponent.prototype, "position", null);
    DxoLegendComponent = __decorate([
        Component({
            selector: 'dxo-legend',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoLegendComponent);
    return DxoLegendComponent;
}(NestedOption));
var DxoLegendModule = /** @class */ (function () {
    function DxoLegendModule() {
    }
    DxoLegendModule = __decorate([
        NgModule({
            declarations: [
                DxoLegendComponent
            ],
            exports: [
                DxoLegendComponent
            ],
        })
    ], DxoLegendModule);
    return DxoLegendModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoLineComponent = /** @class */ (function (_super) {
    __extends(DxoLineComponent, _super);
    function DxoLineComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoLineComponent.prototype, "_optionPath", {
        get: function () {
            return 'line';
        },
        enumerable: true,
        configurable: true
    });
    DxoLineComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoLineComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoLineComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoLineComponent = __decorate([
        Component({
            selector: 'dxo-line',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'aggregation',
                'area',
                'argumentField',
                'axis',
                'bar',
                'barOverlapGroup',
                'barPadding',
                'barWidth',
                'border',
                'bubble',
                'candlestick',
                'closeValueField',
                'color',
                'cornerRadius',
                'dashStyle',
                'fullstackedarea',
                'fullstackedbar',
                'fullstackedline',
                'fullstackedspline',
                'fullstackedsplinearea',
                'highValueField',
                'hoverMode',
                'hoverStyle',
                'ignoreEmptyPoints',
                'innerColor',
                'label',
                'line',
                'lowValueField',
                'maxLabelCount',
                'minBarSize',
                'opacity',
                'openValueField',
                'pane',
                'point',
                'rangearea',
                'rangebar',
                'rangeValue1Field',
                'rangeValue2Field',
                'reduction',
                'scatter',
                'selectionMode',
                'selectionStyle',
                'showInLegend',
                'sizeField',
                'spline',
                'splinearea',
                'stack',
                'stackedarea',
                'stackedbar',
                'stackedline',
                'stackedspline',
                'stackedsplinearea',
                'steparea',
                'stepline',
                'stock',
                'tagField',
                'type',
                'valueErrorBar',
                'valueField',
                'visible',
                'width',
                'closed'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoLineComponent);
    return DxoLineComponent;
}(DxoChartCommonSeriesSettings));
var DxoLineModule = /** @class */ (function () {
    function DxoLineModule() {
    }
    DxoLineModule = __decorate([
        NgModule({
            declarations: [
                DxoLineComponent
            ],
            exports: [
                DxoLineComponent
            ],
        })
    ], DxoLineModule);
    return DxoLineModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoLinkComponent = /** @class */ (function (_super) {
    __extends(DxoLinkComponent, _super);
    function DxoLinkComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoLinkComponent.prototype, "border", {
        get: function () {
            return this._getOption('border');
        },
        set: function (value) {
            this._setOption('border', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLinkComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLinkComponent.prototype, "colorMode", {
        get: function () {
            return this._getOption('colorMode');
        },
        set: function (value) {
            this._setOption('colorMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLinkComponent.prototype, "hoverStyle", {
        get: function () {
            return this._getOption('hoverStyle');
        },
        set: function (value) {
            this._setOption('hoverStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLinkComponent.prototype, "opacity", {
        get: function () {
            return this._getOption('opacity');
        },
        set: function (value) {
            this._setOption('opacity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLinkComponent.prototype, "_optionPath", {
        get: function () {
            return 'link';
        },
        enumerable: true,
        configurable: true
    });
    DxoLinkComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoLinkComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoLinkComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLinkComponent.prototype, "border", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoLinkComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoLinkComponent.prototype, "colorMode", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLinkComponent.prototype, "hoverStyle", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoLinkComponent.prototype, "opacity", null);
    DxoLinkComponent = __decorate([
        Component({
            selector: 'dxo-link',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoLinkComponent);
    return DxoLinkComponent;
}(NestedOption));
var DxoLinkModule = /** @class */ (function () {
    function DxoLinkModule() {
    }
    DxoLinkModule = __decorate([
        NgModule({
            declarations: [
                DxoLinkComponent
            ],
            exports: [
                DxoLinkComponent
            ],
        })
    ], DxoLinkModule);
    return DxoLinkModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoLoadPanelComponent = /** @class */ (function (_super) {
    __extends(DxoLoadPanelComponent, _super);
    function DxoLoadPanelComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoLoadPanelComponent.prototype, "enabled", {
        get: function () {
            return this._getOption('enabled');
        },
        set: function (value) {
            this._setOption('enabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLoadPanelComponent.prototype, "height", {
        get: function () {
            return this._getOption('height');
        },
        set: function (value) {
            this._setOption('height', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLoadPanelComponent.prototype, "indicatorSrc", {
        get: function () {
            return this._getOption('indicatorSrc');
        },
        set: function (value) {
            this._setOption('indicatorSrc', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLoadPanelComponent.prototype, "shading", {
        get: function () {
            return this._getOption('shading');
        },
        set: function (value) {
            this._setOption('shading', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLoadPanelComponent.prototype, "shadingColor", {
        get: function () {
            return this._getOption('shadingColor');
        },
        set: function (value) {
            this._setOption('shadingColor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLoadPanelComponent.prototype, "showIndicator", {
        get: function () {
            return this._getOption('showIndicator');
        },
        set: function (value) {
            this._setOption('showIndicator', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLoadPanelComponent.prototype, "showPane", {
        get: function () {
            return this._getOption('showPane');
        },
        set: function (value) {
            this._setOption('showPane', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLoadPanelComponent.prototype, "text", {
        get: function () {
            return this._getOption('text');
        },
        set: function (value) {
            this._setOption('text', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLoadPanelComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLoadPanelComponent.prototype, "_optionPath", {
        get: function () {
            return 'loadPanel';
        },
        enumerable: true,
        configurable: true
    });
    DxoLoadPanelComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoLoadPanelComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoLoadPanelComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLoadPanelComponent.prototype, "enabled", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoLoadPanelComponent.prototype, "height", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoLoadPanelComponent.prototype, "indicatorSrc", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoLoadPanelComponent.prototype, "shading", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoLoadPanelComponent.prototype, "shadingColor", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoLoadPanelComponent.prototype, "showIndicator", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoLoadPanelComponent.prototype, "showPane", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoLoadPanelComponent.prototype, "text", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoLoadPanelComponent.prototype, "width", null);
    DxoLoadPanelComponent = __decorate([
        Component({
            selector: 'dxo-load-panel',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoLoadPanelComponent);
    return DxoLoadPanelComponent;
}(NestedOption));
var DxoLoadPanelModule = /** @class */ (function () {
    function DxoLoadPanelModule() {
    }
    DxoLoadPanelModule = __decorate([
        NgModule({
            declarations: [
                DxoLoadPanelComponent
            ],
            exports: [
                DxoLoadPanelComponent
            ],
        })
    ], DxoLoadPanelModule);
    return DxoLoadPanelModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoLoadingIndicatorComponent = /** @class */ (function (_super) {
    __extends(DxoLoadingIndicatorComponent, _super);
    function DxoLoadingIndicatorComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        _this._createEventEmitters([
            { emit: 'showChange' }
        ]);
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoLoadingIndicatorComponent.prototype, "backgroundColor", {
        get: function () {
            return this._getOption('backgroundColor');
        },
        set: function (value) {
            this._setOption('backgroundColor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLoadingIndicatorComponent.prototype, "font", {
        get: function () {
            return this._getOption('font');
        },
        set: function (value) {
            this._setOption('font', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLoadingIndicatorComponent.prototype, "show", {
        get: function () {
            return this._getOption('show');
        },
        set: function (value) {
            this._setOption('show', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLoadingIndicatorComponent.prototype, "text", {
        get: function () {
            return this._getOption('text');
        },
        set: function (value) {
            this._setOption('text', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLoadingIndicatorComponent.prototype, "enabled", {
        get: function () {
            return this._getOption('enabled');
        },
        set: function (value) {
            this._setOption('enabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLoadingIndicatorComponent.prototype, "_optionPath", {
        get: function () {
            return 'loadingIndicator';
        },
        enumerable: true,
        configurable: true
    });
    DxoLoadingIndicatorComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoLoadingIndicatorComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoLoadingIndicatorComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoLoadingIndicatorComponent.prototype, "backgroundColor", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLoadingIndicatorComponent.prototype, "font", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoLoadingIndicatorComponent.prototype, "show", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoLoadingIndicatorComponent.prototype, "text", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoLoadingIndicatorComponent.prototype, "enabled", null);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxoLoadingIndicatorComponent.prototype, "showChange", void 0);
    DxoLoadingIndicatorComponent = __decorate([
        Component({
            selector: 'dxo-loading-indicator',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoLoadingIndicatorComponent);
    return DxoLoadingIndicatorComponent;
}(NestedOption));
var DxoLoadingIndicatorModule = /** @class */ (function () {
    function DxoLoadingIndicatorModule() {
    }
    DxoLoadingIndicatorModule = __decorate([
        NgModule({
            declarations: [
                DxoLoadingIndicatorComponent
            ],
            exports: [
                DxoLoadingIndicatorComponent
            ],
        })
    ], DxoLoadingIndicatorModule);
    return DxoLoadingIndicatorModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoLookupComponent = /** @class */ (function (_super) {
    __extends(DxoLookupComponent, _super);
    function DxoLookupComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoLookupComponent.prototype, "allowClearing", {
        get: function () {
            return this._getOption('allowClearing');
        },
        set: function (value) {
            this._setOption('allowClearing', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLookupComponent.prototype, "dataSource", {
        get: function () {
            return this._getOption('dataSource');
        },
        set: function (value) {
            this._setOption('dataSource', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLookupComponent.prototype, "displayExpr", {
        get: function () {
            return this._getOption('displayExpr');
        },
        set: function (value) {
            this._setOption('displayExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLookupComponent.prototype, "valueExpr", {
        get: function () {
            return this._getOption('valueExpr');
        },
        set: function (value) {
            this._setOption('valueExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLookupComponent.prototype, "_optionPath", {
        get: function () {
            return 'lookup';
        },
        enumerable: true,
        configurable: true
    });
    DxoLookupComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoLookupComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoLookupComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoLookupComponent.prototype, "allowClearing", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLookupComponent.prototype, "dataSource", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLookupComponent.prototype, "displayExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLookupComponent.prototype, "valueExpr", null);
    DxoLookupComponent = __decorate([
        Component({
            selector: 'dxo-lookup',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoLookupComponent);
    return DxoLookupComponent;
}(NestedOption));
var DxoLookupModule = /** @class */ (function () {
    function DxoLookupModule() {
    }
    DxoLookupModule = __decorate([
        NgModule({
            declarations: [
                DxoLookupComponent
            ],
            exports: [
                DxoLookupComponent
            ],
        })
    ], DxoLookupModule);
    return DxoLookupModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoMainToolbarComponent = /** @class */ (function (_super) {
    __extends(DxoMainToolbarComponent, _super);
    function DxoMainToolbarComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoMainToolbarComponent.prototype, "commands", {
        get: function () {
            return this._getOption('commands');
        },
        set: function (value) {
            this._setOption('commands', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMainToolbarComponent.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMainToolbarComponent.prototype, "_optionPath", {
        get: function () {
            return 'mainToolbar';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMainToolbarComponent.prototype, "commandsChildren", {
        get: function () {
            return this._getOption('commands');
        },
        set: function (value) {
            this.setChildren('commands', value);
        },
        enumerable: true,
        configurable: true
    });
    DxoMainToolbarComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoMainToolbarComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoMainToolbarComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxoMainToolbarComponent.prototype, "commands", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoMainToolbarComponent.prototype, "visible", null);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiCommandComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxoMainToolbarComponent.prototype, "commandsChildren", null);
    DxoMainToolbarComponent = __decorate([
        Component({
            selector: 'dxo-main-toolbar',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoMainToolbarComponent);
    return DxoMainToolbarComponent;
}(NestedOption));
var DxoMainToolbarModule = /** @class */ (function () {
    function DxoMainToolbarModule() {
    }
    DxoMainToolbarModule = __decorate([
        NgModule({
            declarations: [
                DxoMainToolbarComponent
            ],
            exports: [
                DxoMainToolbarComponent
            ],
        })
    ], DxoMainToolbarModule);
    return DxoMainToolbarModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoMarginComponent = /** @class */ (function (_super) {
    __extends(DxoMarginComponent, _super);
    function DxoMarginComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoMarginComponent.prototype, "bottom", {
        get: function () {
            return this._getOption('bottom');
        },
        set: function (value) {
            this._setOption('bottom', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMarginComponent.prototype, "left", {
        get: function () {
            return this._getOption('left');
        },
        set: function (value) {
            this._setOption('left', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMarginComponent.prototype, "right", {
        get: function () {
            return this._getOption('right');
        },
        set: function (value) {
            this._setOption('right', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMarginComponent.prototype, "top", {
        get: function () {
            return this._getOption('top');
        },
        set: function (value) {
            this._setOption('top', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMarginComponent.prototype, "_optionPath", {
        get: function () {
            return 'margin';
        },
        enumerable: true,
        configurable: true
    });
    DxoMarginComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoMarginComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoMarginComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMarginComponent.prototype, "bottom", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMarginComponent.prototype, "left", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMarginComponent.prototype, "right", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMarginComponent.prototype, "top", null);
    DxoMarginComponent = __decorate([
        Component({
            selector: 'dxo-margin',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoMarginComponent);
    return DxoMarginComponent;
}(NestedOption));
var DxoMarginModule = /** @class */ (function () {
    function DxoMarginModule() {
    }
    DxoMarginModule = __decorate([
        NgModule({
            declarations: [
                DxoMarginComponent
            ],
            exports: [
                DxoMarginComponent
            ],
        })
    ], DxoMarginModule);
    return DxoMarginModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiMarkerComponent = /** @class */ (function (_super) {
    __extends(DxiMarkerComponent, _super);
    function DxiMarkerComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiMarkerComponent.prototype, "iconSrc", {
        get: function () {
            return this._getOption('iconSrc');
        },
        set: function (value) {
            this._setOption('iconSrc', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiMarkerComponent.prototype, "location", {
        get: function () {
            return this._getOption('location');
        },
        set: function (value) {
            this._setOption('location', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiMarkerComponent.prototype, "onClick", {
        get: function () {
            return this._getOption('onClick');
        },
        set: function (value) {
            this._setOption('onClick', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiMarkerComponent.prototype, "tooltip", {
        get: function () {
            return this._getOption('tooltip');
        },
        set: function (value) {
            this._setOption('tooltip', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiMarkerComponent.prototype, "_optionPath", {
        get: function () {
            return 'markers';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiMarkerComponent.prototype, "locationChildren", {
        get: function () {
            return this._getOption('location');
        },
        set: function (value) {
            this.setChildren('location', value);
        },
        enumerable: true,
        configurable: true
    });
    DxiMarkerComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiMarkerComponent.prototype, "iconSrc", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiMarkerComponent.prototype, "location", null);
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxiMarkerComponent.prototype, "onClick", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiMarkerComponent.prototype, "tooltip", null);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiLocationComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxiMarkerComponent.prototype, "locationChildren", null);
    DxiMarkerComponent = __decorate([
        Component({
            selector: 'dxi-marker',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiMarkerComponent);
    return DxiMarkerComponent;
}(CollectionNestedOption));
var DxiMarkerModule = /** @class */ (function () {
    function DxiMarkerModule() {
    }
    DxiMarkerModule = __decorate([
        NgModule({
            declarations: [
                DxiMarkerComponent
            ],
            exports: [
                DxiMarkerComponent
            ],
        })
    ], DxiMarkerModule);
    return DxiMarkerModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoMarkerComponent = /** @class */ (function (_super) {
    __extends(DxoMarkerComponent, _super);
    function DxoMarkerComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoMarkerComponent.prototype, "label", {
        get: function () {
            return this._getOption('label');
        },
        set: function (value) {
            this._setOption('label', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMarkerComponent.prototype, "separatorHeight", {
        get: function () {
            return this._getOption('separatorHeight');
        },
        set: function (value) {
            this._setOption('separatorHeight', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMarkerComponent.prototype, "textLeftIndent", {
        get: function () {
            return this._getOption('textLeftIndent');
        },
        set: function (value) {
            this._setOption('textLeftIndent', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMarkerComponent.prototype, "textTopIndent", {
        get: function () {
            return this._getOption('textTopIndent');
        },
        set: function (value) {
            this._setOption('textTopIndent', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMarkerComponent.prototype, "topIndent", {
        get: function () {
            return this._getOption('topIndent');
        },
        set: function (value) {
            this._setOption('topIndent', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMarkerComponent.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMarkerComponent.prototype, "_optionPath", {
        get: function () {
            return 'marker';
        },
        enumerable: true,
        configurable: true
    });
    DxoMarkerComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoMarkerComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoMarkerComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoMarkerComponent.prototype, "label", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMarkerComponent.prototype, "separatorHeight", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMarkerComponent.prototype, "textLeftIndent", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMarkerComponent.prototype, "textTopIndent", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMarkerComponent.prototype, "topIndent", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoMarkerComponent.prototype, "visible", null);
    DxoMarkerComponent = __decorate([
        Component({
            selector: 'dxo-marker',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoMarkerComponent);
    return DxoMarkerComponent;
}(NestedOption));
var DxoMarkerModule = /** @class */ (function () {
    function DxoMarkerModule() {
    }
    DxoMarkerModule = __decorate([
        NgModule({
            declarations: [
                DxoMarkerComponent
            ],
            exports: [
                DxoMarkerComponent
            ],
        })
    ], DxoMarkerModule);
    return DxoMarkerModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoMasterDetailComponent = /** @class */ (function (_super) {
    __extends(DxoMasterDetailComponent, _super);
    function DxoMasterDetailComponent(parentOptionHost, optionHost, renderer, document, templateHost, element) {
        var _this = _super.call(this) || this;
        _this.renderer = renderer;
        _this.document = document;
        _this.element = element;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        templateHost.setHost(_this);
        return _this;
    }
    Object.defineProperty(DxoMasterDetailComponent.prototype, "autoExpandAll", {
        get: function () {
            return this._getOption('autoExpandAll');
        },
        set: function (value) {
            this._setOption('autoExpandAll', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMasterDetailComponent.prototype, "enabled", {
        get: function () {
            return this._getOption('enabled');
        },
        set: function (value) {
            this._setOption('enabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMasterDetailComponent.prototype, "template", {
        get: function () {
            return this._getOption('template');
        },
        set: function (value) {
            this._setOption('template', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMasterDetailComponent.prototype, "_optionPath", {
        get: function () {
            return 'masterDetail';
        },
        enumerable: true,
        configurable: true
    });
    DxoMasterDetailComponent.prototype.setTemplate = function (template) {
        this.template = template;
    };
    DxoMasterDetailComponent.prototype.ngAfterViewInit = function () {
        extractTemplate(this, this.element, this.renderer, this.document);
    };
    DxoMasterDetailComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoMasterDetailComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoMasterDetailComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] },
        { type: Renderer2 },
        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },
        { type: DxTemplateHost, decorators: [{ type: Host }] },
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoMasterDetailComponent.prototype, "autoExpandAll", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoMasterDetailComponent.prototype, "enabled", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoMasterDetailComponent.prototype, "template", null);
    DxoMasterDetailComponent = __decorate([
        Component({
            selector: 'dxo-master-detail',
            template: '<ng-content></ng-content>',
            providers: [NestedOptionHost, DxTemplateHost],
            styles: [':host { display: block; }']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __param(3, Inject(DOCUMENT)),
        __param(4, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost,
            Renderer2, Object, DxTemplateHost,
            ElementRef])
    ], DxoMasterDetailComponent);
    return DxoMasterDetailComponent;
}(NestedOption));
var DxoMasterDetailModule = /** @class */ (function () {
    function DxoMasterDetailModule() {
    }
    DxoMasterDetailModule = __decorate([
        NgModule({
            declarations: [
                DxoMasterDetailComponent
            ],
            exports: [
                DxoMasterDetailComponent
            ],
        })
    ], DxoMasterDetailModule);
    return DxoMasterDetailModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoMaxRangeComponent = /** @class */ (function (_super) {
    __extends(DxoMaxRangeComponent, _super);
    function DxoMaxRangeComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoMaxRangeComponent.prototype, "days", {
        get: function () {
            return this._getOption('days');
        },
        set: function (value) {
            this._setOption('days', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMaxRangeComponent.prototype, "hours", {
        get: function () {
            return this._getOption('hours');
        },
        set: function (value) {
            this._setOption('hours', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMaxRangeComponent.prototype, "milliseconds", {
        get: function () {
            return this._getOption('milliseconds');
        },
        set: function (value) {
            this._setOption('milliseconds', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMaxRangeComponent.prototype, "minutes", {
        get: function () {
            return this._getOption('minutes');
        },
        set: function (value) {
            this._setOption('minutes', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMaxRangeComponent.prototype, "months", {
        get: function () {
            return this._getOption('months');
        },
        set: function (value) {
            this._setOption('months', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMaxRangeComponent.prototype, "quarters", {
        get: function () {
            return this._getOption('quarters');
        },
        set: function (value) {
            this._setOption('quarters', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMaxRangeComponent.prototype, "seconds", {
        get: function () {
            return this._getOption('seconds');
        },
        set: function (value) {
            this._setOption('seconds', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMaxRangeComponent.prototype, "weeks", {
        get: function () {
            return this._getOption('weeks');
        },
        set: function (value) {
            this._setOption('weeks', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMaxRangeComponent.prototype, "years", {
        get: function () {
            return this._getOption('years');
        },
        set: function (value) {
            this._setOption('years', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMaxRangeComponent.prototype, "_optionPath", {
        get: function () {
            return 'maxRange';
        },
        enumerable: true,
        configurable: true
    });
    DxoMaxRangeComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoMaxRangeComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoMaxRangeComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMaxRangeComponent.prototype, "days", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMaxRangeComponent.prototype, "hours", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMaxRangeComponent.prototype, "milliseconds", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMaxRangeComponent.prototype, "minutes", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMaxRangeComponent.prototype, "months", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMaxRangeComponent.prototype, "quarters", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMaxRangeComponent.prototype, "seconds", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMaxRangeComponent.prototype, "weeks", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMaxRangeComponent.prototype, "years", null);
    DxoMaxRangeComponent = __decorate([
        Component({
            selector: 'dxo-max-range',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoMaxRangeComponent);
    return DxoMaxRangeComponent;
}(NestedOption));
var DxoMaxRangeModule = /** @class */ (function () {
    function DxoMaxRangeModule() {
    }
    DxoMaxRangeModule = __decorate([
        NgModule({
            declarations: [
                DxoMaxRangeComponent
            ],
            exports: [
                DxoMaxRangeComponent
            ],
        })
    ], DxoMaxRangeModule);
    return DxoMaxRangeModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoHtmlEditorMediaResizing = /** @class */ (function (_super) {
    __extends(DxoHtmlEditorMediaResizing, _super);
    function DxoHtmlEditorMediaResizing() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DxoHtmlEditorMediaResizing.prototype, "allowedTargets", {
        get: function () {
            return this._getOption('allowedTargets');
        },
        set: function (value) {
            this._setOption('allowedTargets', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHtmlEditorMediaResizing.prototype, "enabled", {
        get: function () {
            return this._getOption('enabled');
        },
        set: function (value) {
            this._setOption('enabled', value);
        },
        enumerable: true,
        configurable: true
    });
    return DxoHtmlEditorMediaResizing;
}(NestedOption));

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoMediaResizingComponent = /** @class */ (function (_super) {
    __extends(DxoMediaResizingComponent, _super);
    function DxoMediaResizingComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoMediaResizingComponent.prototype, "_optionPath", {
        get: function () {
            return 'mediaResizing';
        },
        enumerable: true,
        configurable: true
    });
    DxoMediaResizingComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoMediaResizingComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoMediaResizingComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoMediaResizingComponent = __decorate([
        Component({
            selector: 'dxo-media-resizing',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'allowedTargets',
                'enabled'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoMediaResizingComponent);
    return DxoMediaResizingComponent;
}(DxoHtmlEditorMediaResizing));
var DxoMediaResizingModule = /** @class */ (function () {
    function DxoMediaResizingModule() {
    }
    DxoMediaResizingModule = __decorate([
        NgModule({
            declarations: [
                DxoMediaResizingComponent
            ],
            exports: [
                DxoMediaResizingComponent
            ],
        })
    ], DxoMediaResizingModule);
    return DxoMediaResizingModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiHtmlEditorMention = /** @class */ (function (_super) {
    __extends(DxiHtmlEditorMention, _super);
    function DxiHtmlEditorMention() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DxiHtmlEditorMention.prototype, "dataSource", {
        get: function () {
            return this._getOption('dataSource');
        },
        set: function (value) {
            this._setOption('dataSource', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiHtmlEditorMention.prototype, "displayExpr", {
        get: function () {
            return this._getOption('displayExpr');
        },
        set: function (value) {
            this._setOption('displayExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiHtmlEditorMention.prototype, "itemTemplate", {
        get: function () {
            return this._getOption('itemTemplate');
        },
        set: function (value) {
            this._setOption('itemTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiHtmlEditorMention.prototype, "marker", {
        get: function () {
            return this._getOption('marker');
        },
        set: function (value) {
            this._setOption('marker', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiHtmlEditorMention.prototype, "minSearchLength", {
        get: function () {
            return this._getOption('minSearchLength');
        },
        set: function (value) {
            this._setOption('minSearchLength', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiHtmlEditorMention.prototype, "searchExpr", {
        get: function () {
            return this._getOption('searchExpr');
        },
        set: function (value) {
            this._setOption('searchExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiHtmlEditorMention.prototype, "searchTimeout", {
        get: function () {
            return this._getOption('searchTimeout');
        },
        set: function (value) {
            this._setOption('searchTimeout', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiHtmlEditorMention.prototype, "template", {
        get: function () {
            return this._getOption('template');
        },
        set: function (value) {
            this._setOption('template', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiHtmlEditorMention.prototype, "valueExpr", {
        get: function () {
            return this._getOption('valueExpr');
        },
        set: function (value) {
            this._setOption('valueExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    return DxiHtmlEditorMention;
}(CollectionNestedOption));

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiMentionComponent = /** @class */ (function (_super) {
    __extends(DxiMentionComponent, _super);
    function DxiMentionComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiMentionComponent.prototype, "_optionPath", {
        get: function () {
            return 'mentions';
        },
        enumerable: true,
        configurable: true
    });
    DxiMentionComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxiMentionComponent = __decorate([
        Component({
            selector: 'dxi-mention',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'dataSource',
                'displayExpr',
                'itemTemplate',
                'marker',
                'minSearchLength',
                'searchExpr',
                'searchTimeout',
                'template',
                'valueExpr'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiMentionComponent);
    return DxiMentionComponent;
}(DxiHtmlEditorMention));
var DxiMentionModule = /** @class */ (function () {
    function DxiMentionModule() {
    }
    DxiMentionModule = __decorate([
        NgModule({
            declarations: [
                DxiMentionComponent
            ],
            exports: [
                DxiMentionComponent
            ],
        })
    ], DxiMentionModule);
    return DxiMentionModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiMenuItemComponent = /** @class */ (function (_super) {
    __extends(DxiMenuItemComponent, _super);
    function DxiMenuItemComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiMenuItemComponent.prototype, "action", {
        get: function () {
            return this._getOption('action');
        },
        set: function (value) {
            this._setOption('action', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiMenuItemComponent.prototype, "text", {
        get: function () {
            return this._getOption('text');
        },
        set: function (value) {
            this._setOption('text', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiMenuItemComponent.prototype, "_optionPath", {
        get: function () {
            return 'menuItems';
        },
        enumerable: true,
        configurable: true
    });
    DxiMenuItemComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxiMenuItemComponent.prototype, "action", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiMenuItemComponent.prototype, "text", null);
    DxiMenuItemComponent = __decorate([
        Component({
            selector: 'dxi-menu-item',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiMenuItemComponent);
    return DxiMenuItemComponent;
}(CollectionNestedOption));
var DxiMenuItemModule = /** @class */ (function () {
    function DxiMenuItemModule() {
    }
    DxiMenuItemModule = __decorate([
        NgModule({
            declarations: [
                DxiMenuItemComponent
            ],
            exports: [
                DxiMenuItemComponent
            ],
        })
    ], DxiMenuItemModule);
    return DxiMenuItemModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoMinRangeComponent = /** @class */ (function (_super) {
    __extends(DxoMinRangeComponent, _super);
    function DxoMinRangeComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoMinRangeComponent.prototype, "days", {
        get: function () {
            return this._getOption('days');
        },
        set: function (value) {
            this._setOption('days', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMinRangeComponent.prototype, "hours", {
        get: function () {
            return this._getOption('hours');
        },
        set: function (value) {
            this._setOption('hours', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMinRangeComponent.prototype, "milliseconds", {
        get: function () {
            return this._getOption('milliseconds');
        },
        set: function (value) {
            this._setOption('milliseconds', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMinRangeComponent.prototype, "minutes", {
        get: function () {
            return this._getOption('minutes');
        },
        set: function (value) {
            this._setOption('minutes', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMinRangeComponent.prototype, "months", {
        get: function () {
            return this._getOption('months');
        },
        set: function (value) {
            this._setOption('months', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMinRangeComponent.prototype, "quarters", {
        get: function () {
            return this._getOption('quarters');
        },
        set: function (value) {
            this._setOption('quarters', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMinRangeComponent.prototype, "seconds", {
        get: function () {
            return this._getOption('seconds');
        },
        set: function (value) {
            this._setOption('seconds', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMinRangeComponent.prototype, "weeks", {
        get: function () {
            return this._getOption('weeks');
        },
        set: function (value) {
            this._setOption('weeks', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMinRangeComponent.prototype, "years", {
        get: function () {
            return this._getOption('years');
        },
        set: function (value) {
            this._setOption('years', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMinRangeComponent.prototype, "_optionPath", {
        get: function () {
            return 'minRange';
        },
        enumerable: true,
        configurable: true
    });
    DxoMinRangeComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoMinRangeComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoMinRangeComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMinRangeComponent.prototype, "days", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMinRangeComponent.prototype, "hours", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMinRangeComponent.prototype, "milliseconds", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMinRangeComponent.prototype, "minutes", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMinRangeComponent.prototype, "months", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMinRangeComponent.prototype, "quarters", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMinRangeComponent.prototype, "seconds", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMinRangeComponent.prototype, "weeks", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMinRangeComponent.prototype, "years", null);
    DxoMinRangeComponent = __decorate([
        Component({
            selector: 'dxo-min-range',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoMinRangeComponent);
    return DxoMinRangeComponent;
}(NestedOption));
var DxoMinRangeModule = /** @class */ (function () {
    function DxoMinRangeModule() {
    }
    DxoMinRangeModule = __decorate([
        NgModule({
            declarations: [
                DxoMinRangeComponent
            ],
            exports: [
                DxoMinRangeComponent
            ],
        })
    ], DxoMinRangeModule);
    return DxoMinRangeModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoMinVisualRangeLengthComponent = /** @class */ (function (_super) {
    __extends(DxoMinVisualRangeLengthComponent, _super);
    function DxoMinVisualRangeLengthComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoMinVisualRangeLengthComponent.prototype, "days", {
        get: function () {
            return this._getOption('days');
        },
        set: function (value) {
            this._setOption('days', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMinVisualRangeLengthComponent.prototype, "hours", {
        get: function () {
            return this._getOption('hours');
        },
        set: function (value) {
            this._setOption('hours', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMinVisualRangeLengthComponent.prototype, "milliseconds", {
        get: function () {
            return this._getOption('milliseconds');
        },
        set: function (value) {
            this._setOption('milliseconds', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMinVisualRangeLengthComponent.prototype, "minutes", {
        get: function () {
            return this._getOption('minutes');
        },
        set: function (value) {
            this._setOption('minutes', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMinVisualRangeLengthComponent.prototype, "months", {
        get: function () {
            return this._getOption('months');
        },
        set: function (value) {
            this._setOption('months', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMinVisualRangeLengthComponent.prototype, "quarters", {
        get: function () {
            return this._getOption('quarters');
        },
        set: function (value) {
            this._setOption('quarters', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMinVisualRangeLengthComponent.prototype, "seconds", {
        get: function () {
            return this._getOption('seconds');
        },
        set: function (value) {
            this._setOption('seconds', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMinVisualRangeLengthComponent.prototype, "weeks", {
        get: function () {
            return this._getOption('weeks');
        },
        set: function (value) {
            this._setOption('weeks', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMinVisualRangeLengthComponent.prototype, "years", {
        get: function () {
            return this._getOption('years');
        },
        set: function (value) {
            this._setOption('years', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMinVisualRangeLengthComponent.prototype, "_optionPath", {
        get: function () {
            return 'minVisualRangeLength';
        },
        enumerable: true,
        configurable: true
    });
    DxoMinVisualRangeLengthComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoMinVisualRangeLengthComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoMinVisualRangeLengthComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMinVisualRangeLengthComponent.prototype, "days", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMinVisualRangeLengthComponent.prototype, "hours", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMinVisualRangeLengthComponent.prototype, "milliseconds", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMinVisualRangeLengthComponent.prototype, "minutes", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMinVisualRangeLengthComponent.prototype, "months", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMinVisualRangeLengthComponent.prototype, "quarters", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMinVisualRangeLengthComponent.prototype, "seconds", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMinVisualRangeLengthComponent.prototype, "weeks", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMinVisualRangeLengthComponent.prototype, "years", null);
    DxoMinVisualRangeLengthComponent = __decorate([
        Component({
            selector: 'dxo-min-visual-range-length',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoMinVisualRangeLengthComponent);
    return DxoMinVisualRangeLengthComponent;
}(NestedOption));
var DxoMinVisualRangeLengthModule = /** @class */ (function () {
    function DxoMinVisualRangeLengthModule() {
    }
    DxoMinVisualRangeLengthModule = __decorate([
        NgModule({
            declarations: [
                DxoMinVisualRangeLengthComponent
            ],
            exports: [
                DxoMinVisualRangeLengthComponent
            ],
        })
    ], DxoMinVisualRangeLengthModule);
    return DxoMinVisualRangeLengthModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoMinorGridComponent = /** @class */ (function (_super) {
    __extends(DxoMinorGridComponent, _super);
    function DxoMinorGridComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoMinorGridComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMinorGridComponent.prototype, "opacity", {
        get: function () {
            return this._getOption('opacity');
        },
        set: function (value) {
            this._setOption('opacity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMinorGridComponent.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMinorGridComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMinorGridComponent.prototype, "_optionPath", {
        get: function () {
            return 'minorGrid';
        },
        enumerable: true,
        configurable: true
    });
    DxoMinorGridComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoMinorGridComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoMinorGridComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoMinorGridComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMinorGridComponent.prototype, "opacity", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoMinorGridComponent.prototype, "visible", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMinorGridComponent.prototype, "width", null);
    DxoMinorGridComponent = __decorate([
        Component({
            selector: 'dxo-minor-grid',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoMinorGridComponent);
    return DxoMinorGridComponent;
}(NestedOption));
var DxoMinorGridModule = /** @class */ (function () {
    function DxoMinorGridModule() {
    }
    DxoMinorGridModule = __decorate([
        NgModule({
            declarations: [
                DxoMinorGridComponent
            ],
            exports: [
                DxoMinorGridComponent
            ],
        })
    ], DxoMinorGridModule);
    return DxoMinorGridModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoMinorTickIntervalComponent = /** @class */ (function (_super) {
    __extends(DxoMinorTickIntervalComponent, _super);
    function DxoMinorTickIntervalComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoMinorTickIntervalComponent.prototype, "days", {
        get: function () {
            return this._getOption('days');
        },
        set: function (value) {
            this._setOption('days', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMinorTickIntervalComponent.prototype, "hours", {
        get: function () {
            return this._getOption('hours');
        },
        set: function (value) {
            this._setOption('hours', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMinorTickIntervalComponent.prototype, "milliseconds", {
        get: function () {
            return this._getOption('milliseconds');
        },
        set: function (value) {
            this._setOption('milliseconds', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMinorTickIntervalComponent.prototype, "minutes", {
        get: function () {
            return this._getOption('minutes');
        },
        set: function (value) {
            this._setOption('minutes', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMinorTickIntervalComponent.prototype, "months", {
        get: function () {
            return this._getOption('months');
        },
        set: function (value) {
            this._setOption('months', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMinorTickIntervalComponent.prototype, "quarters", {
        get: function () {
            return this._getOption('quarters');
        },
        set: function (value) {
            this._setOption('quarters', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMinorTickIntervalComponent.prototype, "seconds", {
        get: function () {
            return this._getOption('seconds');
        },
        set: function (value) {
            this._setOption('seconds', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMinorTickIntervalComponent.prototype, "weeks", {
        get: function () {
            return this._getOption('weeks');
        },
        set: function (value) {
            this._setOption('weeks', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMinorTickIntervalComponent.prototype, "years", {
        get: function () {
            return this._getOption('years');
        },
        set: function (value) {
            this._setOption('years', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMinorTickIntervalComponent.prototype, "_optionPath", {
        get: function () {
            return 'minorTickInterval';
        },
        enumerable: true,
        configurable: true
    });
    DxoMinorTickIntervalComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoMinorTickIntervalComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoMinorTickIntervalComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMinorTickIntervalComponent.prototype, "days", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMinorTickIntervalComponent.prototype, "hours", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMinorTickIntervalComponent.prototype, "milliseconds", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMinorTickIntervalComponent.prototype, "minutes", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMinorTickIntervalComponent.prototype, "months", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMinorTickIntervalComponent.prototype, "quarters", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMinorTickIntervalComponent.prototype, "seconds", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMinorTickIntervalComponent.prototype, "weeks", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMinorTickIntervalComponent.prototype, "years", null);
    DxoMinorTickIntervalComponent = __decorate([
        Component({
            selector: 'dxo-minor-tick-interval',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoMinorTickIntervalComponent);
    return DxoMinorTickIntervalComponent;
}(NestedOption));
var DxoMinorTickIntervalModule = /** @class */ (function () {
    function DxoMinorTickIntervalModule() {
    }
    DxoMinorTickIntervalModule = __decorate([
        NgModule({
            declarations: [
                DxoMinorTickIntervalComponent
            ],
            exports: [
                DxoMinorTickIntervalComponent
            ],
        })
    ], DxoMinorTickIntervalModule);
    return DxoMinorTickIntervalModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoMinorTickComponent = /** @class */ (function (_super) {
    __extends(DxoMinorTickComponent, _super);
    function DxoMinorTickComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoMinorTickComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMinorTickComponent.prototype, "length", {
        get: function () {
            return this._getOption('length');
        },
        set: function (value) {
            this._setOption('length', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMinorTickComponent.prototype, "opacity", {
        get: function () {
            return this._getOption('opacity');
        },
        set: function (value) {
            this._setOption('opacity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMinorTickComponent.prototype, "shift", {
        get: function () {
            return this._getOption('shift');
        },
        set: function (value) {
            this._setOption('shift', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMinorTickComponent.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMinorTickComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMinorTickComponent.prototype, "_optionPath", {
        get: function () {
            return 'minorTick';
        },
        enumerable: true,
        configurable: true
    });
    DxoMinorTickComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoMinorTickComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoMinorTickComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoMinorTickComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMinorTickComponent.prototype, "length", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMinorTickComponent.prototype, "opacity", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMinorTickComponent.prototype, "shift", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoMinorTickComponent.prototype, "visible", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoMinorTickComponent.prototype, "width", null);
    DxoMinorTickComponent = __decorate([
        Component({
            selector: 'dxo-minor-tick',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoMinorTickComponent);
    return DxoMinorTickComponent;
}(NestedOption));
var DxoMinorTickModule = /** @class */ (function () {
    function DxoMinorTickModule() {
    }
    DxoMinorTickModule = __decorate([
        NgModule({
            declarations: [
                DxoMinorTickComponent
            ],
            exports: [
                DxoMinorTickComponent
            ],
        })
    ], DxoMinorTickModule);
    return DxoMinorTickModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoMyComponent = /** @class */ (function (_super) {
    __extends(DxoMyComponent, _super);
    function DxoMyComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoMyComponent.prototype, "x", {
        get: function () {
            return this._getOption('x');
        },
        set: function (value) {
            this._setOption('x', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMyComponent.prototype, "y", {
        get: function () {
            return this._getOption('y');
        },
        set: function (value) {
            this._setOption('y', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoMyComponent.prototype, "_optionPath", {
        get: function () {
            return 'my';
        },
        enumerable: true,
        configurable: true
    });
    DxoMyComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoMyComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoMyComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoMyComponent.prototype, "x", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoMyComponent.prototype, "y", null);
    DxoMyComponent = __decorate([
        Component({
            selector: 'dxo-my',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoMyComponent);
    return DxoMyComponent;
}(NestedOption));
var DxoMyModule = /** @class */ (function () {
    function DxoMyModule() {
    }
    DxoMyModule = __decorate([
        NgModule({
            declarations: [
                DxoMyComponent
            ],
            exports: [
                DxoMyComponent
            ],
        })
    ], DxoMyModule);
    return DxoMyModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoNodeComponent = /** @class */ (function (_super) {
    __extends(DxoNodeComponent, _super);
    function DxoNodeComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoNodeComponent.prototype, "border", {
        get: function () {
            return this._getOption('border');
        },
        set: function (value) {
            this._setOption('border', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoNodeComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoNodeComponent.prototype, "hoverStyle", {
        get: function () {
            return this._getOption('hoverStyle');
        },
        set: function (value) {
            this._setOption('hoverStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoNodeComponent.prototype, "opacity", {
        get: function () {
            return this._getOption('opacity');
        },
        set: function (value) {
            this._setOption('opacity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoNodeComponent.prototype, "padding", {
        get: function () {
            return this._getOption('padding');
        },
        set: function (value) {
            this._setOption('padding', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoNodeComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoNodeComponent.prototype, "_optionPath", {
        get: function () {
            return 'node';
        },
        enumerable: true,
        configurable: true
    });
    DxoNodeComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoNodeComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoNodeComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoNodeComponent.prototype, "border", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoNodeComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoNodeComponent.prototype, "hoverStyle", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoNodeComponent.prototype, "opacity", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoNodeComponent.prototype, "padding", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoNodeComponent.prototype, "width", null);
    DxoNodeComponent = __decorate([
        Component({
            selector: 'dxo-node',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoNodeComponent);
    return DxoNodeComponent;
}(NestedOption));
var DxoNodeModule = /** @class */ (function () {
    function DxoNodeModule() {
    }
    DxoNodeModule = __decorate([
        NgModule({
            declarations: [
                DxoNodeComponent
            ],
            exports: [
                DxoNodeComponent
            ],
        })
    ], DxoNodeModule);
    return DxoNodeModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoNodesComponent = /** @class */ (function (_super) {
    __extends(DxoNodesComponent, _super);
    function DxoNodesComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoNodesComponent.prototype, "autoLayout", {
        get: function () {
            return this._getOption('autoLayout');
        },
        set: function (value) {
            this._setOption('autoLayout', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoNodesComponent.prototype, "containerChildrenExpr", {
        get: function () {
            return this._getOption('containerChildrenExpr');
        },
        set: function (value) {
            this._setOption('containerChildrenExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoNodesComponent.prototype, "containerKeyExpr", {
        get: function () {
            return this._getOption('containerKeyExpr');
        },
        set: function (value) {
            this._setOption('containerKeyExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoNodesComponent.prototype, "dataSource", {
        get: function () {
            return this._getOption('dataSource');
        },
        set: function (value) {
            this._setOption('dataSource', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoNodesComponent.prototype, "heightExpr", {
        get: function () {
            return this._getOption('heightExpr');
        },
        set: function (value) {
            this._setOption('heightExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoNodesComponent.prototype, "imageUrlExpr", {
        get: function () {
            return this._getOption('imageUrlExpr');
        },
        set: function (value) {
            this._setOption('imageUrlExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoNodesComponent.prototype, "itemsExpr", {
        get: function () {
            return this._getOption('itemsExpr');
        },
        set: function (value) {
            this._setOption('itemsExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoNodesComponent.prototype, "keyExpr", {
        get: function () {
            return this._getOption('keyExpr');
        },
        set: function (value) {
            this._setOption('keyExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoNodesComponent.prototype, "leftExpr", {
        get: function () {
            return this._getOption('leftExpr');
        },
        set: function (value) {
            this._setOption('leftExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoNodesComponent.prototype, "lockedExpr", {
        get: function () {
            return this._getOption('lockedExpr');
        },
        set: function (value) {
            this._setOption('lockedExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoNodesComponent.prototype, "parentKeyExpr", {
        get: function () {
            return this._getOption('parentKeyExpr');
        },
        set: function (value) {
            this._setOption('parentKeyExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoNodesComponent.prototype, "styleExpr", {
        get: function () {
            return this._getOption('styleExpr');
        },
        set: function (value) {
            this._setOption('styleExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoNodesComponent.prototype, "textExpr", {
        get: function () {
            return this._getOption('textExpr');
        },
        set: function (value) {
            this._setOption('textExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoNodesComponent.prototype, "textStyleExpr", {
        get: function () {
            return this._getOption('textStyleExpr');
        },
        set: function (value) {
            this._setOption('textStyleExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoNodesComponent.prototype, "topExpr", {
        get: function () {
            return this._getOption('topExpr');
        },
        set: function (value) {
            this._setOption('topExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoNodesComponent.prototype, "typeExpr", {
        get: function () {
            return this._getOption('typeExpr');
        },
        set: function (value) {
            this._setOption('typeExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoNodesComponent.prototype, "widthExpr", {
        get: function () {
            return this._getOption('widthExpr');
        },
        set: function (value) {
            this._setOption('widthExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoNodesComponent.prototype, "zIndexExpr", {
        get: function () {
            return this._getOption('zIndexExpr');
        },
        set: function (value) {
            this._setOption('zIndexExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoNodesComponent.prototype, "_optionPath", {
        get: function () {
            return 'nodes';
        },
        enumerable: true,
        configurable: true
    });
    DxoNodesComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoNodesComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoNodesComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoNodesComponent.prototype, "autoLayout", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoNodesComponent.prototype, "containerChildrenExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoNodesComponent.prototype, "containerKeyExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoNodesComponent.prototype, "dataSource", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoNodesComponent.prototype, "heightExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoNodesComponent.prototype, "imageUrlExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoNodesComponent.prototype, "itemsExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoNodesComponent.prototype, "keyExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoNodesComponent.prototype, "leftExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoNodesComponent.prototype, "lockedExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoNodesComponent.prototype, "parentKeyExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoNodesComponent.prototype, "styleExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoNodesComponent.prototype, "textExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoNodesComponent.prototype, "textStyleExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoNodesComponent.prototype, "topExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoNodesComponent.prototype, "typeExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoNodesComponent.prototype, "widthExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoNodesComponent.prototype, "zIndexExpr", null);
    DxoNodesComponent = __decorate([
        Component({
            selector: 'dxo-nodes',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoNodesComponent);
    return DxoNodesComponent;
}(NestedOption));
var DxoNodesModule = /** @class */ (function () {
    function DxoNodesModule() {
    }
    DxoNodesModule = __decorate([
        NgModule({
            declarations: [
                DxoNodesComponent
            ],
            exports: [
                DxoNodesComponent
            ],
        })
    ], DxoNodesModule);
    return DxoNodesModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoOffsetComponent = /** @class */ (function (_super) {
    __extends(DxoOffsetComponent, _super);
    function DxoOffsetComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoOffsetComponent.prototype, "x", {
        get: function () {
            return this._getOption('x');
        },
        set: function (value) {
            this._setOption('x', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoOffsetComponent.prototype, "y", {
        get: function () {
            return this._getOption('y');
        },
        set: function (value) {
            this._setOption('y', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoOffsetComponent.prototype, "_optionPath", {
        get: function () {
            return 'offset';
        },
        enumerable: true,
        configurable: true
    });
    DxoOffsetComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoOffsetComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoOffsetComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoOffsetComponent.prototype, "x", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoOffsetComponent.prototype, "y", null);
    DxoOffsetComponent = __decorate([
        Component({
            selector: 'dxo-offset',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoOffsetComponent);
    return DxoOffsetComponent;
}(NestedOption));
var DxoOffsetModule = /** @class */ (function () {
    function DxoOffsetModule() {
    }
    DxoOffsetModule = __decorate([
        NgModule({
            declarations: [
                DxoOffsetComponent
            ],
            exports: [
                DxoOffsetComponent
            ],
        })
    ], DxoOffsetModule);
    return DxoOffsetModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoOperationDescriptionsComponent = /** @class */ (function (_super) {
    __extends(DxoOperationDescriptionsComponent, _super);
    function DxoOperationDescriptionsComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoOperationDescriptionsComponent.prototype, "between", {
        get: function () {
            return this._getOption('between');
        },
        set: function (value) {
            this._setOption('between', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoOperationDescriptionsComponent.prototype, "contains", {
        get: function () {
            return this._getOption('contains');
        },
        set: function (value) {
            this._setOption('contains', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoOperationDescriptionsComponent.prototype, "endsWith", {
        get: function () {
            return this._getOption('endsWith');
        },
        set: function (value) {
            this._setOption('endsWith', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoOperationDescriptionsComponent.prototype, "equal", {
        get: function () {
            return this._getOption('equal');
        },
        set: function (value) {
            this._setOption('equal', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoOperationDescriptionsComponent.prototype, "greaterThan", {
        get: function () {
            return this._getOption('greaterThan');
        },
        set: function (value) {
            this._setOption('greaterThan', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoOperationDescriptionsComponent.prototype, "greaterThanOrEqual", {
        get: function () {
            return this._getOption('greaterThanOrEqual');
        },
        set: function (value) {
            this._setOption('greaterThanOrEqual', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoOperationDescriptionsComponent.prototype, "lessThan", {
        get: function () {
            return this._getOption('lessThan');
        },
        set: function (value) {
            this._setOption('lessThan', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoOperationDescriptionsComponent.prototype, "lessThanOrEqual", {
        get: function () {
            return this._getOption('lessThanOrEqual');
        },
        set: function (value) {
            this._setOption('lessThanOrEqual', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoOperationDescriptionsComponent.prototype, "notContains", {
        get: function () {
            return this._getOption('notContains');
        },
        set: function (value) {
            this._setOption('notContains', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoOperationDescriptionsComponent.prototype, "notEqual", {
        get: function () {
            return this._getOption('notEqual');
        },
        set: function (value) {
            this._setOption('notEqual', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoOperationDescriptionsComponent.prototype, "startsWith", {
        get: function () {
            return this._getOption('startsWith');
        },
        set: function (value) {
            this._setOption('startsWith', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoOperationDescriptionsComponent.prototype, "_optionPath", {
        get: function () {
            return 'operationDescriptions';
        },
        enumerable: true,
        configurable: true
    });
    DxoOperationDescriptionsComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoOperationDescriptionsComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoOperationDescriptionsComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoOperationDescriptionsComponent.prototype, "between", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoOperationDescriptionsComponent.prototype, "contains", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoOperationDescriptionsComponent.prototype, "endsWith", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoOperationDescriptionsComponent.prototype, "equal", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoOperationDescriptionsComponent.prototype, "greaterThan", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoOperationDescriptionsComponent.prototype, "greaterThanOrEqual", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoOperationDescriptionsComponent.prototype, "lessThan", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoOperationDescriptionsComponent.prototype, "lessThanOrEqual", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoOperationDescriptionsComponent.prototype, "notContains", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoOperationDescriptionsComponent.prototype, "notEqual", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoOperationDescriptionsComponent.prototype, "startsWith", null);
    DxoOperationDescriptionsComponent = __decorate([
        Component({
            selector: 'dxo-operation-descriptions',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoOperationDescriptionsComponent);
    return DxoOperationDescriptionsComponent;
}(NestedOption));
var DxoOperationDescriptionsModule = /** @class */ (function () {
    function DxoOperationDescriptionsModule() {
    }
    DxoOperationDescriptionsModule = __decorate([
        NgModule({
            declarations: [
                DxoOperationDescriptionsComponent
            ],
            exports: [
                DxoOperationDescriptionsComponent
            ],
        })
    ], DxoOperationDescriptionsModule);
    return DxoOperationDescriptionsModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoOptionsComponent = /** @class */ (function (_super) {
    __extends(DxoOptionsComponent, _super);
    function DxoOptionsComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoOptionsComponent.prototype, "_optionPath", {
        get: function () {
            return 'options';
        },
        enumerable: true,
        configurable: true
    });
    DxoOptionsComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoOptionsComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoOptionsComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoOptionsComponent = __decorate([
        Component({
            selector: 'dxo-options',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'accessKey',
                'activeStateEnabled',
                'disabled',
                'elementAttr',
                'focusStateEnabled',
                'height',
                'hint',
                'hoverStateEnabled',
                'icon',
                'onClick',
                'onContentReady',
                'onDisposing',
                'onInitialized',
                'onOptionChanged',
                'rtlEnabled',
                'stylingMode',
                'tabIndex',
                'template',
                'text',
                'type',
                'useSubmitBehavior',
                'validationGroup',
                'visible',
                'width'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoOptionsComponent);
    return DxoOptionsComponent;
}(DxoButtonOptions));
var DxoOptionsModule = /** @class */ (function () {
    function DxoOptionsModule() {
    }
    DxoOptionsModule = __decorate([
        NgModule({
            declarations: [
                DxoOptionsComponent
            ],
            exports: [
                DxoOptionsComponent
            ],
        })
    ], DxoOptionsModule);
    return DxoOptionsModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoPageSizeComponent = /** @class */ (function (_super) {
    __extends(DxoPageSizeComponent, _super);
    function DxoPageSizeComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoPageSizeComponent.prototype, "height", {
        get: function () {
            return this._getOption('height');
        },
        set: function (value) {
            this._setOption('height', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPageSizeComponent.prototype, "items", {
        get: function () {
            return this._getOption('items');
        },
        set: function (value) {
            this._setOption('items', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPageSizeComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPageSizeComponent.prototype, "_optionPath", {
        get: function () {
            return 'pageSize';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPageSizeComponent.prototype, "itemsChildren", {
        get: function () {
            return this._getOption('items');
        },
        set: function (value) {
            this.setChildren('items', value);
        },
        enumerable: true,
        configurable: true
    });
    DxoPageSizeComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoPageSizeComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoPageSizeComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoPageSizeComponent.prototype, "height", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxoPageSizeComponent.prototype, "items", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoPageSizeComponent.prototype, "width", null);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiItemComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxoPageSizeComponent.prototype, "itemsChildren", null);
    DxoPageSizeComponent = __decorate([
        Component({
            selector: 'dxo-page-size',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoPageSizeComponent);
    return DxoPageSizeComponent;
}(NestedOption));
var DxoPageSizeModule = /** @class */ (function () {
    function DxoPageSizeModule() {
    }
    DxoPageSizeModule = __decorate([
        NgModule({
            declarations: [
                DxoPageSizeComponent
            ],
            exports: [
                DxoPageSizeComponent
            ],
        })
    ], DxoPageSizeModule);
    return DxoPageSizeModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoPagerComponent = /** @class */ (function (_super) {
    __extends(DxoPagerComponent, _super);
    function DxoPagerComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoPagerComponent.prototype, "allowedPageSizes", {
        get: function () {
            return this._getOption('allowedPageSizes');
        },
        set: function (value) {
            this._setOption('allowedPageSizes', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPagerComponent.prototype, "infoText", {
        get: function () {
            return this._getOption('infoText');
        },
        set: function (value) {
            this._setOption('infoText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPagerComponent.prototype, "showInfo", {
        get: function () {
            return this._getOption('showInfo');
        },
        set: function (value) {
            this._setOption('showInfo', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPagerComponent.prototype, "showNavigationButtons", {
        get: function () {
            return this._getOption('showNavigationButtons');
        },
        set: function (value) {
            this._setOption('showNavigationButtons', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPagerComponent.prototype, "showPageSizeSelector", {
        get: function () {
            return this._getOption('showPageSizeSelector');
        },
        set: function (value) {
            this._setOption('showPageSizeSelector', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPagerComponent.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPagerComponent.prototype, "_optionPath", {
        get: function () {
            return 'pager';
        },
        enumerable: true,
        configurable: true
    });
    DxoPagerComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoPagerComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoPagerComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoPagerComponent.prototype, "allowedPageSizes", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoPagerComponent.prototype, "infoText", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoPagerComponent.prototype, "showInfo", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoPagerComponent.prototype, "showNavigationButtons", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoPagerComponent.prototype, "showPageSizeSelector", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoPagerComponent.prototype, "visible", null);
    DxoPagerComponent = __decorate([
        Component({
            selector: 'dxo-pager',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoPagerComponent);
    return DxoPagerComponent;
}(NestedOption));
var DxoPagerModule = /** @class */ (function () {
    function DxoPagerModule() {
    }
    DxoPagerModule = __decorate([
        NgModule({
            declarations: [
                DxoPagerComponent
            ],
            exports: [
                DxoPagerComponent
            ],
        })
    ], DxoPagerModule);
    return DxoPagerModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoPagingComponent = /** @class */ (function (_super) {
    __extends(DxoPagingComponent, _super);
    function DxoPagingComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        _this._createEventEmitters([
            { emit: 'pageIndexChange' },
            { emit: 'pageSizeChange' }
        ]);
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoPagingComponent.prototype, "enabled", {
        get: function () {
            return this._getOption('enabled');
        },
        set: function (value) {
            this._setOption('enabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPagingComponent.prototype, "pageIndex", {
        get: function () {
            return this._getOption('pageIndex');
        },
        set: function (value) {
            this._setOption('pageIndex', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPagingComponent.prototype, "pageSize", {
        get: function () {
            return this._getOption('pageSize');
        },
        set: function (value) {
            this._setOption('pageSize', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPagingComponent.prototype, "_optionPath", {
        get: function () {
            return 'paging';
        },
        enumerable: true,
        configurable: true
    });
    DxoPagingComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoPagingComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoPagingComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoPagingComponent.prototype, "enabled", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoPagingComponent.prototype, "pageIndex", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoPagingComponent.prototype, "pageSize", null);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxoPagingComponent.prototype, "pageIndexChange", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxoPagingComponent.prototype, "pageSizeChange", void 0);
    DxoPagingComponent = __decorate([
        Component({
            selector: 'dxo-paging',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoPagingComponent);
    return DxoPagingComponent;
}(NestedOption));
var DxoPagingModule = /** @class */ (function () {
    function DxoPagingModule() {
    }
    DxoPagingModule = __decorate([
        NgModule({
            declarations: [
                DxoPagingComponent
            ],
            exports: [
                DxoPagingComponent
            ],
        })
    ], DxoPagingModule);
    return DxoPagingModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiPaneComponent = /** @class */ (function (_super) {
    __extends(DxiPaneComponent, _super);
    function DxiPaneComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiPaneComponent.prototype, "backgroundColor", {
        get: function () {
            return this._getOption('backgroundColor');
        },
        set: function (value) {
            this._setOption('backgroundColor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiPaneComponent.prototype, "border", {
        get: function () {
            return this._getOption('border');
        },
        set: function (value) {
            this._setOption('border', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiPaneComponent.prototype, "height", {
        get: function () {
            return this._getOption('height');
        },
        set: function (value) {
            this._setOption('height', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiPaneComponent.prototype, "name", {
        get: function () {
            return this._getOption('name');
        },
        set: function (value) {
            this._setOption('name', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiPaneComponent.prototype, "_optionPath", {
        get: function () {
            return 'panes';
        },
        enumerable: true,
        configurable: true
    });
    DxiPaneComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiPaneComponent.prototype, "backgroundColor", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiPaneComponent.prototype, "border", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiPaneComponent.prototype, "height", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiPaneComponent.prototype, "name", null);
    DxiPaneComponent = __decorate([
        Component({
            selector: 'dxi-pane',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiPaneComponent);
    return DxiPaneComponent;
}(CollectionNestedOption));
var DxiPaneModule = /** @class */ (function () {
    function DxiPaneModule() {
    }
    DxiPaneModule = __decorate([
        NgModule({
            declarations: [
                DxiPaneComponent
            ],
            exports: [
                DxiPaneComponent
            ],
        })
    ], DxiPaneModule);
    return DxiPaneModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoPermissionsComponent = /** @class */ (function (_super) {
    __extends(DxoPermissionsComponent, _super);
    function DxoPermissionsComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoPermissionsComponent.prototype, "copy", {
        get: function () {
            return this._getOption('copy');
        },
        set: function (value) {
            this._setOption('copy', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPermissionsComponent.prototype, "create", {
        get: function () {
            return this._getOption('create');
        },
        set: function (value) {
            this._setOption('create', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPermissionsComponent.prototype, "delete", {
        get: function () {
            return this._getOption('delete');
        },
        set: function (value) {
            this._setOption('delete', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPermissionsComponent.prototype, "download", {
        get: function () {
            return this._getOption('download');
        },
        set: function (value) {
            this._setOption('download', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPermissionsComponent.prototype, "move", {
        get: function () {
            return this._getOption('move');
        },
        set: function (value) {
            this._setOption('move', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPermissionsComponent.prototype, "rename", {
        get: function () {
            return this._getOption('rename');
        },
        set: function (value) {
            this._setOption('rename', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPermissionsComponent.prototype, "upload", {
        get: function () {
            return this._getOption('upload');
        },
        set: function (value) {
            this._setOption('upload', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPermissionsComponent.prototype, "_optionPath", {
        get: function () {
            return 'permissions';
        },
        enumerable: true,
        configurable: true
    });
    DxoPermissionsComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoPermissionsComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoPermissionsComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoPermissionsComponent.prototype, "copy", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoPermissionsComponent.prototype, "create", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoPermissionsComponent.prototype, "delete", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoPermissionsComponent.prototype, "download", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoPermissionsComponent.prototype, "move", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoPermissionsComponent.prototype, "rename", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoPermissionsComponent.prototype, "upload", null);
    DxoPermissionsComponent = __decorate([
        Component({
            selector: 'dxo-permissions',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoPermissionsComponent);
    return DxoPermissionsComponent;
}(NestedOption));
var DxoPermissionsModule = /** @class */ (function () {
    function DxoPermissionsModule() {
    }
    DxoPermissionsModule = __decorate([
        NgModule({
            declarations: [
                DxoPermissionsComponent
            ],
            exports: [
                DxoPermissionsComponent
            ],
        })
    ], DxoPermissionsModule);
    return DxoPermissionsModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoPointComponent = /** @class */ (function (_super) {
    __extends(DxoPointComponent, _super);
    function DxoPointComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoPointComponent.prototype, "border", {
        get: function () {
            return this._getOption('border');
        },
        set: function (value) {
            this._setOption('border', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPointComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPointComponent.prototype, "hoverMode", {
        get: function () {
            return this._getOption('hoverMode');
        },
        set: function (value) {
            this._setOption('hoverMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPointComponent.prototype, "hoverStyle", {
        get: function () {
            return this._getOption('hoverStyle');
        },
        set: function (value) {
            this._setOption('hoverStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPointComponent.prototype, "image", {
        get: function () {
            return this._getOption('image');
        },
        set: function (value) {
            this._setOption('image', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPointComponent.prototype, "selectionMode", {
        get: function () {
            return this._getOption('selectionMode');
        },
        set: function (value) {
            this._setOption('selectionMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPointComponent.prototype, "selectionStyle", {
        get: function () {
            return this._getOption('selectionStyle');
        },
        set: function (value) {
            this._setOption('selectionStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPointComponent.prototype, "size", {
        get: function () {
            return this._getOption('size');
        },
        set: function (value) {
            this._setOption('size', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPointComponent.prototype, "symbol", {
        get: function () {
            return this._getOption('symbol');
        },
        set: function (value) {
            this._setOption('symbol', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPointComponent.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPointComponent.prototype, "_optionPath", {
        get: function () {
            return 'point';
        },
        enumerable: true,
        configurable: true
    });
    DxoPointComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoPointComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoPointComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoPointComponent.prototype, "border", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoPointComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoPointComponent.prototype, "hoverMode", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoPointComponent.prototype, "hoverStyle", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoPointComponent.prototype, "image", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoPointComponent.prototype, "selectionMode", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoPointComponent.prototype, "selectionStyle", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoPointComponent.prototype, "size", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoPointComponent.prototype, "symbol", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoPointComponent.prototype, "visible", null);
    DxoPointComponent = __decorate([
        Component({
            selector: 'dxo-point',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoPointComponent);
    return DxoPointComponent;
}(NestedOption));
var DxoPointModule = /** @class */ (function () {
    function DxoPointModule() {
    }
    DxoPointModule = __decorate([
        NgModule({
            declarations: [
                DxoPointComponent
            ],
            exports: [
                DxoPointComponent
            ],
        })
    ], DxoPointModule);
    return DxoPointModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoPopupComponent = /** @class */ (function (_super) {
    __extends(DxoPopupComponent, _super);
    function DxoPopupComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        _this._createEventEmitters([
            { emit: 'heightChange' },
            { emit: 'positionChange' },
            { emit: 'visibleChange' },
            { emit: 'widthChange' }
        ]);
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoPopupComponent.prototype, "_optionPath", {
        get: function () {
            return 'popup';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPopupComponent.prototype, "toolbarItemsChildren", {
        get: function () {
            return this._getOption('toolbarItems');
        },
        set: function (value) {
            this.setChildren('toolbarItems', value);
        },
        enumerable: true,
        configurable: true
    });
    DxoPopupComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoPopupComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoPopupComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxoPopupComponent.prototype, "heightChange", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxoPopupComponent.prototype, "positionChange", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxoPopupComponent.prototype, "visibleChange", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxoPopupComponent.prototype, "widthChange", void 0);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiToolbarItemComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxoPopupComponent.prototype, "toolbarItemsChildren", null);
    DxoPopupComponent = __decorate([
        Component({
            selector: 'dxo-popup',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'accessKey',
                'animation',
                'closeOnOutsideClick',
                'container',
                'contentTemplate',
                'deferRendering',
                'disabled',
                'dragEnabled',
                'elementAttr',
                'focusStateEnabled',
                'fullScreen',
                'height',
                'hint',
                'hoverStateEnabled',
                'maxHeight',
                'maxWidth',
                'minHeight',
                'minWidth',
                'onContentReady',
                'onDisposing',
                'onHidden',
                'onHiding',
                'onInitialized',
                'onOptionChanged',
                'onResize',
                'onResizeEnd',
                'onResizeStart',
                'onShowing',
                'onShown',
                'onTitleRendered',
                'position',
                'resizeEnabled',
                'rtlEnabled',
                'shading',
                'shadingColor',
                'showCloseButton',
                'showTitle',
                'tabIndex',
                'title',
                'titleTemplate',
                'toolbarItems',
                'visible',
                'width'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoPopupComponent);
    return DxoPopupComponent;
}(DxoPopupOptions));
var DxoPopupModule = /** @class */ (function () {
    function DxoPopupModule() {
    }
    DxoPopupModule = __decorate([
        NgModule({
            declarations: [
                DxoPopupComponent
            ],
            exports: [
                DxoPopupComponent
            ],
        })
    ], DxoPopupModule);
    return DxoPopupModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoPositionConfig = /** @class */ (function (_super) {
    __extends(DxoPositionConfig, _super);
    function DxoPositionConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DxoPositionConfig.prototype, "at", {
        get: function () {
            return this._getOption('at');
        },
        set: function (value) {
            this._setOption('at', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPositionConfig.prototype, "boundary", {
        get: function () {
            return this._getOption('boundary');
        },
        set: function (value) {
            this._setOption('boundary', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPositionConfig.prototype, "boundaryOffset", {
        get: function () {
            return this._getOption('boundaryOffset');
        },
        set: function (value) {
            this._setOption('boundaryOffset', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPositionConfig.prototype, "collision", {
        get: function () {
            return this._getOption('collision');
        },
        set: function (value) {
            this._setOption('collision', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPositionConfig.prototype, "my", {
        get: function () {
            return this._getOption('my');
        },
        set: function (value) {
            this._setOption('my', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPositionConfig.prototype, "of", {
        get: function () {
            return this._getOption('of');
        },
        set: function (value) {
            this._setOption('of', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPositionConfig.prototype, "offset", {
        get: function () {
            return this._getOption('offset');
        },
        set: function (value) {
            this._setOption('offset', value);
        },
        enumerable: true,
        configurable: true
    });
    return DxoPositionConfig;
}(NestedOption));

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoPositionComponent = /** @class */ (function (_super) {
    __extends(DxoPositionComponent, _super);
    function DxoPositionComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoPositionComponent.prototype, "_optionPath", {
        get: function () {
            return 'position';
        },
        enumerable: true,
        configurable: true
    });
    DxoPositionComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoPositionComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoPositionComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoPositionComponent = __decorate([
        Component({
            selector: 'dxo-position',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'at',
                'boundary',
                'boundaryOffset',
                'collision',
                'my',
                'of',
                'offset'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoPositionComponent);
    return DxoPositionComponent;
}(DxoPositionConfig));
var DxoPositionModule = /** @class */ (function () {
    function DxoPositionModule() {
    }
    DxoPositionModule = __decorate([
        NgModule({
            declarations: [
                DxoPositionComponent
            ],
            exports: [
                DxoPositionComponent
            ],
        })
    ], DxoPositionModule);
    return DxoPositionModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoVectorMapProjectionConfig = /** @class */ (function (_super) {
    __extends(DxoVectorMapProjectionConfig, _super);
    function DxoVectorMapProjectionConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DxoVectorMapProjectionConfig.prototype, "aspectRatio", {
        get: function () {
            return this._getOption('aspectRatio');
        },
        set: function (value) {
            this._setOption('aspectRatio', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoVectorMapProjectionConfig.prototype, "from", {
        get: function () {
            return this._getOption('from');
        },
        set: function (value) {
            this._setOption('from', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoVectorMapProjectionConfig.prototype, "to", {
        get: function () {
            return this._getOption('to');
        },
        set: function (value) {
            this._setOption('to', value);
        },
        enumerable: true,
        configurable: true
    });
    return DxoVectorMapProjectionConfig;
}(NestedOption));

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoProjectionComponent = /** @class */ (function (_super) {
    __extends(DxoProjectionComponent, _super);
    function DxoProjectionComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoProjectionComponent.prototype, "_optionPath", {
        get: function () {
            return 'projection';
        },
        enumerable: true,
        configurable: true
    });
    DxoProjectionComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoProjectionComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoProjectionComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoProjectionComponent = __decorate([
        Component({
            selector: 'dxo-projection',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'aspectRatio',
                'from',
                'to'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoProjectionComponent);
    return DxoProjectionComponent;
}(DxoVectorMapProjectionConfig));
var DxoProjectionModule = /** @class */ (function () {
    function DxoProjectionModule() {
    }
    DxoProjectionModule = __decorate([
        NgModule({
            declarations: [
                DxoProjectionComponent
            ],
            exports: [
                DxoProjectionComponent
            ],
        })
    ], DxoProjectionModule);
    return DxoProjectionModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoPropertiesPanelComponent = /** @class */ (function (_super) {
    __extends(DxoPropertiesPanelComponent, _super);
    function DxoPropertiesPanelComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoPropertiesPanelComponent.prototype, "tabs", {
        get: function () {
            return this._getOption('tabs');
        },
        set: function (value) {
            this._setOption('tabs', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPropertiesPanelComponent.prototype, "visibility", {
        get: function () {
            return this._getOption('visibility');
        },
        set: function (value) {
            this._setOption('visibility', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPropertiesPanelComponent.prototype, "_optionPath", {
        get: function () {
            return 'propertiesPanel';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoPropertiesPanelComponent.prototype, "tabsChildren", {
        get: function () {
            return this._getOption('tabs');
        },
        set: function (value) {
            this.setChildren('tabs', value);
        },
        enumerable: true,
        configurable: true
    });
    DxoPropertiesPanelComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoPropertiesPanelComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoPropertiesPanelComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxoPropertiesPanelComponent.prototype, "tabs", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoPropertiesPanelComponent.prototype, "visibility", null);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiTabComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxoPropertiesPanelComponent.prototype, "tabsChildren", null);
    DxoPropertiesPanelComponent = __decorate([
        Component({
            selector: 'dxo-properties-panel',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoPropertiesPanelComponent);
    return DxoPropertiesPanelComponent;
}(NestedOption));
var DxoPropertiesPanelModule = /** @class */ (function () {
    function DxoPropertiesPanelModule() {
    }
    DxoPropertiesPanelModule = __decorate([
        NgModule({
            declarations: [
                DxoPropertiesPanelComponent
            ],
            exports: [
                DxoPropertiesPanelComponent
            ],
        })
    ], DxoPropertiesPanelModule);
    return DxoPropertiesPanelModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiRangeComponent = /** @class */ (function (_super) {
    __extends(DxiRangeComponent, _super);
    function DxiRangeComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiRangeComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiRangeComponent.prototype, "endValue", {
        get: function () {
            return this._getOption('endValue');
        },
        set: function (value) {
            this._setOption('endValue', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiRangeComponent.prototype, "startValue", {
        get: function () {
            return this._getOption('startValue');
        },
        set: function (value) {
            this._setOption('startValue', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiRangeComponent.prototype, "_optionPath", {
        get: function () {
            return 'ranges';
        },
        enumerable: true,
        configurable: true
    });
    DxiRangeComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiRangeComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiRangeComponent.prototype, "endValue", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiRangeComponent.prototype, "startValue", null);
    DxiRangeComponent = __decorate([
        Component({
            selector: 'dxi-range',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiRangeComponent);
    return DxiRangeComponent;
}(CollectionNestedOption));
var DxiRangeModule = /** @class */ (function () {
    function DxiRangeModule() {
    }
    DxiRangeModule = __decorate([
        NgModule({
            declarations: [
                DxiRangeComponent
            ],
            exports: [
                DxiRangeComponent
            ],
        })
    ], DxiRangeModule);
    return DxiRangeModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoRangeContainerComponent = /** @class */ (function (_super) {
    __extends(DxoRangeContainerComponent, _super);
    function DxoRangeContainerComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoRangeContainerComponent.prototype, "backgroundColor", {
        get: function () {
            return this._getOption('backgroundColor');
        },
        set: function (value) {
            this._setOption('backgroundColor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRangeContainerComponent.prototype, "offset", {
        get: function () {
            return this._getOption('offset');
        },
        set: function (value) {
            this._setOption('offset', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRangeContainerComponent.prototype, "orientation", {
        get: function () {
            return this._getOption('orientation');
        },
        set: function (value) {
            this._setOption('orientation', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRangeContainerComponent.prototype, "palette", {
        get: function () {
            return this._getOption('palette');
        },
        set: function (value) {
            this._setOption('palette', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRangeContainerComponent.prototype, "paletteExtensionMode", {
        get: function () {
            return this._getOption('paletteExtensionMode');
        },
        set: function (value) {
            this._setOption('paletteExtensionMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRangeContainerComponent.prototype, "ranges", {
        get: function () {
            return this._getOption('ranges');
        },
        set: function (value) {
            this._setOption('ranges', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRangeContainerComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRangeContainerComponent.prototype, "horizontalOrientation", {
        get: function () {
            return this._getOption('horizontalOrientation');
        },
        set: function (value) {
            this._setOption('horizontalOrientation', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRangeContainerComponent.prototype, "verticalOrientation", {
        get: function () {
            return this._getOption('verticalOrientation');
        },
        set: function (value) {
            this._setOption('verticalOrientation', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRangeContainerComponent.prototype, "_optionPath", {
        get: function () {
            return 'rangeContainer';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRangeContainerComponent.prototype, "rangesChildren", {
        get: function () {
            return this._getOption('ranges');
        },
        set: function (value) {
            this.setChildren('ranges', value);
        },
        enumerable: true,
        configurable: true
    });
    DxoRangeContainerComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoRangeContainerComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoRangeContainerComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoRangeContainerComponent.prototype, "backgroundColor", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoRangeContainerComponent.prototype, "offset", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoRangeContainerComponent.prototype, "orientation", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoRangeContainerComponent.prototype, "palette", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoRangeContainerComponent.prototype, "paletteExtensionMode", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxoRangeContainerComponent.prototype, "ranges", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoRangeContainerComponent.prototype, "width", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoRangeContainerComponent.prototype, "horizontalOrientation", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoRangeContainerComponent.prototype, "verticalOrientation", null);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiRangeComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxoRangeContainerComponent.prototype, "rangesChildren", null);
    DxoRangeContainerComponent = __decorate([
        Component({
            selector: 'dxo-range-container',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoRangeContainerComponent);
    return DxoRangeContainerComponent;
}(NestedOption));
var DxoRangeContainerModule = /** @class */ (function () {
    function DxoRangeContainerModule() {
    }
    DxoRangeContainerModule = __decorate([
        NgModule({
            declarations: [
                DxoRangeContainerComponent
            ],
            exports: [
                DxoRangeContainerComponent
            ],
        })
    ], DxoRangeContainerModule);
    return DxoRangeContainerModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoRangeareaComponent = /** @class */ (function (_super) {
    __extends(DxoRangeareaComponent, _super);
    function DxoRangeareaComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoRangeareaComponent.prototype, "_optionPath", {
        get: function () {
            return 'rangearea';
        },
        enumerable: true,
        configurable: true
    });
    DxoRangeareaComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoRangeareaComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoRangeareaComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoRangeareaComponent = __decorate([
        Component({
            selector: 'dxo-rangearea',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'aggregation',
                'area',
                'argumentField',
                'axis',
                'bar',
                'barOverlapGroup',
                'barPadding',
                'barWidth',
                'border',
                'bubble',
                'candlestick',
                'closeValueField',
                'color',
                'cornerRadius',
                'dashStyle',
                'fullstackedarea',
                'fullstackedbar',
                'fullstackedline',
                'fullstackedspline',
                'fullstackedsplinearea',
                'highValueField',
                'hoverMode',
                'hoverStyle',
                'ignoreEmptyPoints',
                'innerColor',
                'label',
                'line',
                'lowValueField',
                'maxLabelCount',
                'minBarSize',
                'opacity',
                'openValueField',
                'pane',
                'point',
                'rangearea',
                'rangebar',
                'rangeValue1Field',
                'rangeValue2Field',
                'reduction',
                'scatter',
                'selectionMode',
                'selectionStyle',
                'showInLegend',
                'sizeField',
                'spline',
                'splinearea',
                'stack',
                'stackedarea',
                'stackedbar',
                'stackedline',
                'stackedspline',
                'stackedsplinearea',
                'steparea',
                'stepline',
                'stock',
                'tagField',
                'type',
                'valueErrorBar',
                'valueField',
                'visible',
                'width'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoRangeareaComponent);
    return DxoRangeareaComponent;
}(DxoChartCommonSeriesSettings));
var DxoRangeareaModule = /** @class */ (function () {
    function DxoRangeareaModule() {
    }
    DxoRangeareaModule = __decorate([
        NgModule({
            declarations: [
                DxoRangeareaComponent
            ],
            exports: [
                DxoRangeareaComponent
            ],
        })
    ], DxoRangeareaModule);
    return DxoRangeareaModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoRangebarComponent = /** @class */ (function (_super) {
    __extends(DxoRangebarComponent, _super);
    function DxoRangebarComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoRangebarComponent.prototype, "_optionPath", {
        get: function () {
            return 'rangebar';
        },
        enumerable: true,
        configurable: true
    });
    DxoRangebarComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoRangebarComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoRangebarComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoRangebarComponent = __decorate([
        Component({
            selector: 'dxo-rangebar',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'aggregation',
                'area',
                'argumentField',
                'axis',
                'bar',
                'barOverlapGroup',
                'barPadding',
                'barWidth',
                'border',
                'bubble',
                'candlestick',
                'closeValueField',
                'color',
                'cornerRadius',
                'dashStyle',
                'fullstackedarea',
                'fullstackedbar',
                'fullstackedline',
                'fullstackedspline',
                'fullstackedsplinearea',
                'highValueField',
                'hoverMode',
                'hoverStyle',
                'ignoreEmptyPoints',
                'innerColor',
                'label',
                'line',
                'lowValueField',
                'maxLabelCount',
                'minBarSize',
                'opacity',
                'openValueField',
                'pane',
                'point',
                'rangearea',
                'rangebar',
                'rangeValue1Field',
                'rangeValue2Field',
                'reduction',
                'scatter',
                'selectionMode',
                'selectionStyle',
                'showInLegend',
                'sizeField',
                'spline',
                'splinearea',
                'stack',
                'stackedarea',
                'stackedbar',
                'stackedline',
                'stackedspline',
                'stackedsplinearea',
                'steparea',
                'stepline',
                'stock',
                'tagField',
                'type',
                'valueErrorBar',
                'valueField',
                'visible',
                'width'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoRangebarComponent);
    return DxoRangebarComponent;
}(DxoChartCommonSeriesSettings));
var DxoRangebarModule = /** @class */ (function () {
    function DxoRangebarModule() {
    }
    DxoRangebarModule = __decorate([
        NgModule({
            declarations: [
                DxoRangebarComponent
            ],
            exports: [
                DxoRangebarComponent
            ],
        })
    ], DxoRangebarModule);
    return DxoRangebarModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoReductionComponent = /** @class */ (function (_super) {
    __extends(DxoReductionComponent, _super);
    function DxoReductionComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoReductionComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoReductionComponent.prototype, "level", {
        get: function () {
            return this._getOption('level');
        },
        set: function (value) {
            this._setOption('level', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoReductionComponent.prototype, "_optionPath", {
        get: function () {
            return 'reduction';
        },
        enumerable: true,
        configurable: true
    });
    DxoReductionComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoReductionComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoReductionComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoReductionComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoReductionComponent.prototype, "level", null);
    DxoReductionComponent = __decorate([
        Component({
            selector: 'dxo-reduction',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoReductionComponent);
    return DxoReductionComponent;
}(NestedOption));
var DxoReductionModule = /** @class */ (function () {
    function DxoReductionModule() {
    }
    DxoReductionModule = __decorate([
        NgModule({
            declarations: [
                DxoReductionComponent
            ],
            exports: [
                DxoReductionComponent
            ],
        })
    ], DxoReductionModule);
    return DxoReductionModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoRemoteOperationsComponent = /** @class */ (function (_super) {
    __extends(DxoRemoteOperationsComponent, _super);
    function DxoRemoteOperationsComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoRemoteOperationsComponent.prototype, "filtering", {
        get: function () {
            return this._getOption('filtering');
        },
        set: function (value) {
            this._setOption('filtering', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRemoteOperationsComponent.prototype, "grouping", {
        get: function () {
            return this._getOption('grouping');
        },
        set: function (value) {
            this._setOption('grouping', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRemoteOperationsComponent.prototype, "groupPaging", {
        get: function () {
            return this._getOption('groupPaging');
        },
        set: function (value) {
            this._setOption('groupPaging', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRemoteOperationsComponent.prototype, "paging", {
        get: function () {
            return this._getOption('paging');
        },
        set: function (value) {
            this._setOption('paging', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRemoteOperationsComponent.prototype, "sorting", {
        get: function () {
            return this._getOption('sorting');
        },
        set: function (value) {
            this._setOption('sorting', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRemoteOperationsComponent.prototype, "summary", {
        get: function () {
            return this._getOption('summary');
        },
        set: function (value) {
            this._setOption('summary', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRemoteOperationsComponent.prototype, "_optionPath", {
        get: function () {
            return 'remoteOperations';
        },
        enumerable: true,
        configurable: true
    });
    DxoRemoteOperationsComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoRemoteOperationsComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoRemoteOperationsComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoRemoteOperationsComponent.prototype, "filtering", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoRemoteOperationsComponent.prototype, "grouping", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoRemoteOperationsComponent.prototype, "groupPaging", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoRemoteOperationsComponent.prototype, "paging", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoRemoteOperationsComponent.prototype, "sorting", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoRemoteOperationsComponent.prototype, "summary", null);
    DxoRemoteOperationsComponent = __decorate([
        Component({
            selector: 'dxo-remote-operations',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoRemoteOperationsComponent);
    return DxoRemoteOperationsComponent;
}(NestedOption));
var DxoRemoteOperationsModule = /** @class */ (function () {
    function DxoRemoteOperationsModule() {
    }
    DxoRemoteOperationsModule = __decorate([
        NgModule({
            declarations: [
                DxoRemoteOperationsComponent
            ],
            exports: [
                DxoRemoteOperationsComponent
            ],
        })
    ], DxoRemoteOperationsModule);
    return DxoRemoteOperationsModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoResourceAssignmentsComponent = /** @class */ (function (_super) {
    __extends(DxoResourceAssignmentsComponent, _super);
    function DxoResourceAssignmentsComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoResourceAssignmentsComponent.prototype, "dataSource", {
        get: function () {
            return this._getOption('dataSource');
        },
        set: function (value) {
            this._setOption('dataSource', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoResourceAssignmentsComponent.prototype, "keyExpr", {
        get: function () {
            return this._getOption('keyExpr');
        },
        set: function (value) {
            this._setOption('keyExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoResourceAssignmentsComponent.prototype, "resourceIdExpr", {
        get: function () {
            return this._getOption('resourceIdExpr');
        },
        set: function (value) {
            this._setOption('resourceIdExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoResourceAssignmentsComponent.prototype, "taskIdExpr", {
        get: function () {
            return this._getOption('taskIdExpr');
        },
        set: function (value) {
            this._setOption('taskIdExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoResourceAssignmentsComponent.prototype, "_optionPath", {
        get: function () {
            return 'resourceAssignments';
        },
        enumerable: true,
        configurable: true
    });
    DxoResourceAssignmentsComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoResourceAssignmentsComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoResourceAssignmentsComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoResourceAssignmentsComponent.prototype, "dataSource", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoResourceAssignmentsComponent.prototype, "keyExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoResourceAssignmentsComponent.prototype, "resourceIdExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoResourceAssignmentsComponent.prototype, "taskIdExpr", null);
    DxoResourceAssignmentsComponent = __decorate([
        Component({
            selector: 'dxo-resource-assignments',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoResourceAssignmentsComponent);
    return DxoResourceAssignmentsComponent;
}(NestedOption));
var DxoResourceAssignmentsModule = /** @class */ (function () {
    function DxoResourceAssignmentsModule() {
    }
    DxoResourceAssignmentsModule = __decorate([
        NgModule({
            declarations: [
                DxoResourceAssignmentsComponent
            ],
            exports: [
                DxoResourceAssignmentsComponent
            ],
        })
    ], DxoResourceAssignmentsModule);
    return DxoResourceAssignmentsModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiResourceComponent = /** @class */ (function (_super) {
    __extends(DxiResourceComponent, _super);
    function DxiResourceComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiResourceComponent.prototype, "allowMultiple", {
        get: function () {
            return this._getOption('allowMultiple');
        },
        set: function (value) {
            this._setOption('allowMultiple', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiResourceComponent.prototype, "colorExpr", {
        get: function () {
            return this._getOption('colorExpr');
        },
        set: function (value) {
            this._setOption('colorExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiResourceComponent.prototype, "dataSource", {
        get: function () {
            return this._getOption('dataSource');
        },
        set: function (value) {
            this._setOption('dataSource', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiResourceComponent.prototype, "displayExpr", {
        get: function () {
            return this._getOption('displayExpr');
        },
        set: function (value) {
            this._setOption('displayExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiResourceComponent.prototype, "fieldExpr", {
        get: function () {
            return this._getOption('fieldExpr');
        },
        set: function (value) {
            this._setOption('fieldExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiResourceComponent.prototype, "label", {
        get: function () {
            return this._getOption('label');
        },
        set: function (value) {
            this._setOption('label', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiResourceComponent.prototype, "useColorAsDefault", {
        get: function () {
            return this._getOption('useColorAsDefault');
        },
        set: function (value) {
            this._setOption('useColorAsDefault', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiResourceComponent.prototype, "valueExpr", {
        get: function () {
            return this._getOption('valueExpr');
        },
        set: function (value) {
            this._setOption('valueExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiResourceComponent.prototype, "_optionPath", {
        get: function () {
            return 'resources';
        },
        enumerable: true,
        configurable: true
    });
    DxiResourceComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxiResourceComponent.prototype, "allowMultiple", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiResourceComponent.prototype, "colorExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiResourceComponent.prototype, "dataSource", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiResourceComponent.prototype, "displayExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiResourceComponent.prototype, "fieldExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiResourceComponent.prototype, "label", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxiResourceComponent.prototype, "useColorAsDefault", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiResourceComponent.prototype, "valueExpr", null);
    DxiResourceComponent = __decorate([
        Component({
            selector: 'dxi-resource',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiResourceComponent);
    return DxiResourceComponent;
}(CollectionNestedOption));
var DxiResourceModule = /** @class */ (function () {
    function DxiResourceModule() {
    }
    DxiResourceModule = __decorate([
        NgModule({
            declarations: [
                DxiResourceComponent
            ],
            exports: [
                DxiResourceComponent
            ],
        })
    ], DxiResourceModule);
    return DxiResourceModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoResourcesComponent = /** @class */ (function (_super) {
    __extends(DxoResourcesComponent, _super);
    function DxoResourcesComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoResourcesComponent.prototype, "colorExpr", {
        get: function () {
            return this._getOption('colorExpr');
        },
        set: function (value) {
            this._setOption('colorExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoResourcesComponent.prototype, "dataSource", {
        get: function () {
            return this._getOption('dataSource');
        },
        set: function (value) {
            this._setOption('dataSource', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoResourcesComponent.prototype, "keyExpr", {
        get: function () {
            return this._getOption('keyExpr');
        },
        set: function (value) {
            this._setOption('keyExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoResourcesComponent.prototype, "textExpr", {
        get: function () {
            return this._getOption('textExpr');
        },
        set: function (value) {
            this._setOption('textExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoResourcesComponent.prototype, "_optionPath", {
        get: function () {
            return 'resources';
        },
        enumerable: true,
        configurable: true
    });
    DxoResourcesComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoResourcesComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoResourcesComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoResourcesComponent.prototype, "colorExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoResourcesComponent.prototype, "dataSource", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoResourcesComponent.prototype, "keyExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoResourcesComponent.prototype, "textExpr", null);
    DxoResourcesComponent = __decorate([
        Component({
            selector: 'dxo-resources',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoResourcesComponent);
    return DxoResourcesComponent;
}(NestedOption));
var DxoResourcesModule = /** @class */ (function () {
    function DxoResourcesModule() {
    }
    DxoResourcesModule = __decorate([
        NgModule({
            declarations: [
                DxoResourcesComponent
            ],
            exports: [
                DxoResourcesComponent
            ],
        })
    ], DxoResourcesModule);
    return DxoResourcesModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiRouteComponent = /** @class */ (function (_super) {
    __extends(DxiRouteComponent, _super);
    function DxiRouteComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiRouteComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiRouteComponent.prototype, "locations", {
        get: function () {
            return this._getOption('locations');
        },
        set: function (value) {
            this._setOption('locations', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiRouteComponent.prototype, "mode", {
        get: function () {
            return this._getOption('mode');
        },
        set: function (value) {
            this._setOption('mode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiRouteComponent.prototype, "opacity", {
        get: function () {
            return this._getOption('opacity');
        },
        set: function (value) {
            this._setOption('opacity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiRouteComponent.prototype, "weight", {
        get: function () {
            return this._getOption('weight');
        },
        set: function (value) {
            this._setOption('weight', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiRouteComponent.prototype, "_optionPath", {
        get: function () {
            return 'routes';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiRouteComponent.prototype, "locationsChildren", {
        get: function () {
            return this._getOption('locations');
        },
        set: function (value) {
            this.setChildren('locations', value);
        },
        enumerable: true,
        configurable: true
    });
    DxiRouteComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiRouteComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxiRouteComponent.prototype, "locations", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiRouteComponent.prototype, "mode", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiRouteComponent.prototype, "opacity", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiRouteComponent.prototype, "weight", null);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiLocationComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxiRouteComponent.prototype, "locationsChildren", null);
    DxiRouteComponent = __decorate([
        Component({
            selector: 'dxi-route',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiRouteComponent);
    return DxiRouteComponent;
}(CollectionNestedOption));
var DxiRouteModule = /** @class */ (function () {
    function DxiRouteModule() {
    }
    DxiRouteModule = __decorate([
        NgModule({
            declarations: [
                DxiRouteComponent
            ],
            exports: [
                DxiRouteComponent
            ],
        })
    ], DxiRouteModule);
    return DxiRouteModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoRowDraggingComponent = /** @class */ (function (_super) {
    __extends(DxoRowDraggingComponent, _super);
    function DxoRowDraggingComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoRowDraggingComponent.prototype, "allowDropInsideItem", {
        get: function () {
            return this._getOption('allowDropInsideItem');
        },
        set: function (value) {
            this._setOption('allowDropInsideItem', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRowDraggingComponent.prototype, "allowReordering", {
        get: function () {
            return this._getOption('allowReordering');
        },
        set: function (value) {
            this._setOption('allowReordering', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRowDraggingComponent.prototype, "autoScroll", {
        get: function () {
            return this._getOption('autoScroll');
        },
        set: function (value) {
            this._setOption('autoScroll', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRowDraggingComponent.prototype, "boundary", {
        get: function () {
            return this._getOption('boundary');
        },
        set: function (value) {
            this._setOption('boundary', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRowDraggingComponent.prototype, "container", {
        get: function () {
            return this._getOption('container');
        },
        set: function (value) {
            this._setOption('container', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRowDraggingComponent.prototype, "cursorOffset", {
        get: function () {
            return this._getOption('cursorOffset');
        },
        set: function (value) {
            this._setOption('cursorOffset', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRowDraggingComponent.prototype, "data", {
        get: function () {
            return this._getOption('data');
        },
        set: function (value) {
            this._setOption('data', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRowDraggingComponent.prototype, "dragDirection", {
        get: function () {
            return this._getOption('dragDirection');
        },
        set: function (value) {
            this._setOption('dragDirection', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRowDraggingComponent.prototype, "dragTemplate", {
        get: function () {
            return this._getOption('dragTemplate');
        },
        set: function (value) {
            this._setOption('dragTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRowDraggingComponent.prototype, "dropFeedbackMode", {
        get: function () {
            return this._getOption('dropFeedbackMode');
        },
        set: function (value) {
            this._setOption('dropFeedbackMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRowDraggingComponent.prototype, "filter", {
        get: function () {
            return this._getOption('filter');
        },
        set: function (value) {
            this._setOption('filter', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRowDraggingComponent.prototype, "group", {
        get: function () {
            return this._getOption('group');
        },
        set: function (value) {
            this._setOption('group', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRowDraggingComponent.prototype, "handle", {
        get: function () {
            return this._getOption('handle');
        },
        set: function (value) {
            this._setOption('handle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRowDraggingComponent.prototype, "onAdd", {
        get: function () {
            return this._getOption('onAdd');
        },
        set: function (value) {
            this._setOption('onAdd', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRowDraggingComponent.prototype, "onDragChange", {
        get: function () {
            return this._getOption('onDragChange');
        },
        set: function (value) {
            this._setOption('onDragChange', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRowDraggingComponent.prototype, "onDragEnd", {
        get: function () {
            return this._getOption('onDragEnd');
        },
        set: function (value) {
            this._setOption('onDragEnd', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRowDraggingComponent.prototype, "onDragMove", {
        get: function () {
            return this._getOption('onDragMove');
        },
        set: function (value) {
            this._setOption('onDragMove', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRowDraggingComponent.prototype, "onDragStart", {
        get: function () {
            return this._getOption('onDragStart');
        },
        set: function (value) {
            this._setOption('onDragStart', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRowDraggingComponent.prototype, "onRemove", {
        get: function () {
            return this._getOption('onRemove');
        },
        set: function (value) {
            this._setOption('onRemove', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRowDraggingComponent.prototype, "onReorder", {
        get: function () {
            return this._getOption('onReorder');
        },
        set: function (value) {
            this._setOption('onReorder', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRowDraggingComponent.prototype, "scrollSensitivity", {
        get: function () {
            return this._getOption('scrollSensitivity');
        },
        set: function (value) {
            this._setOption('scrollSensitivity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRowDraggingComponent.prototype, "scrollSpeed", {
        get: function () {
            return this._getOption('scrollSpeed');
        },
        set: function (value) {
            this._setOption('scrollSpeed', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRowDraggingComponent.prototype, "showDragIcons", {
        get: function () {
            return this._getOption('showDragIcons');
        },
        set: function (value) {
            this._setOption('showDragIcons', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoRowDraggingComponent.prototype, "_optionPath", {
        get: function () {
            return 'rowDragging';
        },
        enumerable: true,
        configurable: true
    });
    DxoRowDraggingComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoRowDraggingComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoRowDraggingComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoRowDraggingComponent.prototype, "allowDropInsideItem", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoRowDraggingComponent.prototype, "allowReordering", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoRowDraggingComponent.prototype, "autoScroll", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoRowDraggingComponent.prototype, "boundary", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoRowDraggingComponent.prototype, "container", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoRowDraggingComponent.prototype, "cursorOffset", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoRowDraggingComponent.prototype, "data", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoRowDraggingComponent.prototype, "dragDirection", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoRowDraggingComponent.prototype, "dragTemplate", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoRowDraggingComponent.prototype, "dropFeedbackMode", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoRowDraggingComponent.prototype, "filter", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoRowDraggingComponent.prototype, "group", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoRowDraggingComponent.prototype, "handle", null);
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxoRowDraggingComponent.prototype, "onAdd", null);
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxoRowDraggingComponent.prototype, "onDragChange", null);
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxoRowDraggingComponent.prototype, "onDragEnd", null);
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxoRowDraggingComponent.prototype, "onDragMove", null);
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxoRowDraggingComponent.prototype, "onDragStart", null);
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxoRowDraggingComponent.prototype, "onRemove", null);
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxoRowDraggingComponent.prototype, "onReorder", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoRowDraggingComponent.prototype, "scrollSensitivity", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoRowDraggingComponent.prototype, "scrollSpeed", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoRowDraggingComponent.prototype, "showDragIcons", null);
    DxoRowDraggingComponent = __decorate([
        Component({
            selector: 'dxo-row-dragging',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoRowDraggingComponent);
    return DxoRowDraggingComponent;
}(NestedOption));
var DxoRowDraggingModule = /** @class */ (function () {
    function DxoRowDraggingModule() {
    }
    DxoRowDraggingModule = __decorate([
        NgModule({
            declarations: [
                DxoRowDraggingComponent
            ],
            exports: [
                DxoRowDraggingComponent
            ],
        })
    ], DxoRowDraggingModule);
    return DxoRowDraggingModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiRowComponent = /** @class */ (function (_super) {
    __extends(DxiRowComponent, _super);
    function DxiRowComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiRowComponent.prototype, "baseSize", {
        get: function () {
            return this._getOption('baseSize');
        },
        set: function (value) {
            this._setOption('baseSize', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiRowComponent.prototype, "ratio", {
        get: function () {
            return this._getOption('ratio');
        },
        set: function (value) {
            this._setOption('ratio', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiRowComponent.prototype, "screen", {
        get: function () {
            return this._getOption('screen');
        },
        set: function (value) {
            this._setOption('screen', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiRowComponent.prototype, "shrink", {
        get: function () {
            return this._getOption('shrink');
        },
        set: function (value) {
            this._setOption('shrink', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiRowComponent.prototype, "_optionPath", {
        get: function () {
            return 'rows';
        },
        enumerable: true,
        configurable: true
    });
    DxiRowComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiRowComponent.prototype, "baseSize", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiRowComponent.prototype, "ratio", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiRowComponent.prototype, "screen", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiRowComponent.prototype, "shrink", null);
    DxiRowComponent = __decorate([
        Component({
            selector: 'dxi-row',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiRowComponent);
    return DxiRowComponent;
}(CollectionNestedOption));
var DxiRowModule = /** @class */ (function () {
    function DxiRowModule() {
    }
    DxiRowModule = __decorate([
        NgModule({
            declarations: [
                DxiRowComponent
            ],
            exports: [
                DxiRowComponent
            ],
        })
    ], DxiRowModule);
    return DxiRowModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoScaleComponent = /** @class */ (function (_super) {
    __extends(DxoScaleComponent, _super);
    function DxoScaleComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoScaleComponent.prototype, "allowDecimals", {
        get: function () {
            return this._getOption('allowDecimals');
        },
        set: function (value) {
            this._setOption('allowDecimals', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScaleComponent.prototype, "customMinorTicks", {
        get: function () {
            return this._getOption('customMinorTicks');
        },
        set: function (value) {
            this._setOption('customMinorTicks', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScaleComponent.prototype, "customTicks", {
        get: function () {
            return this._getOption('customTicks');
        },
        set: function (value) {
            this._setOption('customTicks', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScaleComponent.prototype, "endValue", {
        get: function () {
            return this._getOption('endValue');
        },
        set: function (value) {
            this._setOption('endValue', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScaleComponent.prototype, "label", {
        get: function () {
            return this._getOption('label');
        },
        set: function (value) {
            this._setOption('label', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScaleComponent.prototype, "minorTick", {
        get: function () {
            return this._getOption('minorTick');
        },
        set: function (value) {
            this._setOption('minorTick', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScaleComponent.prototype, "minorTickInterval", {
        get: function () {
            return this._getOption('minorTickInterval');
        },
        set: function (value) {
            this._setOption('minorTickInterval', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScaleComponent.prototype, "orientation", {
        get: function () {
            return this._getOption('orientation');
        },
        set: function (value) {
            this._setOption('orientation', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScaleComponent.prototype, "scaleDivisionFactor", {
        get: function () {
            return this._getOption('scaleDivisionFactor');
        },
        set: function (value) {
            this._setOption('scaleDivisionFactor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScaleComponent.prototype, "startValue", {
        get: function () {
            return this._getOption('startValue');
        },
        set: function (value) {
            this._setOption('startValue', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScaleComponent.prototype, "tick", {
        get: function () {
            return this._getOption('tick');
        },
        set: function (value) {
            this._setOption('tick', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScaleComponent.prototype, "tickInterval", {
        get: function () {
            return this._getOption('tickInterval');
        },
        set: function (value) {
            this._setOption('tickInterval', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScaleComponent.prototype, "horizontalOrientation", {
        get: function () {
            return this._getOption('horizontalOrientation');
        },
        set: function (value) {
            this._setOption('horizontalOrientation', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScaleComponent.prototype, "verticalOrientation", {
        get: function () {
            return this._getOption('verticalOrientation');
        },
        set: function (value) {
            this._setOption('verticalOrientation', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScaleComponent.prototype, "aggregateByCategory", {
        get: function () {
            return this._getOption('aggregateByCategory');
        },
        set: function (value) {
            this._setOption('aggregateByCategory', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScaleComponent.prototype, "aggregationGroupWidth", {
        get: function () {
            return this._getOption('aggregationGroupWidth');
        },
        set: function (value) {
            this._setOption('aggregationGroupWidth', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScaleComponent.prototype, "aggregationInterval", {
        get: function () {
            return this._getOption('aggregationInterval');
        },
        set: function (value) {
            this._setOption('aggregationInterval', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScaleComponent.prototype, "breaks", {
        get: function () {
            return this._getOption('breaks');
        },
        set: function (value) {
            this._setOption('breaks', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScaleComponent.prototype, "breakStyle", {
        get: function () {
            return this._getOption('breakStyle');
        },
        set: function (value) {
            this._setOption('breakStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScaleComponent.prototype, "categories", {
        get: function () {
            return this._getOption('categories');
        },
        set: function (value) {
            this._setOption('categories', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScaleComponent.prototype, "endOnTick", {
        get: function () {
            return this._getOption('endOnTick');
        },
        set: function (value) {
            this._setOption('endOnTick', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScaleComponent.prototype, "holidays", {
        get: function () {
            return this._getOption('holidays');
        },
        set: function (value) {
            this._setOption('holidays', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScaleComponent.prototype, "linearThreshold", {
        get: function () {
            return this._getOption('linearThreshold');
        },
        set: function (value) {
            this._setOption('linearThreshold', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScaleComponent.prototype, "logarithmBase", {
        get: function () {
            return this._getOption('logarithmBase');
        },
        set: function (value) {
            this._setOption('logarithmBase', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScaleComponent.prototype, "marker", {
        get: function () {
            return this._getOption('marker');
        },
        set: function (value) {
            this._setOption('marker', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScaleComponent.prototype, "maxRange", {
        get: function () {
            return this._getOption('maxRange');
        },
        set: function (value) {
            this._setOption('maxRange', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScaleComponent.prototype, "minorTickCount", {
        get: function () {
            return this._getOption('minorTickCount');
        },
        set: function (value) {
            this._setOption('minorTickCount', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScaleComponent.prototype, "minRange", {
        get: function () {
            return this._getOption('minRange');
        },
        set: function (value) {
            this._setOption('minRange', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScaleComponent.prototype, "placeholderHeight", {
        get: function () {
            return this._getOption('placeholderHeight');
        },
        set: function (value) {
            this._setOption('placeholderHeight', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScaleComponent.prototype, "showCustomBoundaryTicks", {
        get: function () {
            return this._getOption('showCustomBoundaryTicks');
        },
        set: function (value) {
            this._setOption('showCustomBoundaryTicks', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScaleComponent.prototype, "singleWorkdays", {
        get: function () {
            return this._getOption('singleWorkdays');
        },
        set: function (value) {
            this._setOption('singleWorkdays', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScaleComponent.prototype, "type", {
        get: function () {
            return this._getOption('type');
        },
        set: function (value) {
            this._setOption('type', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScaleComponent.prototype, "valueType", {
        get: function () {
            return this._getOption('valueType');
        },
        set: function (value) {
            this._setOption('valueType', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScaleComponent.prototype, "workdaysOnly", {
        get: function () {
            return this._getOption('workdaysOnly');
        },
        set: function (value) {
            this._setOption('workdaysOnly', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScaleComponent.prototype, "workWeek", {
        get: function () {
            return this._getOption('workWeek');
        },
        set: function (value) {
            this._setOption('workWeek', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScaleComponent.prototype, "_optionPath", {
        get: function () {
            return 'scale';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScaleComponent.prototype, "breaksChildren", {
        get: function () {
            return this._getOption('breaks');
        },
        set: function (value) {
            this.setChildren('breaks', value);
        },
        enumerable: true,
        configurable: true
    });
    DxoScaleComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoScaleComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoScaleComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoScaleComponent.prototype, "allowDecimals", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxoScaleComponent.prototype, "customMinorTicks", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxoScaleComponent.prototype, "customTicks", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoScaleComponent.prototype, "endValue", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoScaleComponent.prototype, "label", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoScaleComponent.prototype, "minorTick", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoScaleComponent.prototype, "minorTickInterval", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoScaleComponent.prototype, "orientation", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoScaleComponent.prototype, "scaleDivisionFactor", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoScaleComponent.prototype, "startValue", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoScaleComponent.prototype, "tick", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoScaleComponent.prototype, "tickInterval", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoScaleComponent.prototype, "horizontalOrientation", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoScaleComponent.prototype, "verticalOrientation", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoScaleComponent.prototype, "aggregateByCategory", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoScaleComponent.prototype, "aggregationGroupWidth", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoScaleComponent.prototype, "aggregationInterval", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxoScaleComponent.prototype, "breaks", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoScaleComponent.prototype, "breakStyle", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxoScaleComponent.prototype, "categories", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoScaleComponent.prototype, "endOnTick", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxoScaleComponent.prototype, "holidays", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoScaleComponent.prototype, "linearThreshold", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoScaleComponent.prototype, "logarithmBase", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoScaleComponent.prototype, "marker", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoScaleComponent.prototype, "maxRange", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoScaleComponent.prototype, "minorTickCount", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoScaleComponent.prototype, "minRange", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoScaleComponent.prototype, "placeholderHeight", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoScaleComponent.prototype, "showCustomBoundaryTicks", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxoScaleComponent.prototype, "singleWorkdays", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoScaleComponent.prototype, "type", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoScaleComponent.prototype, "valueType", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoScaleComponent.prototype, "workdaysOnly", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxoScaleComponent.prototype, "workWeek", null);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiBreakComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxoScaleComponent.prototype, "breaksChildren", null);
    DxoScaleComponent = __decorate([
        Component({
            selector: 'dxo-scale',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoScaleComponent);
    return DxoScaleComponent;
}(NestedOption));
var DxoScaleModule = /** @class */ (function () {
    function DxoScaleModule() {
    }
    DxoScaleModule = __decorate([
        NgModule({
            declarations: [
                DxoScaleComponent
            ],
            exports: [
                DxoScaleComponent
            ],
        })
    ], DxoScaleModule);
    return DxoScaleModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoScatterComponent = /** @class */ (function (_super) {
    __extends(DxoScatterComponent, _super);
    function DxoScatterComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoScatterComponent.prototype, "_optionPath", {
        get: function () {
            return 'scatter';
        },
        enumerable: true,
        configurable: true
    });
    DxoScatterComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoScatterComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoScatterComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoScatterComponent = __decorate([
        Component({
            selector: 'dxo-scatter',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'aggregation',
                'area',
                'argumentField',
                'axis',
                'bar',
                'barOverlapGroup',
                'barPadding',
                'barWidth',
                'border',
                'bubble',
                'candlestick',
                'closeValueField',
                'color',
                'cornerRadius',
                'dashStyle',
                'fullstackedarea',
                'fullstackedbar',
                'fullstackedline',
                'fullstackedspline',
                'fullstackedsplinearea',
                'highValueField',
                'hoverMode',
                'hoverStyle',
                'ignoreEmptyPoints',
                'innerColor',
                'label',
                'line',
                'lowValueField',
                'maxLabelCount',
                'minBarSize',
                'opacity',
                'openValueField',
                'pane',
                'point',
                'rangearea',
                'rangebar',
                'rangeValue1Field',
                'rangeValue2Field',
                'reduction',
                'scatter',
                'selectionMode',
                'selectionStyle',
                'showInLegend',
                'sizeField',
                'spline',
                'splinearea',
                'stack',
                'stackedarea',
                'stackedbar',
                'stackedline',
                'stackedspline',
                'stackedsplinearea',
                'steparea',
                'stepline',
                'stock',
                'tagField',
                'type',
                'valueErrorBar',
                'valueField',
                'visible',
                'width',
                'closed'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoScatterComponent);
    return DxoScatterComponent;
}(DxoChartCommonSeriesSettings));
var DxoScatterModule = /** @class */ (function () {
    function DxoScatterModule() {
    }
    DxoScatterModule = __decorate([
        NgModule({
            declarations: [
                DxoScatterComponent
            ],
            exports: [
                DxoScatterComponent
            ],
        })
    ], DxoScatterModule);
    return DxoScatterModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoScrollBarComponent = /** @class */ (function (_super) {
    __extends(DxoScrollBarComponent, _super);
    function DxoScrollBarComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoScrollBarComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScrollBarComponent.prototype, "offset", {
        get: function () {
            return this._getOption('offset');
        },
        set: function (value) {
            this._setOption('offset', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScrollBarComponent.prototype, "opacity", {
        get: function () {
            return this._getOption('opacity');
        },
        set: function (value) {
            this._setOption('opacity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScrollBarComponent.prototype, "position", {
        get: function () {
            return this._getOption('position');
        },
        set: function (value) {
            this._setOption('position', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScrollBarComponent.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScrollBarComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScrollBarComponent.prototype, "_optionPath", {
        get: function () {
            return 'scrollBar';
        },
        enumerable: true,
        configurable: true
    });
    DxoScrollBarComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoScrollBarComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoScrollBarComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoScrollBarComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoScrollBarComponent.prototype, "offset", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoScrollBarComponent.prototype, "opacity", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoScrollBarComponent.prototype, "position", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoScrollBarComponent.prototype, "visible", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoScrollBarComponent.prototype, "width", null);
    DxoScrollBarComponent = __decorate([
        Component({
            selector: 'dxo-scroll-bar',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoScrollBarComponent);
    return DxoScrollBarComponent;
}(NestedOption));
var DxoScrollBarModule = /** @class */ (function () {
    function DxoScrollBarModule() {
    }
    DxoScrollBarModule = __decorate([
        NgModule({
            declarations: [
                DxoScrollBarComponent
            ],
            exports: [
                DxoScrollBarComponent
            ],
        })
    ], DxoScrollBarModule);
    return DxoScrollBarModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoScrollingComponent = /** @class */ (function (_super) {
    __extends(DxoScrollingComponent, _super);
    function DxoScrollingComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoScrollingComponent.prototype, "columnRenderingMode", {
        get: function () {
            return this._getOption('columnRenderingMode');
        },
        set: function (value) {
            this._setOption('columnRenderingMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScrollingComponent.prototype, "mode", {
        get: function () {
            return this._getOption('mode');
        },
        set: function (value) {
            this._setOption('mode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScrollingComponent.prototype, "preloadEnabled", {
        get: function () {
            return this._getOption('preloadEnabled');
        },
        set: function (value) {
            this._setOption('preloadEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScrollingComponent.prototype, "rowRenderingMode", {
        get: function () {
            return this._getOption('rowRenderingMode');
        },
        set: function (value) {
            this._setOption('rowRenderingMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScrollingComponent.prototype, "scrollByContent", {
        get: function () {
            return this._getOption('scrollByContent');
        },
        set: function (value) {
            this._setOption('scrollByContent', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScrollingComponent.prototype, "scrollByThumb", {
        get: function () {
            return this._getOption('scrollByThumb');
        },
        set: function (value) {
            this._setOption('scrollByThumb', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScrollingComponent.prototype, "showScrollbar", {
        get: function () {
            return this._getOption('showScrollbar');
        },
        set: function (value) {
            this._setOption('showScrollbar', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScrollingComponent.prototype, "useNative", {
        get: function () {
            return this._getOption('useNative');
        },
        set: function (value) {
            this._setOption('useNative', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoScrollingComponent.prototype, "_optionPath", {
        get: function () {
            return 'scrolling';
        },
        enumerable: true,
        configurable: true
    });
    DxoScrollingComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoScrollingComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoScrollingComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoScrollingComponent.prototype, "columnRenderingMode", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoScrollingComponent.prototype, "mode", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoScrollingComponent.prototype, "preloadEnabled", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoScrollingComponent.prototype, "rowRenderingMode", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoScrollingComponent.prototype, "scrollByContent", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoScrollingComponent.prototype, "scrollByThumb", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoScrollingComponent.prototype, "showScrollbar", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoScrollingComponent.prototype, "useNative", null);
    DxoScrollingComponent = __decorate([
        Component({
            selector: 'dxo-scrolling',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoScrollingComponent);
    return DxoScrollingComponent;
}(NestedOption));
var DxoScrollingModule = /** @class */ (function () {
    function DxoScrollingModule() {
    }
    DxoScrollingModule = __decorate([
        NgModule({
            declarations: [
                DxoScrollingComponent
            ],
            exports: [
                DxoScrollingComponent
            ],
        })
    ], DxoScrollingModule);
    return DxoScrollingModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoTextBoxOptions = /** @class */ (function (_super) {
    __extends(DxoTextBoxOptions, _super);
    function DxoTextBoxOptions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DxoTextBoxOptions.prototype, "accessKey", {
        get: function () {
            return this._getOption('accessKey');
        },
        set: function (value) {
            this._setOption('accessKey', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "activeStateEnabled", {
        get: function () {
            return this._getOption('activeStateEnabled');
        },
        set: function (value) {
            this._setOption('activeStateEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "buttons", {
        get: function () {
            return this._getOption('buttons');
        },
        set: function (value) {
            this._setOption('buttons', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "disabled", {
        get: function () {
            return this._getOption('disabled');
        },
        set: function (value) {
            this._setOption('disabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "elementAttr", {
        get: function () {
            return this._getOption('elementAttr');
        },
        set: function (value) {
            this._setOption('elementAttr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "focusStateEnabled", {
        get: function () {
            return this._getOption('focusStateEnabled');
        },
        set: function (value) {
            this._setOption('focusStateEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "height", {
        get: function () {
            return this._getOption('height');
        },
        set: function (value) {
            this._setOption('height', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "hint", {
        get: function () {
            return this._getOption('hint');
        },
        set: function (value) {
            this._setOption('hint', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "hoverStateEnabled", {
        get: function () {
            return this._getOption('hoverStateEnabled');
        },
        set: function (value) {
            this._setOption('hoverStateEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "inputAttr", {
        get: function () {
            return this._getOption('inputAttr');
        },
        set: function (value) {
            this._setOption('inputAttr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "isValid", {
        get: function () {
            return this._getOption('isValid');
        },
        set: function (value) {
            this._setOption('isValid', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "mask", {
        get: function () {
            return this._getOption('mask');
        },
        set: function (value) {
            this._setOption('mask', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "maskChar", {
        get: function () {
            return this._getOption('maskChar');
        },
        set: function (value) {
            this._setOption('maskChar', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "maskInvalidMessage", {
        get: function () {
            return this._getOption('maskInvalidMessage');
        },
        set: function (value) {
            this._setOption('maskInvalidMessage', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "maskRules", {
        get: function () {
            return this._getOption('maskRules');
        },
        set: function (value) {
            this._setOption('maskRules', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "maxLength", {
        get: function () {
            return this._getOption('maxLength');
        },
        set: function (value) {
            this._setOption('maxLength', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "mode", {
        get: function () {
            return this._getOption('mode');
        },
        set: function (value) {
            this._setOption('mode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "name", {
        get: function () {
            return this._getOption('name');
        },
        set: function (value) {
            this._setOption('name', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "onChange", {
        get: function () {
            return this._getOption('onChange');
        },
        set: function (value) {
            this._setOption('onChange', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "onContentReady", {
        get: function () {
            return this._getOption('onContentReady');
        },
        set: function (value) {
            this._setOption('onContentReady', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "onCopy", {
        get: function () {
            return this._getOption('onCopy');
        },
        set: function (value) {
            this._setOption('onCopy', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "onCut", {
        get: function () {
            return this._getOption('onCut');
        },
        set: function (value) {
            this._setOption('onCut', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "onDisposing", {
        get: function () {
            return this._getOption('onDisposing');
        },
        set: function (value) {
            this._setOption('onDisposing', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "onEnterKey", {
        get: function () {
            return this._getOption('onEnterKey');
        },
        set: function (value) {
            this._setOption('onEnterKey', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "onFocusIn", {
        get: function () {
            return this._getOption('onFocusIn');
        },
        set: function (value) {
            this._setOption('onFocusIn', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "onFocusOut", {
        get: function () {
            return this._getOption('onFocusOut');
        },
        set: function (value) {
            this._setOption('onFocusOut', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "onInitialized", {
        get: function () {
            return this._getOption('onInitialized');
        },
        set: function (value) {
            this._setOption('onInitialized', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "onInput", {
        get: function () {
            return this._getOption('onInput');
        },
        set: function (value) {
            this._setOption('onInput', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "onKeyDown", {
        get: function () {
            return this._getOption('onKeyDown');
        },
        set: function (value) {
            this._setOption('onKeyDown', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "onKeyPress", {
        get: function () {
            return this._getOption('onKeyPress');
        },
        set: function (value) {
            this._setOption('onKeyPress', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "onKeyUp", {
        get: function () {
            return this._getOption('onKeyUp');
        },
        set: function (value) {
            this._setOption('onKeyUp', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "onOptionChanged", {
        get: function () {
            return this._getOption('onOptionChanged');
        },
        set: function (value) {
            this._setOption('onOptionChanged', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "onPaste", {
        get: function () {
            return this._getOption('onPaste');
        },
        set: function (value) {
            this._setOption('onPaste', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "onValueChanged", {
        get: function () {
            return this._getOption('onValueChanged');
        },
        set: function (value) {
            this._setOption('onValueChanged', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "placeholder", {
        get: function () {
            return this._getOption('placeholder');
        },
        set: function (value) {
            this._setOption('placeholder', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "readOnly", {
        get: function () {
            return this._getOption('readOnly');
        },
        set: function (value) {
            this._setOption('readOnly', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "rtlEnabled", {
        get: function () {
            return this._getOption('rtlEnabled');
        },
        set: function (value) {
            this._setOption('rtlEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "showClearButton", {
        get: function () {
            return this._getOption('showClearButton');
        },
        set: function (value) {
            this._setOption('showClearButton', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "showMaskMode", {
        get: function () {
            return this._getOption('showMaskMode');
        },
        set: function (value) {
            this._setOption('showMaskMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "spellcheck", {
        get: function () {
            return this._getOption('spellcheck');
        },
        set: function (value) {
            this._setOption('spellcheck', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "stylingMode", {
        get: function () {
            return this._getOption('stylingMode');
        },
        set: function (value) {
            this._setOption('stylingMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "tabIndex", {
        get: function () {
            return this._getOption('tabIndex');
        },
        set: function (value) {
            this._setOption('tabIndex', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "text", {
        get: function () {
            return this._getOption('text');
        },
        set: function (value) {
            this._setOption('text', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "useMaskedValue", {
        get: function () {
            return this._getOption('useMaskedValue');
        },
        set: function (value) {
            this._setOption('useMaskedValue', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "validationError", {
        get: function () {
            return this._getOption('validationError');
        },
        set: function (value) {
            this._setOption('validationError', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "validationErrors", {
        get: function () {
            return this._getOption('validationErrors');
        },
        set: function (value) {
            this._setOption('validationErrors', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "validationMessageMode", {
        get: function () {
            return this._getOption('validationMessageMode');
        },
        set: function (value) {
            this._setOption('validationMessageMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "validationStatus", {
        get: function () {
            return this._getOption('validationStatus');
        },
        set: function (value) {
            this._setOption('validationStatus', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "value", {
        get: function () {
            return this._getOption('value');
        },
        set: function (value) {
            this._setOption('value', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "valueChangeEvent", {
        get: function () {
            return this._getOption('valueChangeEvent');
        },
        set: function (value) {
            this._setOption('valueChangeEvent', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextBoxOptions.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    return DxoTextBoxOptions;
}(NestedOption));

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoSearchEditorOptionsComponent = /** @class */ (function (_super) {
    __extends(DxoSearchEditorOptionsComponent, _super);
    function DxoSearchEditorOptionsComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        _this._createEventEmitters([
            { emit: 'textChange' },
            { emit: 'valueChange' }
        ]);
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoSearchEditorOptionsComponent.prototype, "_optionPath", {
        get: function () {
            return 'searchEditorOptions';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSearchEditorOptionsComponent.prototype, "buttonsChildren", {
        get: function () {
            return this._getOption('buttons');
        },
        set: function (value) {
            this.setChildren('buttons', value);
        },
        enumerable: true,
        configurable: true
    });
    DxoSearchEditorOptionsComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoSearchEditorOptionsComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoSearchEditorOptionsComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxoSearchEditorOptionsComponent.prototype, "textChange", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxoSearchEditorOptionsComponent.prototype, "valueChange", void 0);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiButtonComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxoSearchEditorOptionsComponent.prototype, "buttonsChildren", null);
    DxoSearchEditorOptionsComponent = __decorate([
        Component({
            selector: 'dxo-search-editor-options',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'accessKey',
                'activeStateEnabled',
                'buttons',
                'disabled',
                'elementAttr',
                'focusStateEnabled',
                'height',
                'hint',
                'hoverStateEnabled',
                'inputAttr',
                'isValid',
                'mask',
                'maskChar',
                'maskInvalidMessage',
                'maskRules',
                'maxLength',
                'mode',
                'name',
                'onChange',
                'onContentReady',
                'onCopy',
                'onCut',
                'onDisposing',
                'onEnterKey',
                'onFocusIn',
                'onFocusOut',
                'onInitialized',
                'onInput',
                'onKeyDown',
                'onKeyPress',
                'onKeyUp',
                'onOptionChanged',
                'onPaste',
                'onValueChanged',
                'placeholder',
                'readOnly',
                'rtlEnabled',
                'showClearButton',
                'showMaskMode',
                'spellcheck',
                'stylingMode',
                'tabIndex',
                'text',
                'useMaskedValue',
                'validationError',
                'validationErrors',
                'validationMessageMode',
                'validationStatus',
                'value',
                'valueChangeEvent',
                'visible',
                'width'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoSearchEditorOptionsComponent);
    return DxoSearchEditorOptionsComponent;
}(DxoTextBoxOptions));
var DxoSearchEditorOptionsModule = /** @class */ (function () {
    function DxoSearchEditorOptionsModule() {
    }
    DxoSearchEditorOptionsModule = __decorate([
        NgModule({
            declarations: [
                DxoSearchEditorOptionsComponent
            ],
            exports: [
                DxoSearchEditorOptionsComponent
            ],
        })
    ], DxoSearchEditorOptionsModule);
    return DxoSearchEditorOptionsModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoSearchPanelComponent = /** @class */ (function (_super) {
    __extends(DxoSearchPanelComponent, _super);
    function DxoSearchPanelComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        _this._createEventEmitters([
            { emit: 'textChange' }
        ]);
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoSearchPanelComponent.prototype, "highlightCaseSensitive", {
        get: function () {
            return this._getOption('highlightCaseSensitive');
        },
        set: function (value) {
            this._setOption('highlightCaseSensitive', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSearchPanelComponent.prototype, "highlightSearchText", {
        get: function () {
            return this._getOption('highlightSearchText');
        },
        set: function (value) {
            this._setOption('highlightSearchText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSearchPanelComponent.prototype, "placeholder", {
        get: function () {
            return this._getOption('placeholder');
        },
        set: function (value) {
            this._setOption('placeholder', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSearchPanelComponent.prototype, "searchVisibleColumnsOnly", {
        get: function () {
            return this._getOption('searchVisibleColumnsOnly');
        },
        set: function (value) {
            this._setOption('searchVisibleColumnsOnly', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSearchPanelComponent.prototype, "text", {
        get: function () {
            return this._getOption('text');
        },
        set: function (value) {
            this._setOption('text', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSearchPanelComponent.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSearchPanelComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSearchPanelComponent.prototype, "_optionPath", {
        get: function () {
            return 'searchPanel';
        },
        enumerable: true,
        configurable: true
    });
    DxoSearchPanelComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoSearchPanelComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoSearchPanelComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoSearchPanelComponent.prototype, "highlightCaseSensitive", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoSearchPanelComponent.prototype, "highlightSearchText", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoSearchPanelComponent.prototype, "placeholder", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoSearchPanelComponent.prototype, "searchVisibleColumnsOnly", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoSearchPanelComponent.prototype, "text", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoSearchPanelComponent.prototype, "visible", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoSearchPanelComponent.prototype, "width", null);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxoSearchPanelComponent.prototype, "textChange", void 0);
    DxoSearchPanelComponent = __decorate([
        Component({
            selector: 'dxo-search-panel',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoSearchPanelComponent);
    return DxoSearchPanelComponent;
}(NestedOption));
var DxoSearchPanelModule = /** @class */ (function () {
    function DxoSearchPanelModule() {
    }
    DxoSearchPanelModule = __decorate([
        NgModule({
            declarations: [
                DxoSearchPanelComponent
            ],
            exports: [
                DxoSearchPanelComponent
            ],
        })
    ], DxoSearchPanelModule);
    return DxoSearchPanelModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoSelectionStyleComponent = /** @class */ (function (_super) {
    __extends(DxoSelectionStyleComponent, _super);
    function DxoSelectionStyleComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoSelectionStyleComponent.prototype, "border", {
        get: function () {
            return this._getOption('border');
        },
        set: function (value) {
            this._setOption('border', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSelectionStyleComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSelectionStyleComponent.prototype, "size", {
        get: function () {
            return this._getOption('size');
        },
        set: function (value) {
            this._setOption('size', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSelectionStyleComponent.prototype, "dashStyle", {
        get: function () {
            return this._getOption('dashStyle');
        },
        set: function (value) {
            this._setOption('dashStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSelectionStyleComponent.prototype, "hatching", {
        get: function () {
            return this._getOption('hatching');
        },
        set: function (value) {
            this._setOption('hatching', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSelectionStyleComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSelectionStyleComponent.prototype, "_optionPath", {
        get: function () {
            return 'selectionStyle';
        },
        enumerable: true,
        configurable: true
    });
    DxoSelectionStyleComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoSelectionStyleComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoSelectionStyleComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoSelectionStyleComponent.prototype, "border", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoSelectionStyleComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoSelectionStyleComponent.prototype, "size", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoSelectionStyleComponent.prototype, "dashStyle", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoSelectionStyleComponent.prototype, "hatching", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoSelectionStyleComponent.prototype, "width", null);
    DxoSelectionStyleComponent = __decorate([
        Component({
            selector: 'dxo-selection-style',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoSelectionStyleComponent);
    return DxoSelectionStyleComponent;
}(NestedOption));
var DxoSelectionStyleModule = /** @class */ (function () {
    function DxoSelectionStyleModule() {
    }
    DxoSelectionStyleModule = __decorate([
        NgModule({
            declarations: [
                DxoSelectionStyleComponent
            ],
            exports: [
                DxoSelectionStyleComponent
            ],
        })
    ], DxoSelectionStyleModule);
    return DxoSelectionStyleModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoSelectionComponent = /** @class */ (function (_super) {
    __extends(DxoSelectionComponent, _super);
    function DxoSelectionComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoSelectionComponent.prototype, "allowSelectAll", {
        get: function () {
            return this._getOption('allowSelectAll');
        },
        set: function (value) {
            this._setOption('allowSelectAll', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSelectionComponent.prototype, "deferred", {
        get: function () {
            return this._getOption('deferred');
        },
        set: function (value) {
            this._setOption('deferred', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSelectionComponent.prototype, "mode", {
        get: function () {
            return this._getOption('mode');
        },
        set: function (value) {
            this._setOption('mode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSelectionComponent.prototype, "selectAllMode", {
        get: function () {
            return this._getOption('selectAllMode');
        },
        set: function (value) {
            this._setOption('selectAllMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSelectionComponent.prototype, "showCheckBoxesMode", {
        get: function () {
            return this._getOption('showCheckBoxesMode');
        },
        set: function (value) {
            this._setOption('showCheckBoxesMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSelectionComponent.prototype, "recursive", {
        get: function () {
            return this._getOption('recursive');
        },
        set: function (value) {
            this._setOption('recursive', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSelectionComponent.prototype, "_optionPath", {
        get: function () {
            return 'selection';
        },
        enumerable: true,
        configurable: true
    });
    DxoSelectionComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoSelectionComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoSelectionComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoSelectionComponent.prototype, "allowSelectAll", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoSelectionComponent.prototype, "deferred", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoSelectionComponent.prototype, "mode", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoSelectionComponent.prototype, "selectAllMode", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoSelectionComponent.prototype, "showCheckBoxesMode", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoSelectionComponent.prototype, "recursive", null);
    DxoSelectionComponent = __decorate([
        Component({
            selector: 'dxo-selection',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoSelectionComponent);
    return DxoSelectionComponent;
}(NestedOption));
var DxoSelectionModule = /** @class */ (function () {
    function DxoSelectionModule() {
    }
    DxoSelectionModule = __decorate([
        NgModule({
            declarations: [
                DxoSelectionComponent
            ],
            exports: [
                DxoSelectionComponent
            ],
        })
    ], DxoSelectionModule);
    return DxoSelectionModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoSeriesTemplateComponent = /** @class */ (function (_super) {
    __extends(DxoSeriesTemplateComponent, _super);
    function DxoSeriesTemplateComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoSeriesTemplateComponent.prototype, "customizeSeries", {
        get: function () {
            return this._getOption('customizeSeries');
        },
        set: function (value) {
            this._setOption('customizeSeries', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSeriesTemplateComponent.prototype, "nameField", {
        get: function () {
            return this._getOption('nameField');
        },
        set: function (value) {
            this._setOption('nameField', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSeriesTemplateComponent.prototype, "_optionPath", {
        get: function () {
            return 'seriesTemplate';
        },
        enumerable: true,
        configurable: true
    });
    DxoSeriesTemplateComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoSeriesTemplateComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoSeriesTemplateComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxoSeriesTemplateComponent.prototype, "customizeSeries", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoSeriesTemplateComponent.prototype, "nameField", null);
    DxoSeriesTemplateComponent = __decorate([
        Component({
            selector: 'dxo-series-template',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoSeriesTemplateComponent);
    return DxoSeriesTemplateComponent;
}(NestedOption));
var DxoSeriesTemplateModule = /** @class */ (function () {
    function DxoSeriesTemplateModule() {
    }
    DxoSeriesTemplateModule = __decorate([
        NgModule({
            declarations: [
                DxoSeriesTemplateComponent
            ],
            exports: [
                DxoSeriesTemplateComponent
            ],
        })
    ], DxoSeriesTemplateModule);
    return DxoSeriesTemplateModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoShadowComponent = /** @class */ (function (_super) {
    __extends(DxoShadowComponent, _super);
    function DxoShadowComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoShadowComponent.prototype, "blur", {
        get: function () {
            return this._getOption('blur');
        },
        set: function (value) {
            this._setOption('blur', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoShadowComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoShadowComponent.prototype, "offsetX", {
        get: function () {
            return this._getOption('offsetX');
        },
        set: function (value) {
            this._setOption('offsetX', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoShadowComponent.prototype, "offsetY", {
        get: function () {
            return this._getOption('offsetY');
        },
        set: function (value) {
            this._setOption('offsetY', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoShadowComponent.prototype, "opacity", {
        get: function () {
            return this._getOption('opacity');
        },
        set: function (value) {
            this._setOption('opacity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoShadowComponent.prototype, "_optionPath", {
        get: function () {
            return 'shadow';
        },
        enumerable: true,
        configurable: true
    });
    DxoShadowComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoShadowComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoShadowComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoShadowComponent.prototype, "blur", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoShadowComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoShadowComponent.prototype, "offsetX", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoShadowComponent.prototype, "offsetY", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoShadowComponent.prototype, "opacity", null);
    DxoShadowComponent = __decorate([
        Component({
            selector: 'dxo-shadow',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoShadowComponent);
    return DxoShadowComponent;
}(NestedOption));
var DxoShadowModule = /** @class */ (function () {
    function DxoShadowModule() {
    }
    DxoShadowModule = __decorate([
        NgModule({
            declarations: [
                DxoShadowComponent
            ],
            exports: [
                DxoShadowComponent
            ],
        })
    ], DxoShadowModule);
    return DxoShadowModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoShowEventComponent = /** @class */ (function (_super) {
    __extends(DxoShowEventComponent, _super);
    function DxoShowEventComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoShowEventComponent.prototype, "delay", {
        get: function () {
            return this._getOption('delay');
        },
        set: function (value) {
            this._setOption('delay', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoShowEventComponent.prototype, "name", {
        get: function () {
            return this._getOption('name');
        },
        set: function (value) {
            this._setOption('name', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoShowEventComponent.prototype, "_optionPath", {
        get: function () {
            return 'showEvent';
        },
        enumerable: true,
        configurable: true
    });
    DxoShowEventComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoShowEventComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoShowEventComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoShowEventComponent.prototype, "delay", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoShowEventComponent.prototype, "name", null);
    DxoShowEventComponent = __decorate([
        Component({
            selector: 'dxo-show-event',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoShowEventComponent);
    return DxoShowEventComponent;
}(NestedOption));
var DxoShowEventModule = /** @class */ (function () {
    function DxoShowEventModule() {
    }
    DxoShowEventModule = __decorate([
        NgModule({
            declarations: [
                DxoShowEventComponent
            ],
            exports: [
                DxoShowEventComponent
            ],
        })
    ], DxoShowEventModule);
    return DxoShowEventModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoShowFirstSubmenuModeComponent = /** @class */ (function (_super) {
    __extends(DxoShowFirstSubmenuModeComponent, _super);
    function DxoShowFirstSubmenuModeComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoShowFirstSubmenuModeComponent.prototype, "delay", {
        get: function () {
            return this._getOption('delay');
        },
        set: function (value) {
            this._setOption('delay', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoShowFirstSubmenuModeComponent.prototype, "name", {
        get: function () {
            return this._getOption('name');
        },
        set: function (value) {
            this._setOption('name', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoShowFirstSubmenuModeComponent.prototype, "_optionPath", {
        get: function () {
            return 'showFirstSubmenuMode';
        },
        enumerable: true,
        configurable: true
    });
    DxoShowFirstSubmenuModeComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoShowFirstSubmenuModeComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoShowFirstSubmenuModeComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoShowFirstSubmenuModeComponent.prototype, "delay", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoShowFirstSubmenuModeComponent.prototype, "name", null);
    DxoShowFirstSubmenuModeComponent = __decorate([
        Component({
            selector: 'dxo-show-first-submenu-mode',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoShowFirstSubmenuModeComponent);
    return DxoShowFirstSubmenuModeComponent;
}(NestedOption));
var DxoShowFirstSubmenuModeModule = /** @class */ (function () {
    function DxoShowFirstSubmenuModeModule() {
    }
    DxoShowFirstSubmenuModeModule = __decorate([
        NgModule({
            declarations: [
                DxoShowFirstSubmenuModeComponent
            ],
            exports: [
                DxoShowFirstSubmenuModeComponent
            ],
        })
    ], DxoShowFirstSubmenuModeModule);
    return DxoShowFirstSubmenuModeModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoShowSubmenuModeComponent = /** @class */ (function (_super) {
    __extends(DxoShowSubmenuModeComponent, _super);
    function DxoShowSubmenuModeComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoShowSubmenuModeComponent.prototype, "delay", {
        get: function () {
            return this._getOption('delay');
        },
        set: function (value) {
            this._setOption('delay', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoShowSubmenuModeComponent.prototype, "name", {
        get: function () {
            return this._getOption('name');
        },
        set: function (value) {
            this._setOption('name', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoShowSubmenuModeComponent.prototype, "_optionPath", {
        get: function () {
            return 'showSubmenuMode';
        },
        enumerable: true,
        configurable: true
    });
    DxoShowSubmenuModeComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoShowSubmenuModeComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoShowSubmenuModeComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoShowSubmenuModeComponent.prototype, "delay", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoShowSubmenuModeComponent.prototype, "name", null);
    DxoShowSubmenuModeComponent = __decorate([
        Component({
            selector: 'dxo-show-submenu-mode',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoShowSubmenuModeComponent);
    return DxoShowSubmenuModeComponent;
}(NestedOption));
var DxoShowSubmenuModeModule = /** @class */ (function () {
    function DxoShowSubmenuModeModule() {
    }
    DxoShowSubmenuModeModule = __decorate([
        NgModule({
            declarations: [
                DxoShowSubmenuModeComponent
            ],
            exports: [
                DxoShowSubmenuModeComponent
            ],
        })
    ], DxoShowSubmenuModeModule);
    return DxoShowSubmenuModeModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoShowComponent = /** @class */ (function (_super) {
    __extends(DxoShowComponent, _super);
    function DxoShowComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoShowComponent.prototype, "_optionPath", {
        get: function () {
            return 'show';
        },
        enumerable: true,
        configurable: true
    });
    DxoShowComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoShowComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoShowComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoShowComponent = __decorate([
        Component({
            selector: 'dxo-show',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'complete',
                'delay',
                'direction',
                'duration',
                'easing',
                'from',
                'staggerDelay',
                'start',
                'to',
                'type'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoShowComponent);
    return DxoShowComponent;
}(DxoAnimationConfig));
var DxoShowModule = /** @class */ (function () {
    function DxoShowModule() {
    }
    DxoShowModule = __decorate([
        NgModule({
            declarations: [
                DxoShowComponent
            ],
            exports: [
                DxoShowComponent
            ],
        })
    ], DxoShowModule);
    return DxoShowModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoShutterComponent = /** @class */ (function (_super) {
    __extends(DxoShutterComponent, _super);
    function DxoShutterComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoShutterComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoShutterComponent.prototype, "opacity", {
        get: function () {
            return this._getOption('opacity');
        },
        set: function (value) {
            this._setOption('opacity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoShutterComponent.prototype, "_optionPath", {
        get: function () {
            return 'shutter';
        },
        enumerable: true,
        configurable: true
    });
    DxoShutterComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoShutterComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoShutterComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoShutterComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoShutterComponent.prototype, "opacity", null);
    DxoShutterComponent = __decorate([
        Component({
            selector: 'dxo-shutter',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoShutterComponent);
    return DxoShutterComponent;
}(NestedOption));
var DxoShutterModule = /** @class */ (function () {
    function DxoShutterModule() {
    }
    DxoShutterModule = __decorate([
        NgModule({
            declarations: [
                DxoShutterComponent
            ],
            exports: [
                DxoShutterComponent
            ],
        })
    ], DxoShutterModule);
    return DxoShutterModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoSizeComponent = /** @class */ (function (_super) {
    __extends(DxoSizeComponent, _super);
    function DxoSizeComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoSizeComponent.prototype, "height", {
        get: function () {
            return this._getOption('height');
        },
        set: function (value) {
            this._setOption('height', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSizeComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSizeComponent.prototype, "_optionPath", {
        get: function () {
            return 'size';
        },
        enumerable: true,
        configurable: true
    });
    DxoSizeComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoSizeComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoSizeComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoSizeComponent.prototype, "height", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoSizeComponent.prototype, "width", null);
    DxoSizeComponent = __decorate([
        Component({
            selector: 'dxo-size',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoSizeComponent);
    return DxoSizeComponent;
}(NestedOption));
var DxoSizeModule = /** @class */ (function () {
    function DxoSizeModule() {
    }
    DxoSizeModule = __decorate([
        NgModule({
            declarations: [
                DxoSizeComponent
            ],
            exports: [
                DxoSizeComponent
            ],
        })
    ], DxoSizeModule);
    return DxoSizeModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoSliderHandleComponent = /** @class */ (function (_super) {
    __extends(DxoSliderHandleComponent, _super);
    function DxoSliderHandleComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoSliderHandleComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSliderHandleComponent.prototype, "opacity", {
        get: function () {
            return this._getOption('opacity');
        },
        set: function (value) {
            this._setOption('opacity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSliderHandleComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSliderHandleComponent.prototype, "_optionPath", {
        get: function () {
            return 'sliderHandle';
        },
        enumerable: true,
        configurable: true
    });
    DxoSliderHandleComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoSliderHandleComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoSliderHandleComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoSliderHandleComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoSliderHandleComponent.prototype, "opacity", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoSliderHandleComponent.prototype, "width", null);
    DxoSliderHandleComponent = __decorate([
        Component({
            selector: 'dxo-slider-handle',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoSliderHandleComponent);
    return DxoSliderHandleComponent;
}(NestedOption));
var DxoSliderHandleModule = /** @class */ (function () {
    function DxoSliderHandleModule() {
    }
    DxoSliderHandleModule = __decorate([
        NgModule({
            declarations: [
                DxoSliderHandleComponent
            ],
            exports: [
                DxoSliderHandleComponent
            ],
        })
    ], DxoSliderHandleModule);
    return DxoSliderHandleModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoSliderMarkerComponent = /** @class */ (function (_super) {
    __extends(DxoSliderMarkerComponent, _super);
    function DxoSliderMarkerComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoSliderMarkerComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSliderMarkerComponent.prototype, "customizeText", {
        get: function () {
            return this._getOption('customizeText');
        },
        set: function (value) {
            this._setOption('customizeText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSliderMarkerComponent.prototype, "font", {
        get: function () {
            return this._getOption('font');
        },
        set: function (value) {
            this._setOption('font', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSliderMarkerComponent.prototype, "format", {
        get: function () {
            return this._getOption('format');
        },
        set: function (value) {
            this._setOption('format', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSliderMarkerComponent.prototype, "invalidRangeColor", {
        get: function () {
            return this._getOption('invalidRangeColor');
        },
        set: function (value) {
            this._setOption('invalidRangeColor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSliderMarkerComponent.prototype, "paddingLeftRight", {
        get: function () {
            return this._getOption('paddingLeftRight');
        },
        set: function (value) {
            this._setOption('paddingLeftRight', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSliderMarkerComponent.prototype, "paddingTopBottom", {
        get: function () {
            return this._getOption('paddingTopBottom');
        },
        set: function (value) {
            this._setOption('paddingTopBottom', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSliderMarkerComponent.prototype, "placeholderHeight", {
        get: function () {
            return this._getOption('placeholderHeight');
        },
        set: function (value) {
            this._setOption('placeholderHeight', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSliderMarkerComponent.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSliderMarkerComponent.prototype, "_optionPath", {
        get: function () {
            return 'sliderMarker';
        },
        enumerable: true,
        configurable: true
    });
    DxoSliderMarkerComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoSliderMarkerComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoSliderMarkerComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoSliderMarkerComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxoSliderMarkerComponent.prototype, "customizeText", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoSliderMarkerComponent.prototype, "font", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoSliderMarkerComponent.prototype, "format", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoSliderMarkerComponent.prototype, "invalidRangeColor", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoSliderMarkerComponent.prototype, "paddingLeftRight", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoSliderMarkerComponent.prototype, "paddingTopBottom", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoSliderMarkerComponent.prototype, "placeholderHeight", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoSliderMarkerComponent.prototype, "visible", null);
    DxoSliderMarkerComponent = __decorate([
        Component({
            selector: 'dxo-slider-marker',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoSliderMarkerComponent);
    return DxoSliderMarkerComponent;
}(NestedOption));
var DxoSliderMarkerModule = /** @class */ (function () {
    function DxoSliderMarkerModule() {
    }
    DxoSliderMarkerModule = __decorate([
        NgModule({
            declarations: [
                DxoSliderMarkerComponent
            ],
            exports: [
                DxoSliderMarkerComponent
            ],
        })
    ], DxoSliderMarkerModule);
    return DxoSliderMarkerModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoSmallValuesGroupingComponent = /** @class */ (function (_super) {
    __extends(DxoSmallValuesGroupingComponent, _super);
    function DxoSmallValuesGroupingComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoSmallValuesGroupingComponent.prototype, "groupName", {
        get: function () {
            return this._getOption('groupName');
        },
        set: function (value) {
            this._setOption('groupName', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSmallValuesGroupingComponent.prototype, "mode", {
        get: function () {
            return this._getOption('mode');
        },
        set: function (value) {
            this._setOption('mode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSmallValuesGroupingComponent.prototype, "threshold", {
        get: function () {
            return this._getOption('threshold');
        },
        set: function (value) {
            this._setOption('threshold', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSmallValuesGroupingComponent.prototype, "topCount", {
        get: function () {
            return this._getOption('topCount');
        },
        set: function (value) {
            this._setOption('topCount', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSmallValuesGroupingComponent.prototype, "_optionPath", {
        get: function () {
            return 'smallValuesGrouping';
        },
        enumerable: true,
        configurable: true
    });
    DxoSmallValuesGroupingComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoSmallValuesGroupingComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoSmallValuesGroupingComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoSmallValuesGroupingComponent.prototype, "groupName", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoSmallValuesGroupingComponent.prototype, "mode", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoSmallValuesGroupingComponent.prototype, "threshold", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoSmallValuesGroupingComponent.prototype, "topCount", null);
    DxoSmallValuesGroupingComponent = __decorate([
        Component({
            selector: 'dxo-small-values-grouping',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoSmallValuesGroupingComponent);
    return DxoSmallValuesGroupingComponent;
}(NestedOption));
var DxoSmallValuesGroupingModule = /** @class */ (function () {
    function DxoSmallValuesGroupingModule() {
    }
    DxoSmallValuesGroupingModule = __decorate([
        NgModule({
            declarations: [
                DxoSmallValuesGroupingComponent
            ],
            exports: [
                DxoSmallValuesGroupingComponent
            ],
        })
    ], DxoSmallValuesGroupingModule);
    return DxoSmallValuesGroupingModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiSortByGroupSummaryInfoComponent = /** @class */ (function (_super) {
    __extends(DxiSortByGroupSummaryInfoComponent, _super);
    function DxiSortByGroupSummaryInfoComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiSortByGroupSummaryInfoComponent.prototype, "groupColumn", {
        get: function () {
            return this._getOption('groupColumn');
        },
        set: function (value) {
            this._setOption('groupColumn', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiSortByGroupSummaryInfoComponent.prototype, "sortOrder", {
        get: function () {
            return this._getOption('sortOrder');
        },
        set: function (value) {
            this._setOption('sortOrder', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiSortByGroupSummaryInfoComponent.prototype, "summaryItem", {
        get: function () {
            return this._getOption('summaryItem');
        },
        set: function (value) {
            this._setOption('summaryItem', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiSortByGroupSummaryInfoComponent.prototype, "_optionPath", {
        get: function () {
            return 'sortByGroupSummaryInfo';
        },
        enumerable: true,
        configurable: true
    });
    DxiSortByGroupSummaryInfoComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiSortByGroupSummaryInfoComponent.prototype, "groupColumn", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiSortByGroupSummaryInfoComponent.prototype, "sortOrder", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiSortByGroupSummaryInfoComponent.prototype, "summaryItem", null);
    DxiSortByGroupSummaryInfoComponent = __decorate([
        Component({
            selector: 'dxi-sort-by-group-summary-info',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiSortByGroupSummaryInfoComponent);
    return DxiSortByGroupSummaryInfoComponent;
}(CollectionNestedOption));
var DxiSortByGroupSummaryInfoModule = /** @class */ (function () {
    function DxiSortByGroupSummaryInfoModule() {
    }
    DxiSortByGroupSummaryInfoModule = __decorate([
        NgModule({
            declarations: [
                DxiSortByGroupSummaryInfoComponent
            ],
            exports: [
                DxiSortByGroupSummaryInfoComponent
            ],
        })
    ], DxiSortByGroupSummaryInfoModule);
    return DxiSortByGroupSummaryInfoModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoSortingComponent = /** @class */ (function (_super) {
    __extends(DxoSortingComponent, _super);
    function DxoSortingComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoSortingComponent.prototype, "ascendingText", {
        get: function () {
            return this._getOption('ascendingText');
        },
        set: function (value) {
            this._setOption('ascendingText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSortingComponent.prototype, "clearText", {
        get: function () {
            return this._getOption('clearText');
        },
        set: function (value) {
            this._setOption('clearText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSortingComponent.prototype, "descendingText", {
        get: function () {
            return this._getOption('descendingText');
        },
        set: function (value) {
            this._setOption('descendingText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSortingComponent.prototype, "mode", {
        get: function () {
            return this._getOption('mode');
        },
        set: function (value) {
            this._setOption('mode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSortingComponent.prototype, "showSortIndexes", {
        get: function () {
            return this._getOption('showSortIndexes');
        },
        set: function (value) {
            this._setOption('showSortIndexes', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSortingComponent.prototype, "_optionPath", {
        get: function () {
            return 'sorting';
        },
        enumerable: true,
        configurable: true
    });
    DxoSortingComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoSortingComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoSortingComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoSortingComponent.prototype, "ascendingText", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoSortingComponent.prototype, "clearText", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoSortingComponent.prototype, "descendingText", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoSortingComponent.prototype, "mode", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoSortingComponent.prototype, "showSortIndexes", null);
    DxoSortingComponent = __decorate([
        Component({
            selector: 'dxo-sorting',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoSortingComponent);
    return DxoSortingComponent;
}(NestedOption));
var DxoSortingModule = /** @class */ (function () {
    function DxoSortingModule() {
    }
    DxoSortingModule = __decorate([
        NgModule({
            declarations: [
                DxoSortingComponent
            ],
            exports: [
                DxoSortingComponent
            ],
        })
    ], DxoSortingModule);
    return DxoSortingModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoSourceComponent = /** @class */ (function (_super) {
    __extends(DxoSourceComponent, _super);
    function DxoSourceComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoSourceComponent.prototype, "grouping", {
        get: function () {
            return this._getOption('grouping');
        },
        set: function (value) {
            this._setOption('grouping', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSourceComponent.prototype, "layer", {
        get: function () {
            return this._getOption('layer');
        },
        set: function (value) {
            this._setOption('layer', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSourceComponent.prototype, "_optionPath", {
        get: function () {
            return 'source';
        },
        enumerable: true,
        configurable: true
    });
    DxoSourceComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoSourceComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoSourceComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoSourceComponent.prototype, "grouping", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoSourceComponent.prototype, "layer", null);
    DxoSourceComponent = __decorate([
        Component({
            selector: 'dxo-source',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoSourceComponent);
    return DxoSourceComponent;
}(NestedOption));
var DxoSourceModule = /** @class */ (function () {
    function DxoSourceModule() {
    }
    DxoSourceModule = __decorate([
        NgModule({
            declarations: [
                DxoSourceComponent
            ],
            exports: [
                DxoSourceComponent
            ],
        })
    ], DxoSourceModule);
    return DxoSourceModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoSplineComponent = /** @class */ (function (_super) {
    __extends(DxoSplineComponent, _super);
    function DxoSplineComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoSplineComponent.prototype, "_optionPath", {
        get: function () {
            return 'spline';
        },
        enumerable: true,
        configurable: true
    });
    DxoSplineComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoSplineComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoSplineComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoSplineComponent = __decorate([
        Component({
            selector: 'dxo-spline',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'aggregation',
                'area',
                'argumentField',
                'axis',
                'bar',
                'barOverlapGroup',
                'barPadding',
                'barWidth',
                'border',
                'bubble',
                'candlestick',
                'closeValueField',
                'color',
                'cornerRadius',
                'dashStyle',
                'fullstackedarea',
                'fullstackedbar',
                'fullstackedline',
                'fullstackedspline',
                'fullstackedsplinearea',
                'highValueField',
                'hoverMode',
                'hoverStyle',
                'ignoreEmptyPoints',
                'innerColor',
                'label',
                'line',
                'lowValueField',
                'maxLabelCount',
                'minBarSize',
                'opacity',
                'openValueField',
                'pane',
                'point',
                'rangearea',
                'rangebar',
                'rangeValue1Field',
                'rangeValue2Field',
                'reduction',
                'scatter',
                'selectionMode',
                'selectionStyle',
                'showInLegend',
                'sizeField',
                'spline',
                'splinearea',
                'stack',
                'stackedarea',
                'stackedbar',
                'stackedline',
                'stackedspline',
                'stackedsplinearea',
                'steparea',
                'stepline',
                'stock',
                'tagField',
                'type',
                'valueErrorBar',
                'valueField',
                'visible',
                'width'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoSplineComponent);
    return DxoSplineComponent;
}(DxoChartCommonSeriesSettings));
var DxoSplineModule = /** @class */ (function () {
    function DxoSplineModule() {
    }
    DxoSplineModule = __decorate([
        NgModule({
            declarations: [
                DxoSplineComponent
            ],
            exports: [
                DxoSplineComponent
            ],
        })
    ], DxoSplineModule);
    return DxoSplineModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoSplineareaComponent = /** @class */ (function (_super) {
    __extends(DxoSplineareaComponent, _super);
    function DxoSplineareaComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoSplineareaComponent.prototype, "_optionPath", {
        get: function () {
            return 'splinearea';
        },
        enumerable: true,
        configurable: true
    });
    DxoSplineareaComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoSplineareaComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoSplineareaComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoSplineareaComponent = __decorate([
        Component({
            selector: 'dxo-splinearea',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'aggregation',
                'area',
                'argumentField',
                'axis',
                'bar',
                'barOverlapGroup',
                'barPadding',
                'barWidth',
                'border',
                'bubble',
                'candlestick',
                'closeValueField',
                'color',
                'cornerRadius',
                'dashStyle',
                'fullstackedarea',
                'fullstackedbar',
                'fullstackedline',
                'fullstackedspline',
                'fullstackedsplinearea',
                'highValueField',
                'hoverMode',
                'hoverStyle',
                'ignoreEmptyPoints',
                'innerColor',
                'label',
                'line',
                'lowValueField',
                'maxLabelCount',
                'minBarSize',
                'opacity',
                'openValueField',
                'pane',
                'point',
                'rangearea',
                'rangebar',
                'rangeValue1Field',
                'rangeValue2Field',
                'reduction',
                'scatter',
                'selectionMode',
                'selectionStyle',
                'showInLegend',
                'sizeField',
                'spline',
                'splinearea',
                'stack',
                'stackedarea',
                'stackedbar',
                'stackedline',
                'stackedspline',
                'stackedsplinearea',
                'steparea',
                'stepline',
                'stock',
                'tagField',
                'type',
                'valueErrorBar',
                'valueField',
                'visible',
                'width'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoSplineareaComponent);
    return DxoSplineareaComponent;
}(DxoChartCommonSeriesSettings));
var DxoSplineareaModule = /** @class */ (function () {
    function DxoSplineareaModule() {
    }
    DxoSplineareaModule = __decorate([
        NgModule({
            declarations: [
                DxoSplineareaComponent
            ],
            exports: [
                DxoSplineareaComponent
            ],
        })
    ], DxoSplineareaModule);
    return DxoSplineareaModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoStackedareaComponent = /** @class */ (function (_super) {
    __extends(DxoStackedareaComponent, _super);
    function DxoStackedareaComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoStackedareaComponent.prototype, "_optionPath", {
        get: function () {
            return 'stackedarea';
        },
        enumerable: true,
        configurable: true
    });
    DxoStackedareaComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoStackedareaComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoStackedareaComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoStackedareaComponent = __decorate([
        Component({
            selector: 'dxo-stackedarea',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'aggregation',
                'area',
                'argumentField',
                'axis',
                'bar',
                'barOverlapGroup',
                'barPadding',
                'barWidth',
                'border',
                'bubble',
                'candlestick',
                'closeValueField',
                'color',
                'cornerRadius',
                'dashStyle',
                'fullstackedarea',
                'fullstackedbar',
                'fullstackedline',
                'fullstackedspline',
                'fullstackedsplinearea',
                'highValueField',
                'hoverMode',
                'hoverStyle',
                'ignoreEmptyPoints',
                'innerColor',
                'label',
                'line',
                'lowValueField',
                'maxLabelCount',
                'minBarSize',
                'opacity',
                'openValueField',
                'pane',
                'point',
                'rangearea',
                'rangebar',
                'rangeValue1Field',
                'rangeValue2Field',
                'reduction',
                'scatter',
                'selectionMode',
                'selectionStyle',
                'showInLegend',
                'sizeField',
                'spline',
                'splinearea',
                'stack',
                'stackedarea',
                'stackedbar',
                'stackedline',
                'stackedspline',
                'stackedsplinearea',
                'steparea',
                'stepline',
                'stock',
                'tagField',
                'type',
                'valueErrorBar',
                'valueField',
                'visible',
                'width'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoStackedareaComponent);
    return DxoStackedareaComponent;
}(DxoChartCommonSeriesSettings));
var DxoStackedareaModule = /** @class */ (function () {
    function DxoStackedareaModule() {
    }
    DxoStackedareaModule = __decorate([
        NgModule({
            declarations: [
                DxoStackedareaComponent
            ],
            exports: [
                DxoStackedareaComponent
            ],
        })
    ], DxoStackedareaModule);
    return DxoStackedareaModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoStackedbarComponent = /** @class */ (function (_super) {
    __extends(DxoStackedbarComponent, _super);
    function DxoStackedbarComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoStackedbarComponent.prototype, "_optionPath", {
        get: function () {
            return 'stackedbar';
        },
        enumerable: true,
        configurable: true
    });
    DxoStackedbarComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoStackedbarComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoStackedbarComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoStackedbarComponent = __decorate([
        Component({
            selector: 'dxo-stackedbar',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'aggregation',
                'area',
                'argumentField',
                'axis',
                'bar',
                'barOverlapGroup',
                'barPadding',
                'barWidth',
                'border',
                'bubble',
                'candlestick',
                'closeValueField',
                'color',
                'cornerRadius',
                'dashStyle',
                'fullstackedarea',
                'fullstackedbar',
                'fullstackedline',
                'fullstackedspline',
                'fullstackedsplinearea',
                'highValueField',
                'hoverMode',
                'hoverStyle',
                'ignoreEmptyPoints',
                'innerColor',
                'label',
                'line',
                'lowValueField',
                'maxLabelCount',
                'minBarSize',
                'opacity',
                'openValueField',
                'pane',
                'point',
                'rangearea',
                'rangebar',
                'rangeValue1Field',
                'rangeValue2Field',
                'reduction',
                'scatter',
                'selectionMode',
                'selectionStyle',
                'showInLegend',
                'sizeField',
                'spline',
                'splinearea',
                'stack',
                'stackedarea',
                'stackedbar',
                'stackedline',
                'stackedspline',
                'stackedsplinearea',
                'steparea',
                'stepline',
                'stock',
                'tagField',
                'type',
                'valueErrorBar',
                'valueField',
                'visible',
                'width',
                'closed'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoStackedbarComponent);
    return DxoStackedbarComponent;
}(DxoChartCommonSeriesSettings));
var DxoStackedbarModule = /** @class */ (function () {
    function DxoStackedbarModule() {
    }
    DxoStackedbarModule = __decorate([
        NgModule({
            declarations: [
                DxoStackedbarComponent
            ],
            exports: [
                DxoStackedbarComponent
            ],
        })
    ], DxoStackedbarModule);
    return DxoStackedbarModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoStackedlineComponent = /** @class */ (function (_super) {
    __extends(DxoStackedlineComponent, _super);
    function DxoStackedlineComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoStackedlineComponent.prototype, "_optionPath", {
        get: function () {
            return 'stackedline';
        },
        enumerable: true,
        configurable: true
    });
    DxoStackedlineComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoStackedlineComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoStackedlineComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoStackedlineComponent = __decorate([
        Component({
            selector: 'dxo-stackedline',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'aggregation',
                'area',
                'argumentField',
                'axis',
                'bar',
                'barOverlapGroup',
                'barPadding',
                'barWidth',
                'border',
                'bubble',
                'candlestick',
                'closeValueField',
                'color',
                'cornerRadius',
                'dashStyle',
                'fullstackedarea',
                'fullstackedbar',
                'fullstackedline',
                'fullstackedspline',
                'fullstackedsplinearea',
                'highValueField',
                'hoverMode',
                'hoverStyle',
                'ignoreEmptyPoints',
                'innerColor',
                'label',
                'line',
                'lowValueField',
                'maxLabelCount',
                'minBarSize',
                'opacity',
                'openValueField',
                'pane',
                'point',
                'rangearea',
                'rangebar',
                'rangeValue1Field',
                'rangeValue2Field',
                'reduction',
                'scatter',
                'selectionMode',
                'selectionStyle',
                'showInLegend',
                'sizeField',
                'spline',
                'splinearea',
                'stack',
                'stackedarea',
                'stackedbar',
                'stackedline',
                'stackedspline',
                'stackedsplinearea',
                'steparea',
                'stepline',
                'stock',
                'tagField',
                'type',
                'valueErrorBar',
                'valueField',
                'visible',
                'width'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoStackedlineComponent);
    return DxoStackedlineComponent;
}(DxoChartCommonSeriesSettings));
var DxoStackedlineModule = /** @class */ (function () {
    function DxoStackedlineModule() {
    }
    DxoStackedlineModule = __decorate([
        NgModule({
            declarations: [
                DxoStackedlineComponent
            ],
            exports: [
                DxoStackedlineComponent
            ],
        })
    ], DxoStackedlineModule);
    return DxoStackedlineModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoStackedsplineComponent = /** @class */ (function (_super) {
    __extends(DxoStackedsplineComponent, _super);
    function DxoStackedsplineComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoStackedsplineComponent.prototype, "_optionPath", {
        get: function () {
            return 'stackedspline';
        },
        enumerable: true,
        configurable: true
    });
    DxoStackedsplineComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoStackedsplineComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoStackedsplineComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoStackedsplineComponent = __decorate([
        Component({
            selector: 'dxo-stackedspline',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'aggregation',
                'area',
                'argumentField',
                'axis',
                'bar',
                'barOverlapGroup',
                'barPadding',
                'barWidth',
                'border',
                'bubble',
                'candlestick',
                'closeValueField',
                'color',
                'cornerRadius',
                'dashStyle',
                'fullstackedarea',
                'fullstackedbar',
                'fullstackedline',
                'fullstackedspline',
                'fullstackedsplinearea',
                'highValueField',
                'hoverMode',
                'hoverStyle',
                'ignoreEmptyPoints',
                'innerColor',
                'label',
                'line',
                'lowValueField',
                'maxLabelCount',
                'minBarSize',
                'opacity',
                'openValueField',
                'pane',
                'point',
                'rangearea',
                'rangebar',
                'rangeValue1Field',
                'rangeValue2Field',
                'reduction',
                'scatter',
                'selectionMode',
                'selectionStyle',
                'showInLegend',
                'sizeField',
                'spline',
                'splinearea',
                'stack',
                'stackedarea',
                'stackedbar',
                'stackedline',
                'stackedspline',
                'stackedsplinearea',
                'steparea',
                'stepline',
                'stock',
                'tagField',
                'type',
                'valueErrorBar',
                'valueField',
                'visible',
                'width'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoStackedsplineComponent);
    return DxoStackedsplineComponent;
}(DxoChartCommonSeriesSettings));
var DxoStackedsplineModule = /** @class */ (function () {
    function DxoStackedsplineModule() {
    }
    DxoStackedsplineModule = __decorate([
        NgModule({
            declarations: [
                DxoStackedsplineComponent
            ],
            exports: [
                DxoStackedsplineComponent
            ],
        })
    ], DxoStackedsplineModule);
    return DxoStackedsplineModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoStackedsplineareaComponent = /** @class */ (function (_super) {
    __extends(DxoStackedsplineareaComponent, _super);
    function DxoStackedsplineareaComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoStackedsplineareaComponent.prototype, "_optionPath", {
        get: function () {
            return 'stackedsplinearea';
        },
        enumerable: true,
        configurable: true
    });
    DxoStackedsplineareaComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoStackedsplineareaComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoStackedsplineareaComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoStackedsplineareaComponent = __decorate([
        Component({
            selector: 'dxo-stackedsplinearea',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'aggregation',
                'area',
                'argumentField',
                'axis',
                'bar',
                'barOverlapGroup',
                'barPadding',
                'barWidth',
                'border',
                'bubble',
                'candlestick',
                'closeValueField',
                'color',
                'cornerRadius',
                'dashStyle',
                'fullstackedarea',
                'fullstackedbar',
                'fullstackedline',
                'fullstackedspline',
                'fullstackedsplinearea',
                'highValueField',
                'hoverMode',
                'hoverStyle',
                'ignoreEmptyPoints',
                'innerColor',
                'label',
                'line',
                'lowValueField',
                'maxLabelCount',
                'minBarSize',
                'opacity',
                'openValueField',
                'pane',
                'point',
                'rangearea',
                'rangebar',
                'rangeValue1Field',
                'rangeValue2Field',
                'reduction',
                'scatter',
                'selectionMode',
                'selectionStyle',
                'showInLegend',
                'sizeField',
                'spline',
                'splinearea',
                'stack',
                'stackedarea',
                'stackedbar',
                'stackedline',
                'stackedspline',
                'stackedsplinearea',
                'steparea',
                'stepline',
                'stock',
                'tagField',
                'type',
                'valueErrorBar',
                'valueField',
                'visible',
                'width'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoStackedsplineareaComponent);
    return DxoStackedsplineareaComponent;
}(DxoChartCommonSeriesSettings));
var DxoStackedsplineareaModule = /** @class */ (function () {
    function DxoStackedsplineareaModule() {
    }
    DxoStackedsplineareaModule = __decorate([
        NgModule({
            declarations: [
                DxoStackedsplineareaComponent
            ],
            exports: [
                DxoStackedsplineareaComponent
            ],
        })
    ], DxoStackedsplineareaModule);
    return DxoStackedsplineareaModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoStateStoringComponent = /** @class */ (function (_super) {
    __extends(DxoStateStoringComponent, _super);
    function DxoStateStoringComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoStateStoringComponent.prototype, "customLoad", {
        get: function () {
            return this._getOption('customLoad');
        },
        set: function (value) {
            this._setOption('customLoad', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoStateStoringComponent.prototype, "customSave", {
        get: function () {
            return this._getOption('customSave');
        },
        set: function (value) {
            this._setOption('customSave', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoStateStoringComponent.prototype, "enabled", {
        get: function () {
            return this._getOption('enabled');
        },
        set: function (value) {
            this._setOption('enabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoStateStoringComponent.prototype, "savingTimeout", {
        get: function () {
            return this._getOption('savingTimeout');
        },
        set: function (value) {
            this._setOption('savingTimeout', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoStateStoringComponent.prototype, "storageKey", {
        get: function () {
            return this._getOption('storageKey');
        },
        set: function (value) {
            this._setOption('storageKey', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoStateStoringComponent.prototype, "type", {
        get: function () {
            return this._getOption('type');
        },
        set: function (value) {
            this._setOption('type', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoStateStoringComponent.prototype, "_optionPath", {
        get: function () {
            return 'stateStoring';
        },
        enumerable: true,
        configurable: true
    });
    DxoStateStoringComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoStateStoringComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoStateStoringComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxoStateStoringComponent.prototype, "customLoad", null);
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxoStateStoringComponent.prototype, "customSave", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoStateStoringComponent.prototype, "enabled", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoStateStoringComponent.prototype, "savingTimeout", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoStateStoringComponent.prototype, "storageKey", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoStateStoringComponent.prototype, "type", null);
    DxoStateStoringComponent = __decorate([
        Component({
            selector: 'dxo-state-storing',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoStateStoringComponent);
    return DxoStateStoringComponent;
}(NestedOption));
var DxoStateStoringModule = /** @class */ (function () {
    function DxoStateStoringModule() {
    }
    DxoStateStoringModule = __decorate([
        NgModule({
            declarations: [
                DxoStateStoringComponent
            ],
            exports: [
                DxoStateStoringComponent
            ],
        })
    ], DxoStateStoringModule);
    return DxoStateStoringModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoStepareaComponent = /** @class */ (function (_super) {
    __extends(DxoStepareaComponent, _super);
    function DxoStepareaComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoStepareaComponent.prototype, "_optionPath", {
        get: function () {
            return 'steparea';
        },
        enumerable: true,
        configurable: true
    });
    DxoStepareaComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoStepareaComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoStepareaComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoStepareaComponent = __decorate([
        Component({
            selector: 'dxo-steparea',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'aggregation',
                'area',
                'argumentField',
                'axis',
                'bar',
                'barOverlapGroup',
                'barPadding',
                'barWidth',
                'border',
                'bubble',
                'candlestick',
                'closeValueField',
                'color',
                'cornerRadius',
                'dashStyle',
                'fullstackedarea',
                'fullstackedbar',
                'fullstackedline',
                'fullstackedspline',
                'fullstackedsplinearea',
                'highValueField',
                'hoverMode',
                'hoverStyle',
                'ignoreEmptyPoints',
                'innerColor',
                'label',
                'line',
                'lowValueField',
                'maxLabelCount',
                'minBarSize',
                'opacity',
                'openValueField',
                'pane',
                'point',
                'rangearea',
                'rangebar',
                'rangeValue1Field',
                'rangeValue2Field',
                'reduction',
                'scatter',
                'selectionMode',
                'selectionStyle',
                'showInLegend',
                'sizeField',
                'spline',
                'splinearea',
                'stack',
                'stackedarea',
                'stackedbar',
                'stackedline',
                'stackedspline',
                'stackedsplinearea',
                'steparea',
                'stepline',
                'stock',
                'tagField',
                'type',
                'valueErrorBar',
                'valueField',
                'visible',
                'width'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoStepareaComponent);
    return DxoStepareaComponent;
}(DxoChartCommonSeriesSettings));
var DxoStepareaModule = /** @class */ (function () {
    function DxoStepareaModule() {
    }
    DxoStepareaModule = __decorate([
        NgModule({
            declarations: [
                DxoStepareaComponent
            ],
            exports: [
                DxoStepareaComponent
            ],
        })
    ], DxoStepareaModule);
    return DxoStepareaModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoSteplineComponent = /** @class */ (function (_super) {
    __extends(DxoSteplineComponent, _super);
    function DxoSteplineComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoSteplineComponent.prototype, "_optionPath", {
        get: function () {
            return 'stepline';
        },
        enumerable: true,
        configurable: true
    });
    DxoSteplineComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoSteplineComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoSteplineComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoSteplineComponent = __decorate([
        Component({
            selector: 'dxo-stepline',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'aggregation',
                'area',
                'argumentField',
                'axis',
                'bar',
                'barOverlapGroup',
                'barPadding',
                'barWidth',
                'border',
                'bubble',
                'candlestick',
                'closeValueField',
                'color',
                'cornerRadius',
                'dashStyle',
                'fullstackedarea',
                'fullstackedbar',
                'fullstackedline',
                'fullstackedspline',
                'fullstackedsplinearea',
                'highValueField',
                'hoverMode',
                'hoverStyle',
                'ignoreEmptyPoints',
                'innerColor',
                'label',
                'line',
                'lowValueField',
                'maxLabelCount',
                'minBarSize',
                'opacity',
                'openValueField',
                'pane',
                'point',
                'rangearea',
                'rangebar',
                'rangeValue1Field',
                'rangeValue2Field',
                'reduction',
                'scatter',
                'selectionMode',
                'selectionStyle',
                'showInLegend',
                'sizeField',
                'spline',
                'splinearea',
                'stack',
                'stackedarea',
                'stackedbar',
                'stackedline',
                'stackedspline',
                'stackedsplinearea',
                'steparea',
                'stepline',
                'stock',
                'tagField',
                'type',
                'valueErrorBar',
                'valueField',
                'visible',
                'width'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoSteplineComponent);
    return DxoSteplineComponent;
}(DxoChartCommonSeriesSettings));
var DxoSteplineModule = /** @class */ (function () {
    function DxoSteplineModule() {
    }
    DxoSteplineModule = __decorate([
        NgModule({
            declarations: [
                DxoSteplineComponent
            ],
            exports: [
                DxoSteplineComponent
            ],
        })
    ], DxoSteplineModule);
    return DxoSteplineModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoStockComponent = /** @class */ (function (_super) {
    __extends(DxoStockComponent, _super);
    function DxoStockComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoStockComponent.prototype, "_optionPath", {
        get: function () {
            return 'stock';
        },
        enumerable: true,
        configurable: true
    });
    DxoStockComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoStockComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoStockComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoStockComponent = __decorate([
        Component({
            selector: 'dxo-stock',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'aggregation',
                'area',
                'argumentField',
                'axis',
                'bar',
                'barOverlapGroup',
                'barPadding',
                'barWidth',
                'border',
                'bubble',
                'candlestick',
                'closeValueField',
                'color',
                'cornerRadius',
                'dashStyle',
                'fullstackedarea',
                'fullstackedbar',
                'fullstackedline',
                'fullstackedspline',
                'fullstackedsplinearea',
                'highValueField',
                'hoverMode',
                'hoverStyle',
                'ignoreEmptyPoints',
                'innerColor',
                'label',
                'line',
                'lowValueField',
                'maxLabelCount',
                'minBarSize',
                'opacity',
                'openValueField',
                'pane',
                'point',
                'rangearea',
                'rangebar',
                'rangeValue1Field',
                'rangeValue2Field',
                'reduction',
                'scatter',
                'selectionMode',
                'selectionStyle',
                'showInLegend',
                'sizeField',
                'spline',
                'splinearea',
                'stack',
                'stackedarea',
                'stackedbar',
                'stackedline',
                'stackedspline',
                'stackedsplinearea',
                'steparea',
                'stepline',
                'stock',
                'tagField',
                'type',
                'valueErrorBar',
                'valueField',
                'visible',
                'width'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoStockComponent);
    return DxoStockComponent;
}(DxoChartCommonSeriesSettings));
var DxoStockModule = /** @class */ (function () {
    function DxoStockModule() {
    }
    DxoStockModule = __decorate([
        NgModule({
            declarations: [
                DxoStockComponent
            ],
            exports: [
                DxoStockComponent
            ],
        })
    ], DxoStockModule);
    return DxoStockModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoStoreComponent = /** @class */ (function (_super) {
    __extends(DxoStoreComponent, _super);
    function DxoStoreComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoStoreComponent.prototype, "type", {
        get: function () {
            return this._getOption('type');
        },
        set: function (value) {
            this._setOption('type', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoStoreComponent.prototype, "_optionPath", {
        get: function () {
            return 'store';
        },
        enumerable: true,
        configurable: true
    });
    DxoStoreComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoStoreComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoStoreComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoStoreComponent.prototype, "type", null);
    DxoStoreComponent = __decorate([
        Component({
            selector: 'dxo-store',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoStoreComponent);
    return DxoStoreComponent;
}(NestedOption));
var DxoStoreModule = /** @class */ (function () {
    function DxoStoreModule() {
    }
    DxoStoreModule = __decorate([
        NgModule({
            declarations: [
                DxoStoreComponent
            ],
            exports: [
                DxoStoreComponent
            ],
        })
    ], DxoStoreModule);
    return DxoStoreModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiGanttStripLine = /** @class */ (function (_super) {
    __extends(DxiGanttStripLine, _super);
    function DxiGanttStripLine() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DxiGanttStripLine.prototype, "cssClass", {
        get: function () {
            return this._getOption('cssClass');
        },
        set: function (value) {
            this._setOption('cssClass', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiGanttStripLine.prototype, "end", {
        get: function () {
            return this._getOption('end');
        },
        set: function (value) {
            this._setOption('end', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiGanttStripLine.prototype, "start", {
        get: function () {
            return this._getOption('start');
        },
        set: function (value) {
            this._setOption('start', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiGanttStripLine.prototype, "title", {
        get: function () {
            return this._getOption('title');
        },
        set: function (value) {
            this._setOption('title', value);
        },
        enumerable: true,
        configurable: true
    });
    return DxiGanttStripLine;
}(CollectionNestedOption));

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiStripLineComponent = /** @class */ (function (_super) {
    __extends(DxiStripLineComponent, _super);
    function DxiStripLineComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiStripLineComponent.prototype, "_optionPath", {
        get: function () {
            return 'stripLines';
        },
        enumerable: true,
        configurable: true
    });
    DxiStripLineComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxiStripLineComponent = __decorate([
        Component({
            selector: 'dxi-strip-line',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'cssClass',
                'end',
                'start',
                'title'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiStripLineComponent);
    return DxiStripLineComponent;
}(DxiGanttStripLine));
var DxiStripLineModule = /** @class */ (function () {
    function DxiStripLineModule() {
    }
    DxiStripLineModule = __decorate([
        NgModule({
            declarations: [
                DxiStripLineComponent
            ],
            exports: [
                DxiStripLineComponent
            ],
        })
    ], DxiStripLineModule);
    return DxiStripLineModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoStripStyleComponent = /** @class */ (function (_super) {
    __extends(DxoStripStyleComponent, _super);
    function DxoStripStyleComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoStripStyleComponent.prototype, "label", {
        get: function () {
            return this._getOption('label');
        },
        set: function (value) {
            this._setOption('label', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoStripStyleComponent.prototype, "paddingLeftRight", {
        get: function () {
            return this._getOption('paddingLeftRight');
        },
        set: function (value) {
            this._setOption('paddingLeftRight', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoStripStyleComponent.prototype, "paddingTopBottom", {
        get: function () {
            return this._getOption('paddingTopBottom');
        },
        set: function (value) {
            this._setOption('paddingTopBottom', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoStripStyleComponent.prototype, "_optionPath", {
        get: function () {
            return 'stripStyle';
        },
        enumerable: true,
        configurable: true
    });
    DxoStripStyleComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoStripStyleComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoStripStyleComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoStripStyleComponent.prototype, "label", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoStripStyleComponent.prototype, "paddingLeftRight", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoStripStyleComponent.prototype, "paddingTopBottom", null);
    DxoStripStyleComponent = __decorate([
        Component({
            selector: 'dxo-strip-style',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoStripStyleComponent);
    return DxoStripStyleComponent;
}(NestedOption));
var DxoStripStyleModule = /** @class */ (function () {
    function DxoStripStyleModule() {
    }
    DxoStripStyleModule = __decorate([
        NgModule({
            declarations: [
                DxoStripStyleComponent
            ],
            exports: [
                DxoStripStyleComponent
            ],
        })
    ], DxoStripStyleModule);
    return DxoStripStyleModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoSubtitleComponent = /** @class */ (function (_super) {
    __extends(DxoSubtitleComponent, _super);
    function DxoSubtitleComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoSubtitleComponent.prototype, "font", {
        get: function () {
            return this._getOption('font');
        },
        set: function (value) {
            this._setOption('font', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSubtitleComponent.prototype, "offset", {
        get: function () {
            return this._getOption('offset');
        },
        set: function (value) {
            this._setOption('offset', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSubtitleComponent.prototype, "text", {
        get: function () {
            return this._getOption('text');
        },
        set: function (value) {
            this._setOption('text', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSubtitleComponent.prototype, "textOverflow", {
        get: function () {
            return this._getOption('textOverflow');
        },
        set: function (value) {
            this._setOption('textOverflow', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSubtitleComponent.prototype, "wordWrap", {
        get: function () {
            return this._getOption('wordWrap');
        },
        set: function (value) {
            this._setOption('wordWrap', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSubtitleComponent.prototype, "_optionPath", {
        get: function () {
            return 'subtitle';
        },
        enumerable: true,
        configurable: true
    });
    DxoSubtitleComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoSubtitleComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoSubtitleComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoSubtitleComponent.prototype, "font", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoSubtitleComponent.prototype, "offset", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoSubtitleComponent.prototype, "text", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoSubtitleComponent.prototype, "textOverflow", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoSubtitleComponent.prototype, "wordWrap", null);
    DxoSubtitleComponent = __decorate([
        Component({
            selector: 'dxo-subtitle',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoSubtitleComponent);
    return DxoSubtitleComponent;
}(NestedOption));
var DxoSubtitleModule = /** @class */ (function () {
    function DxoSubtitleModule() {
    }
    DxoSubtitleModule = __decorate([
        NgModule({
            declarations: [
                DxoSubtitleComponent
            ],
            exports: [
                DxoSubtitleComponent
            ],
        })
    ], DxoSubtitleModule);
    return DxoSubtitleModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoGaugeIndicator = /** @class */ (function (_super) {
    __extends(DxoGaugeIndicator, _super);
    function DxoGaugeIndicator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DxoGaugeIndicator.prototype, "arrowLength", {
        get: function () {
            return this._getOption('arrowLength');
        },
        set: function (value) {
            this._setOption('arrowLength', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGaugeIndicator.prototype, "backgroundColor", {
        get: function () {
            return this._getOption('backgroundColor');
        },
        set: function (value) {
            this._setOption('backgroundColor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGaugeIndicator.prototype, "baseValue", {
        get: function () {
            return this._getOption('baseValue');
        },
        set: function (value) {
            this._setOption('baseValue', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGaugeIndicator.prototype, "beginAdaptingAtRadius", {
        get: function () {
            return this._getOption('beginAdaptingAtRadius');
        },
        set: function (value) {
            this._setOption('beginAdaptingAtRadius', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGaugeIndicator.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGaugeIndicator.prototype, "horizontalOrientation", {
        get: function () {
            return this._getOption('horizontalOrientation');
        },
        set: function (value) {
            this._setOption('horizontalOrientation', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGaugeIndicator.prototype, "indentFromCenter", {
        get: function () {
            return this._getOption('indentFromCenter');
        },
        set: function (value) {
            this._setOption('indentFromCenter', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGaugeIndicator.prototype, "length", {
        get: function () {
            return this._getOption('length');
        },
        set: function (value) {
            this._setOption('length', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGaugeIndicator.prototype, "offset", {
        get: function () {
            return this._getOption('offset');
        },
        set: function (value) {
            this._setOption('offset', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGaugeIndicator.prototype, "palette", {
        get: function () {
            return this._getOption('palette');
        },
        set: function (value) {
            this._setOption('palette', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGaugeIndicator.prototype, "secondColor", {
        get: function () {
            return this._getOption('secondColor');
        },
        set: function (value) {
            this._setOption('secondColor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGaugeIndicator.prototype, "secondFraction", {
        get: function () {
            return this._getOption('secondFraction');
        },
        set: function (value) {
            this._setOption('secondFraction', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGaugeIndicator.prototype, "size", {
        get: function () {
            return this._getOption('size');
        },
        set: function (value) {
            this._setOption('size', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGaugeIndicator.prototype, "spindleGapSize", {
        get: function () {
            return this._getOption('spindleGapSize');
        },
        set: function (value) {
            this._setOption('spindleGapSize', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGaugeIndicator.prototype, "spindleSize", {
        get: function () {
            return this._getOption('spindleSize');
        },
        set: function (value) {
            this._setOption('spindleSize', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGaugeIndicator.prototype, "text", {
        get: function () {
            return this._getOption('text');
        },
        set: function (value) {
            this._setOption('text', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGaugeIndicator.prototype, "type", {
        get: function () {
            return this._getOption('type');
        },
        set: function (value) {
            this._setOption('type', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGaugeIndicator.prototype, "verticalOrientation", {
        get: function () {
            return this._getOption('verticalOrientation');
        },
        set: function (value) {
            this._setOption('verticalOrientation', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoGaugeIndicator.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    return DxoGaugeIndicator;
}(NestedOption));

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoSubvalueIndicatorComponent = /** @class */ (function (_super) {
    __extends(DxoSubvalueIndicatorComponent, _super);
    function DxoSubvalueIndicatorComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoSubvalueIndicatorComponent.prototype, "_optionPath", {
        get: function () {
            return 'subvalueIndicator';
        },
        enumerable: true,
        configurable: true
    });
    DxoSubvalueIndicatorComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoSubvalueIndicatorComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoSubvalueIndicatorComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoSubvalueIndicatorComponent = __decorate([
        Component({
            selector: 'dxo-subvalue-indicator',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'arrowLength',
                'backgroundColor',
                'baseValue',
                'beginAdaptingAtRadius',
                'color',
                'horizontalOrientation',
                'indentFromCenter',
                'length',
                'offset',
                'palette',
                'secondColor',
                'secondFraction',
                'size',
                'spindleGapSize',
                'spindleSize',
                'text',
                'type',
                'verticalOrientation',
                'width'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoSubvalueIndicatorComponent);
    return DxoSubvalueIndicatorComponent;
}(DxoGaugeIndicator));
var DxoSubvalueIndicatorModule = /** @class */ (function () {
    function DxoSubvalueIndicatorModule() {
    }
    DxoSubvalueIndicatorModule = __decorate([
        NgModule({
            declarations: [
                DxoSubvalueIndicatorComponent
            ],
            exports: [
                DxoSubvalueIndicatorComponent
            ],
        })
    ], DxoSubvalueIndicatorModule);
    return DxoSubvalueIndicatorModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiTotalItemComponent = /** @class */ (function (_super) {
    __extends(DxiTotalItemComponent, _super);
    function DxiTotalItemComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiTotalItemComponent.prototype, "alignment", {
        get: function () {
            return this._getOption('alignment');
        },
        set: function (value) {
            this._setOption('alignment', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiTotalItemComponent.prototype, "column", {
        get: function () {
            return this._getOption('column');
        },
        set: function (value) {
            this._setOption('column', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiTotalItemComponent.prototype, "cssClass", {
        get: function () {
            return this._getOption('cssClass');
        },
        set: function (value) {
            this._setOption('cssClass', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiTotalItemComponent.prototype, "customizeText", {
        get: function () {
            return this._getOption('customizeText');
        },
        set: function (value) {
            this._setOption('customizeText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiTotalItemComponent.prototype, "displayFormat", {
        get: function () {
            return this._getOption('displayFormat');
        },
        set: function (value) {
            this._setOption('displayFormat', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiTotalItemComponent.prototype, "name", {
        get: function () {
            return this._getOption('name');
        },
        set: function (value) {
            this._setOption('name', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiTotalItemComponent.prototype, "showInColumn", {
        get: function () {
            return this._getOption('showInColumn');
        },
        set: function (value) {
            this._setOption('showInColumn', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiTotalItemComponent.prototype, "skipEmptyValues", {
        get: function () {
            return this._getOption('skipEmptyValues');
        },
        set: function (value) {
            this._setOption('skipEmptyValues', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiTotalItemComponent.prototype, "summaryType", {
        get: function () {
            return this._getOption('summaryType');
        },
        set: function (value) {
            this._setOption('summaryType', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiTotalItemComponent.prototype, "valueFormat", {
        get: function () {
            return this._getOption('valueFormat');
        },
        set: function (value) {
            this._setOption('valueFormat', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiTotalItemComponent.prototype, "_optionPath", {
        get: function () {
            return 'totalItems';
        },
        enumerable: true,
        configurable: true
    });
    DxiTotalItemComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiTotalItemComponent.prototype, "alignment", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiTotalItemComponent.prototype, "column", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiTotalItemComponent.prototype, "cssClass", null);
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxiTotalItemComponent.prototype, "customizeText", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiTotalItemComponent.prototype, "displayFormat", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiTotalItemComponent.prototype, "name", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiTotalItemComponent.prototype, "showInColumn", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxiTotalItemComponent.prototype, "skipEmptyValues", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiTotalItemComponent.prototype, "summaryType", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiTotalItemComponent.prototype, "valueFormat", null);
    DxiTotalItemComponent = __decorate([
        Component({
            selector: 'dxi-total-item',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiTotalItemComponent);
    return DxiTotalItemComponent;
}(CollectionNestedOption));
var DxiTotalItemModule = /** @class */ (function () {
    function DxiTotalItemModule() {
    }
    DxiTotalItemModule = __decorate([
        NgModule({
            declarations: [
                DxiTotalItemComponent
            ],
            exports: [
                DxiTotalItemComponent
            ],
        })
    ], DxiTotalItemModule);
    return DxiTotalItemModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoSummaryComponent = /** @class */ (function (_super) {
    __extends(DxoSummaryComponent, _super);
    function DxoSummaryComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoSummaryComponent.prototype, "calculateCustomSummary", {
        get: function () {
            return this._getOption('calculateCustomSummary');
        },
        set: function (value) {
            this._setOption('calculateCustomSummary', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSummaryComponent.prototype, "groupItems", {
        get: function () {
            return this._getOption('groupItems');
        },
        set: function (value) {
            this._setOption('groupItems', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSummaryComponent.prototype, "recalculateWhileEditing", {
        get: function () {
            return this._getOption('recalculateWhileEditing');
        },
        set: function (value) {
            this._setOption('recalculateWhileEditing', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSummaryComponent.prototype, "skipEmptyValues", {
        get: function () {
            return this._getOption('skipEmptyValues');
        },
        set: function (value) {
            this._setOption('skipEmptyValues', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSummaryComponent.prototype, "texts", {
        get: function () {
            return this._getOption('texts');
        },
        set: function (value) {
            this._setOption('texts', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSummaryComponent.prototype, "totalItems", {
        get: function () {
            return this._getOption('totalItems');
        },
        set: function (value) {
            this._setOption('totalItems', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSummaryComponent.prototype, "_optionPath", {
        get: function () {
            return 'summary';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSummaryComponent.prototype, "groupItemsChildren", {
        get: function () {
            return this._getOption('groupItems');
        },
        set: function (value) {
            this.setChildren('groupItems', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoSummaryComponent.prototype, "totalItemsChildren", {
        get: function () {
            return this._getOption('totalItems');
        },
        set: function (value) {
            this.setChildren('totalItems', value);
        },
        enumerable: true,
        configurable: true
    });
    DxoSummaryComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoSummaryComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoSummaryComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxoSummaryComponent.prototype, "calculateCustomSummary", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxoSummaryComponent.prototype, "groupItems", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoSummaryComponent.prototype, "recalculateWhileEditing", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoSummaryComponent.prototype, "skipEmptyValues", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoSummaryComponent.prototype, "texts", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxoSummaryComponent.prototype, "totalItems", null);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiGroupItemComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxoSummaryComponent.prototype, "groupItemsChildren", null);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiTotalItemComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxoSummaryComponent.prototype, "totalItemsChildren", null);
    DxoSummaryComponent = __decorate([
        Component({
            selector: 'dxo-summary',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoSummaryComponent);
    return DxoSummaryComponent;
}(NestedOption));
var DxoSummaryModule = /** @class */ (function () {
    function DxoSummaryModule() {
    }
    DxoSummaryModule = __decorate([
        NgModule({
            declarations: [
                DxoSummaryComponent
            ],
            exports: [
                DxoSummaryComponent
            ],
        })
    ], DxoSummaryModule);
    return DxoSummaryModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoTabPanelOptions = /** @class */ (function (_super) {
    __extends(DxoTabPanelOptions, _super);
    function DxoTabPanelOptions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DxoTabPanelOptions.prototype, "accessKey", {
        get: function () {
            return this._getOption('accessKey');
        },
        set: function (value) {
            this._setOption('accessKey', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "activeStateEnabled", {
        get: function () {
            return this._getOption('activeStateEnabled');
        },
        set: function (value) {
            this._setOption('activeStateEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "animationEnabled", {
        get: function () {
            return this._getOption('animationEnabled');
        },
        set: function (value) {
            this._setOption('animationEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "dataSource", {
        get: function () {
            return this._getOption('dataSource');
        },
        set: function (value) {
            this._setOption('dataSource', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "deferRendering", {
        get: function () {
            return this._getOption('deferRendering');
        },
        set: function (value) {
            this._setOption('deferRendering', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "disabled", {
        get: function () {
            return this._getOption('disabled');
        },
        set: function (value) {
            this._setOption('disabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "elementAttr", {
        get: function () {
            return this._getOption('elementAttr');
        },
        set: function (value) {
            this._setOption('elementAttr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "focusStateEnabled", {
        get: function () {
            return this._getOption('focusStateEnabled');
        },
        set: function (value) {
            this._setOption('focusStateEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "height", {
        get: function () {
            return this._getOption('height');
        },
        set: function (value) {
            this._setOption('height', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "hint", {
        get: function () {
            return this._getOption('hint');
        },
        set: function (value) {
            this._setOption('hint', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "hoverStateEnabled", {
        get: function () {
            return this._getOption('hoverStateEnabled');
        },
        set: function (value) {
            this._setOption('hoverStateEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "itemHoldTimeout", {
        get: function () {
            return this._getOption('itemHoldTimeout');
        },
        set: function (value) {
            this._setOption('itemHoldTimeout', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "items", {
        get: function () {
            return this._getOption('items');
        },
        set: function (value) {
            this._setOption('items', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "itemTemplate", {
        get: function () {
            return this._getOption('itemTemplate');
        },
        set: function (value) {
            this._setOption('itemTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "itemTitleTemplate", {
        get: function () {
            return this._getOption('itemTitleTemplate');
        },
        set: function (value) {
            this._setOption('itemTitleTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "loop", {
        get: function () {
            return this._getOption('loop');
        },
        set: function (value) {
            this._setOption('loop', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "noDataText", {
        get: function () {
            return this._getOption('noDataText');
        },
        set: function (value) {
            this._setOption('noDataText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "onContentReady", {
        get: function () {
            return this._getOption('onContentReady');
        },
        set: function (value) {
            this._setOption('onContentReady', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "onDisposing", {
        get: function () {
            return this._getOption('onDisposing');
        },
        set: function (value) {
            this._setOption('onDisposing', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "onInitialized", {
        get: function () {
            return this._getOption('onInitialized');
        },
        set: function (value) {
            this._setOption('onInitialized', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "onItemClick", {
        get: function () {
            return this._getOption('onItemClick');
        },
        set: function (value) {
            this._setOption('onItemClick', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "onItemContextMenu", {
        get: function () {
            return this._getOption('onItemContextMenu');
        },
        set: function (value) {
            this._setOption('onItemContextMenu', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "onItemHold", {
        get: function () {
            return this._getOption('onItemHold');
        },
        set: function (value) {
            this._setOption('onItemHold', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "onItemRendered", {
        get: function () {
            return this._getOption('onItemRendered');
        },
        set: function (value) {
            this._setOption('onItemRendered', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "onOptionChanged", {
        get: function () {
            return this._getOption('onOptionChanged');
        },
        set: function (value) {
            this._setOption('onOptionChanged', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "onSelectionChanged", {
        get: function () {
            return this._getOption('onSelectionChanged');
        },
        set: function (value) {
            this._setOption('onSelectionChanged', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "onTitleClick", {
        get: function () {
            return this._getOption('onTitleClick');
        },
        set: function (value) {
            this._setOption('onTitleClick', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "onTitleHold", {
        get: function () {
            return this._getOption('onTitleHold');
        },
        set: function (value) {
            this._setOption('onTitleHold', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "onTitleRendered", {
        get: function () {
            return this._getOption('onTitleRendered');
        },
        set: function (value) {
            this._setOption('onTitleRendered', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "repaintChangesOnly", {
        get: function () {
            return this._getOption('repaintChangesOnly');
        },
        set: function (value) {
            this._setOption('repaintChangesOnly', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "rtlEnabled", {
        get: function () {
            return this._getOption('rtlEnabled');
        },
        set: function (value) {
            this._setOption('rtlEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "scrollByContent", {
        get: function () {
            return this._getOption('scrollByContent');
        },
        set: function (value) {
            this._setOption('scrollByContent', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "scrollingEnabled", {
        get: function () {
            return this._getOption('scrollingEnabled');
        },
        set: function (value) {
            this._setOption('scrollingEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "selectedIndex", {
        get: function () {
            return this._getOption('selectedIndex');
        },
        set: function (value) {
            this._setOption('selectedIndex', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "selectedItem", {
        get: function () {
            return this._getOption('selectedItem');
        },
        set: function (value) {
            this._setOption('selectedItem', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "showNavButtons", {
        get: function () {
            return this._getOption('showNavButtons');
        },
        set: function (value) {
            this._setOption('showNavButtons', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "swipeEnabled", {
        get: function () {
            return this._getOption('swipeEnabled');
        },
        set: function (value) {
            this._setOption('swipeEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "tabIndex", {
        get: function () {
            return this._getOption('tabIndex');
        },
        set: function (value) {
            this._setOption('tabIndex', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptions.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    return DxoTabPanelOptions;
}(NestedOption));

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoTabPanelOptionsComponent = /** @class */ (function (_super) {
    __extends(DxoTabPanelOptionsComponent, _super);
    function DxoTabPanelOptionsComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        _this._createEventEmitters([
            { emit: 'itemsChange' },
            { emit: 'selectedIndexChange' },
            { emit: 'selectedItemChange' }
        ]);
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoTabPanelOptionsComponent.prototype, "_optionPath", {
        get: function () {
            return 'tabPanelOptions';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTabPanelOptionsComponent.prototype, "itemsChildren", {
        get: function () {
            return this._getOption('items');
        },
        set: function (value) {
            this.setChildren('items', value);
        },
        enumerable: true,
        configurable: true
    });
    DxoTabPanelOptionsComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoTabPanelOptionsComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoTabPanelOptionsComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxoTabPanelOptionsComponent.prototype, "itemsChange", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxoTabPanelOptionsComponent.prototype, "selectedIndexChange", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxoTabPanelOptionsComponent.prototype, "selectedItemChange", void 0);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiItemComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxoTabPanelOptionsComponent.prototype, "itemsChildren", null);
    DxoTabPanelOptionsComponent = __decorate([
        Component({
            selector: 'dxo-tab-panel-options',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'accessKey',
                'activeStateEnabled',
                'animationEnabled',
                'dataSource',
                'deferRendering',
                'disabled',
                'elementAttr',
                'focusStateEnabled',
                'height',
                'hint',
                'hoverStateEnabled',
                'itemHoldTimeout',
                'items',
                'itemTemplate',
                'itemTitleTemplate',
                'loop',
                'noDataText',
                'onContentReady',
                'onDisposing',
                'onInitialized',
                'onItemClick',
                'onItemContextMenu',
                'onItemHold',
                'onItemRendered',
                'onOptionChanged',
                'onSelectionChanged',
                'onTitleClick',
                'onTitleHold',
                'onTitleRendered',
                'repaintChangesOnly',
                'rtlEnabled',
                'scrollByContent',
                'scrollingEnabled',
                'selectedIndex',
                'selectedItem',
                'showNavButtons',
                'swipeEnabled',
                'tabIndex',
                'visible',
                'width'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoTabPanelOptionsComponent);
    return DxoTabPanelOptionsComponent;
}(DxoTabPanelOptions));
var DxoTabPanelOptionsModule = /** @class */ (function () {
    function DxoTabPanelOptionsModule() {
    }
    DxoTabPanelOptionsModule = __decorate([
        NgModule({
            declarations: [
                DxoTabPanelOptionsComponent
            ],
            exports: [
                DxoTabPanelOptionsComponent
            ],
        })
    ], DxoTabPanelOptionsModule);
    return DxoTabPanelOptionsModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoTasksComponent = /** @class */ (function (_super) {
    __extends(DxoTasksComponent, _super);
    function DxoTasksComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoTasksComponent.prototype, "colorExpr", {
        get: function () {
            return this._getOption('colorExpr');
        },
        set: function (value) {
            this._setOption('colorExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTasksComponent.prototype, "dataSource", {
        get: function () {
            return this._getOption('dataSource');
        },
        set: function (value) {
            this._setOption('dataSource', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTasksComponent.prototype, "endExpr", {
        get: function () {
            return this._getOption('endExpr');
        },
        set: function (value) {
            this._setOption('endExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTasksComponent.prototype, "keyExpr", {
        get: function () {
            return this._getOption('keyExpr');
        },
        set: function (value) {
            this._setOption('keyExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTasksComponent.prototype, "parentIdExpr", {
        get: function () {
            return this._getOption('parentIdExpr');
        },
        set: function (value) {
            this._setOption('parentIdExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTasksComponent.prototype, "progressExpr", {
        get: function () {
            return this._getOption('progressExpr');
        },
        set: function (value) {
            this._setOption('progressExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTasksComponent.prototype, "startExpr", {
        get: function () {
            return this._getOption('startExpr');
        },
        set: function (value) {
            this._setOption('startExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTasksComponent.prototype, "titleExpr", {
        get: function () {
            return this._getOption('titleExpr');
        },
        set: function (value) {
            this._setOption('titleExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTasksComponent.prototype, "_optionPath", {
        get: function () {
            return 'tasks';
        },
        enumerable: true,
        configurable: true
    });
    DxoTasksComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoTasksComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoTasksComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoTasksComponent.prototype, "colorExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoTasksComponent.prototype, "dataSource", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoTasksComponent.prototype, "endExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoTasksComponent.prototype, "keyExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoTasksComponent.prototype, "parentIdExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoTasksComponent.prototype, "progressExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoTasksComponent.prototype, "startExpr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoTasksComponent.prototype, "titleExpr", null);
    DxoTasksComponent = __decorate([
        Component({
            selector: 'dxo-tasks',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoTasksComponent);
    return DxoTasksComponent;
}(NestedOption));
var DxoTasksModule = /** @class */ (function () {
    function DxoTasksModule() {
    }
    DxoTasksModule = __decorate([
        NgModule({
            declarations: [
                DxoTasksComponent
            ],
            exports: [
                DxoTasksComponent
            ],
        })
    ], DxoTasksModule);
    return DxoTasksModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoTextComponent = /** @class */ (function (_super) {
    __extends(DxoTextComponent, _super);
    function DxoTextComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoTextComponent.prototype, "customizeText", {
        get: function () {
            return this._getOption('customizeText');
        },
        set: function (value) {
            this._setOption('customizeText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextComponent.prototype, "font", {
        get: function () {
            return this._getOption('font');
        },
        set: function (value) {
            this._setOption('font', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextComponent.prototype, "format", {
        get: function () {
            return this._getOption('format');
        },
        set: function (value) {
            this._setOption('format', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextComponent.prototype, "indent", {
        get: function () {
            return this._getOption('indent');
        },
        set: function (value) {
            this._setOption('indent', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextComponent.prototype, "_optionPath", {
        get: function () {
            return 'text';
        },
        enumerable: true,
        configurable: true
    });
    DxoTextComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoTextComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoTextComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxoTextComponent.prototype, "customizeText", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoTextComponent.prototype, "font", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoTextComponent.prototype, "format", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoTextComponent.prototype, "indent", null);
    DxoTextComponent = __decorate([
        Component({
            selector: 'dxo-text',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoTextComponent);
    return DxoTextComponent;
}(NestedOption));
var DxoTextModule = /** @class */ (function () {
    function DxoTextModule() {
    }
    DxoTextModule = __decorate([
        NgModule({
            declarations: [
                DxoTextComponent
            ],
            exports: [
                DxoTextComponent
            ],
        })
    ], DxoTextModule);
    return DxoTextModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoTextsComponent = /** @class */ (function (_super) {
    __extends(DxoTextsComponent, _super);
    function DxoTextsComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoTextsComponent.prototype, "fix", {
        get: function () {
            return this._getOption('fix');
        },
        set: function (value) {
            this._setOption('fix', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "leftPosition", {
        get: function () {
            return this._getOption('leftPosition');
        },
        set: function (value) {
            this._setOption('leftPosition', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "rightPosition", {
        get: function () {
            return this._getOption('rightPosition');
        },
        set: function (value) {
            this._setOption('rightPosition', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "unfix", {
        get: function () {
            return this._getOption('unfix');
        },
        set: function (value) {
            this._setOption('unfix', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "addRow", {
        get: function () {
            return this._getOption('addRow');
        },
        set: function (value) {
            this._setOption('addRow', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "cancelAllChanges", {
        get: function () {
            return this._getOption('cancelAllChanges');
        },
        set: function (value) {
            this._setOption('cancelAllChanges', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "cancelRowChanges", {
        get: function () {
            return this._getOption('cancelRowChanges');
        },
        set: function (value) {
            this._setOption('cancelRowChanges', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "confirmDeleteMessage", {
        get: function () {
            return this._getOption('confirmDeleteMessage');
        },
        set: function (value) {
            this._setOption('confirmDeleteMessage', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "confirmDeleteTitle", {
        get: function () {
            return this._getOption('confirmDeleteTitle');
        },
        set: function (value) {
            this._setOption('confirmDeleteTitle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "deleteRow", {
        get: function () {
            return this._getOption('deleteRow');
        },
        set: function (value) {
            this._setOption('deleteRow', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "editRow", {
        get: function () {
            return this._getOption('editRow');
        },
        set: function (value) {
            this._setOption('editRow', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "saveAllChanges", {
        get: function () {
            return this._getOption('saveAllChanges');
        },
        set: function (value) {
            this._setOption('saveAllChanges', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "saveRowChanges", {
        get: function () {
            return this._getOption('saveRowChanges');
        },
        set: function (value) {
            this._setOption('saveRowChanges', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "undeleteRow", {
        get: function () {
            return this._getOption('undeleteRow');
        },
        set: function (value) {
            this._setOption('undeleteRow', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "validationCancelChanges", {
        get: function () {
            return this._getOption('validationCancelChanges');
        },
        set: function (value) {
            this._setOption('validationCancelChanges', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "exportAll", {
        get: function () {
            return this._getOption('exportAll');
        },
        set: function (value) {
            this._setOption('exportAll', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "exportSelectedRows", {
        get: function () {
            return this._getOption('exportSelectedRows');
        },
        set: function (value) {
            this._setOption('exportSelectedRows', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "exportTo", {
        get: function () {
            return this._getOption('exportTo');
        },
        set: function (value) {
            this._setOption('exportTo', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "clearFilter", {
        get: function () {
            return this._getOption('clearFilter');
        },
        set: function (value) {
            this._setOption('clearFilter', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "createFilter", {
        get: function () {
            return this._getOption('createFilter');
        },
        set: function (value) {
            this._setOption('createFilter', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "filterEnabledHint", {
        get: function () {
            return this._getOption('filterEnabledHint');
        },
        set: function (value) {
            this._setOption('filterEnabledHint', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "groupByThisColumn", {
        get: function () {
            return this._getOption('groupByThisColumn');
        },
        set: function (value) {
            this._setOption('groupByThisColumn', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "groupContinuedMessage", {
        get: function () {
            return this._getOption('groupContinuedMessage');
        },
        set: function (value) {
            this._setOption('groupContinuedMessage', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "groupContinuesMessage", {
        get: function () {
            return this._getOption('groupContinuesMessage');
        },
        set: function (value) {
            this._setOption('groupContinuesMessage', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "ungroup", {
        get: function () {
            return this._getOption('ungroup');
        },
        set: function (value) {
            this._setOption('ungroup', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "ungroupAll", {
        get: function () {
            return this._getOption('ungroupAll');
        },
        set: function (value) {
            this._setOption('ungroupAll', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "cancel", {
        get: function () {
            return this._getOption('cancel');
        },
        set: function (value) {
            this._setOption('cancel', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "emptyValue", {
        get: function () {
            return this._getOption('emptyValue');
        },
        set: function (value) {
            this._setOption('emptyValue', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "ok", {
        get: function () {
            return this._getOption('ok');
        },
        set: function (value) {
            this._setOption('ok', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "avg", {
        get: function () {
            return this._getOption('avg');
        },
        set: function (value) {
            this._setOption('avg', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "avgOtherColumn", {
        get: function () {
            return this._getOption('avgOtherColumn');
        },
        set: function (value) {
            this._setOption('avgOtherColumn', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "count", {
        get: function () {
            return this._getOption('count');
        },
        set: function (value) {
            this._setOption('count', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "max", {
        get: function () {
            return this._getOption('max');
        },
        set: function (value) {
            this._setOption('max', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "maxOtherColumn", {
        get: function () {
            return this._getOption('maxOtherColumn');
        },
        set: function (value) {
            this._setOption('maxOtherColumn', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "min", {
        get: function () {
            return this._getOption('min');
        },
        set: function (value) {
            this._setOption('min', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "minOtherColumn", {
        get: function () {
            return this._getOption('minOtherColumn');
        },
        set: function (value) {
            this._setOption('minOtherColumn', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "sum", {
        get: function () {
            return this._getOption('sum');
        },
        set: function (value) {
            this._setOption('sum', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "sumOtherColumn", {
        get: function () {
            return this._getOption('sumOtherColumn');
        },
        set: function (value) {
            this._setOption('sumOtherColumn', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "allFields", {
        get: function () {
            return this._getOption('allFields');
        },
        set: function (value) {
            this._setOption('allFields', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "columnFields", {
        get: function () {
            return this._getOption('columnFields');
        },
        set: function (value) {
            this._setOption('columnFields', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "dataFields", {
        get: function () {
            return this._getOption('dataFields');
        },
        set: function (value) {
            this._setOption('dataFields', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "filterFields", {
        get: function () {
            return this._getOption('filterFields');
        },
        set: function (value) {
            this._setOption('filterFields', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "rowFields", {
        get: function () {
            return this._getOption('rowFields');
        },
        set: function (value) {
            this._setOption('rowFields', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "columnFieldArea", {
        get: function () {
            return this._getOption('columnFieldArea');
        },
        set: function (value) {
            this._setOption('columnFieldArea', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "dataFieldArea", {
        get: function () {
            return this._getOption('dataFieldArea');
        },
        set: function (value) {
            this._setOption('dataFieldArea', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "filterFieldArea", {
        get: function () {
            return this._getOption('filterFieldArea');
        },
        set: function (value) {
            this._setOption('filterFieldArea', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "rowFieldArea", {
        get: function () {
            return this._getOption('rowFieldArea');
        },
        set: function (value) {
            this._setOption('rowFieldArea', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "collapseAll", {
        get: function () {
            return this._getOption('collapseAll');
        },
        set: function (value) {
            this._setOption('collapseAll', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "dataNotAvailable", {
        get: function () {
            return this._getOption('dataNotAvailable');
        },
        set: function (value) {
            this._setOption('dataNotAvailable', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "expandAll", {
        get: function () {
            return this._getOption('expandAll');
        },
        set: function (value) {
            this._setOption('expandAll', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "exportToExcel", {
        get: function () {
            return this._getOption('exportToExcel');
        },
        set: function (value) {
            this._setOption('exportToExcel', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "grandTotal", {
        get: function () {
            return this._getOption('grandTotal');
        },
        set: function (value) {
            this._setOption('grandTotal', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "noData", {
        get: function () {
            return this._getOption('noData');
        },
        set: function (value) {
            this._setOption('noData', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "removeAllSorting", {
        get: function () {
            return this._getOption('removeAllSorting');
        },
        set: function (value) {
            this._setOption('removeAllSorting', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "showFieldChooser", {
        get: function () {
            return this._getOption('showFieldChooser');
        },
        set: function (value) {
            this._setOption('showFieldChooser', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "sortColumnBySummary", {
        get: function () {
            return this._getOption('sortColumnBySummary');
        },
        set: function (value) {
            this._setOption('sortColumnBySummary', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "sortRowBySummary", {
        get: function () {
            return this._getOption('sortRowBySummary');
        },
        set: function (value) {
            this._setOption('sortRowBySummary', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "total", {
        get: function () {
            return this._getOption('total');
        },
        set: function (value) {
            this._setOption('total', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "addRowToNode", {
        get: function () {
            return this._getOption('addRowToNode');
        },
        set: function (value) {
            this._setOption('addRowToNode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTextsComponent.prototype, "_optionPath", {
        get: function () {
            return 'texts';
        },
        enumerable: true,
        configurable: true
    });
    DxoTextsComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoTextsComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoTextsComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "fix", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "leftPosition", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "rightPosition", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "unfix", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "addRow", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "cancelAllChanges", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "cancelRowChanges", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "confirmDeleteMessage", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "confirmDeleteTitle", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "deleteRow", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "editRow", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "saveAllChanges", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "saveRowChanges", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "undeleteRow", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "validationCancelChanges", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "exportAll", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "exportSelectedRows", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "exportTo", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "clearFilter", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "createFilter", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "filterEnabledHint", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "groupByThisColumn", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "groupContinuedMessage", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "groupContinuesMessage", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "ungroup", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "ungroupAll", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "cancel", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "emptyValue", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "ok", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "avg", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "avgOtherColumn", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "count", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "max", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "maxOtherColumn", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "min", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "minOtherColumn", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "sum", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "sumOtherColumn", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "allFields", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "columnFields", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "dataFields", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "filterFields", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "rowFields", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "columnFieldArea", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "dataFieldArea", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "filterFieldArea", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "rowFieldArea", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "collapseAll", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "dataNotAvailable", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "expandAll", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "exportToExcel", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "grandTotal", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "noData", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "removeAllSorting", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "showFieldChooser", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "sortColumnBySummary", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "sortRowBySummary", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "total", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTextsComponent.prototype, "addRowToNode", null);
    DxoTextsComponent = __decorate([
        Component({
            selector: 'dxo-texts',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoTextsComponent);
    return DxoTextsComponent;
}(NestedOption));
var DxoTextsModule = /** @class */ (function () {
    function DxoTextsModule() {
    }
    DxoTextsModule = __decorate([
        NgModule({
            declarations: [
                DxoTextsComponent
            ],
            exports: [
                DxoTextsComponent
            ],
        })
    ], DxoTextsModule);
    return DxoTextsModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoTickIntervalComponent = /** @class */ (function (_super) {
    __extends(DxoTickIntervalComponent, _super);
    function DxoTickIntervalComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoTickIntervalComponent.prototype, "days", {
        get: function () {
            return this._getOption('days');
        },
        set: function (value) {
            this._setOption('days', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTickIntervalComponent.prototype, "hours", {
        get: function () {
            return this._getOption('hours');
        },
        set: function (value) {
            this._setOption('hours', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTickIntervalComponent.prototype, "milliseconds", {
        get: function () {
            return this._getOption('milliseconds');
        },
        set: function (value) {
            this._setOption('milliseconds', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTickIntervalComponent.prototype, "minutes", {
        get: function () {
            return this._getOption('minutes');
        },
        set: function (value) {
            this._setOption('minutes', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTickIntervalComponent.prototype, "months", {
        get: function () {
            return this._getOption('months');
        },
        set: function (value) {
            this._setOption('months', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTickIntervalComponent.prototype, "quarters", {
        get: function () {
            return this._getOption('quarters');
        },
        set: function (value) {
            this._setOption('quarters', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTickIntervalComponent.prototype, "seconds", {
        get: function () {
            return this._getOption('seconds');
        },
        set: function (value) {
            this._setOption('seconds', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTickIntervalComponent.prototype, "weeks", {
        get: function () {
            return this._getOption('weeks');
        },
        set: function (value) {
            this._setOption('weeks', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTickIntervalComponent.prototype, "years", {
        get: function () {
            return this._getOption('years');
        },
        set: function (value) {
            this._setOption('years', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTickIntervalComponent.prototype, "_optionPath", {
        get: function () {
            return 'tickInterval';
        },
        enumerable: true,
        configurable: true
    });
    DxoTickIntervalComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoTickIntervalComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoTickIntervalComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoTickIntervalComponent.prototype, "days", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoTickIntervalComponent.prototype, "hours", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoTickIntervalComponent.prototype, "milliseconds", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoTickIntervalComponent.prototype, "minutes", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoTickIntervalComponent.prototype, "months", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoTickIntervalComponent.prototype, "quarters", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoTickIntervalComponent.prototype, "seconds", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoTickIntervalComponent.prototype, "weeks", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoTickIntervalComponent.prototype, "years", null);
    DxoTickIntervalComponent = __decorate([
        Component({
            selector: 'dxo-tick-interval',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoTickIntervalComponent);
    return DxoTickIntervalComponent;
}(NestedOption));
var DxoTickIntervalModule = /** @class */ (function () {
    function DxoTickIntervalModule() {
    }
    DxoTickIntervalModule = __decorate([
        NgModule({
            declarations: [
                DxoTickIntervalComponent
            ],
            exports: [
                DxoTickIntervalComponent
            ],
        })
    ], DxoTickIntervalModule);
    return DxoTickIntervalModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoTickComponent = /** @class */ (function (_super) {
    __extends(DxoTickComponent, _super);
    function DxoTickComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoTickComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTickComponent.prototype, "length", {
        get: function () {
            return this._getOption('length');
        },
        set: function (value) {
            this._setOption('length', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTickComponent.prototype, "opacity", {
        get: function () {
            return this._getOption('opacity');
        },
        set: function (value) {
            this._setOption('opacity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTickComponent.prototype, "shift", {
        get: function () {
            return this._getOption('shift');
        },
        set: function (value) {
            this._setOption('shift', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTickComponent.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTickComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTickComponent.prototype, "_optionPath", {
        get: function () {
            return 'tick';
        },
        enumerable: true,
        configurable: true
    });
    DxoTickComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoTickComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoTickComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTickComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoTickComponent.prototype, "length", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoTickComponent.prototype, "opacity", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoTickComponent.prototype, "shift", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoTickComponent.prototype, "visible", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoTickComponent.prototype, "width", null);
    DxoTickComponent = __decorate([
        Component({
            selector: 'dxo-tick',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoTickComponent);
    return DxoTickComponent;
}(NestedOption));
var DxoTickModule = /** @class */ (function () {
    function DxoTickModule() {
    }
    DxoTickModule = __decorate([
        NgModule({
            declarations: [
                DxoTickComponent
            ],
            exports: [
                DxoTickComponent
            ],
        })
    ], DxoTickModule);
    return DxoTickModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoTileComponent = /** @class */ (function (_super) {
    __extends(DxoTileComponent, _super);
    function DxoTileComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoTileComponent.prototype, "border", {
        get: function () {
            return this._getOption('border');
        },
        set: function (value) {
            this._setOption('border', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTileComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTileComponent.prototype, "hoverStyle", {
        get: function () {
            return this._getOption('hoverStyle');
        },
        set: function (value) {
            this._setOption('hoverStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTileComponent.prototype, "label", {
        get: function () {
            return this._getOption('label');
        },
        set: function (value) {
            this._setOption('label', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTileComponent.prototype, "selectionStyle", {
        get: function () {
            return this._getOption('selectionStyle');
        },
        set: function (value) {
            this._setOption('selectionStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTileComponent.prototype, "_optionPath", {
        get: function () {
            return 'tile';
        },
        enumerable: true,
        configurable: true
    });
    DxoTileComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoTileComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoTileComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoTileComponent.prototype, "border", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTileComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoTileComponent.prototype, "hoverStyle", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoTileComponent.prototype, "label", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoTileComponent.prototype, "selectionStyle", null);
    DxoTileComponent = __decorate([
        Component({
            selector: 'dxo-tile',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoTileComponent);
    return DxoTileComponent;
}(NestedOption));
var DxoTileModule = /** @class */ (function () {
    function DxoTileModule() {
    }
    DxoTileModule = __decorate([
        NgModule({
            declarations: [
                DxoTileComponent
            ],
            exports: [
                DxoTileComponent
            ],
        })
    ], DxoTileModule);
    return DxoTileModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoTitleComponent = /** @class */ (function (_super) {
    __extends(DxoTitleComponent, _super);
    function DxoTitleComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoTitleComponent.prototype, "font", {
        get: function () {
            return this._getOption('font');
        },
        set: function (value) {
            this._setOption('font', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTitleComponent.prototype, "horizontalAlignment", {
        get: function () {
            return this._getOption('horizontalAlignment');
        },
        set: function (value) {
            this._setOption('horizontalAlignment', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTitleComponent.prototype, "margin", {
        get: function () {
            return this._getOption('margin');
        },
        set: function (value) {
            this._setOption('margin', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTitleComponent.prototype, "placeholderSize", {
        get: function () {
            return this._getOption('placeholderSize');
        },
        set: function (value) {
            this._setOption('placeholderSize', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTitleComponent.prototype, "subtitle", {
        get: function () {
            return this._getOption('subtitle');
        },
        set: function (value) {
            this._setOption('subtitle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTitleComponent.prototype, "text", {
        get: function () {
            return this._getOption('text');
        },
        set: function (value) {
            this._setOption('text', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTitleComponent.prototype, "verticalAlignment", {
        get: function () {
            return this._getOption('verticalAlignment');
        },
        set: function (value) {
            this._setOption('verticalAlignment', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTitleComponent.prototype, "textOverflow", {
        get: function () {
            return this._getOption('textOverflow');
        },
        set: function (value) {
            this._setOption('textOverflow', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTitleComponent.prototype, "wordWrap", {
        get: function () {
            return this._getOption('wordWrap');
        },
        set: function (value) {
            this._setOption('wordWrap', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTitleComponent.prototype, "alignment", {
        get: function () {
            return this._getOption('alignment');
        },
        set: function (value) {
            this._setOption('alignment', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTitleComponent.prototype, "_optionPath", {
        get: function () {
            return 'title';
        },
        enumerable: true,
        configurable: true
    });
    DxoTitleComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoTitleComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoTitleComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoTitleComponent.prototype, "font", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTitleComponent.prototype, "horizontalAlignment", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoTitleComponent.prototype, "margin", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoTitleComponent.prototype, "placeholderSize", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoTitleComponent.prototype, "subtitle", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTitleComponent.prototype, "text", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTitleComponent.prototype, "verticalAlignment", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTitleComponent.prototype, "textOverflow", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTitleComponent.prototype, "wordWrap", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTitleComponent.prototype, "alignment", null);
    DxoTitleComponent = __decorate([
        Component({
            selector: 'dxo-title',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoTitleComponent);
    return DxoTitleComponent;
}(NestedOption));
var DxoTitleModule = /** @class */ (function () {
    function DxoTitleModule() {
    }
    DxoTitleModule = __decorate([
        NgModule({
            declarations: [
                DxoTitleComponent
            ],
            exports: [
                DxoTitleComponent
            ],
        })
    ], DxoTitleModule);
    return DxoTitleModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoFileManagerToolbar = /** @class */ (function (_super) {
    __extends(DxoFileManagerToolbar, _super);
    function DxoFileManagerToolbar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DxoFileManagerToolbar.prototype, "fileSelectionItems", {
        get: function () {
            return this._getOption('fileSelectionItems');
        },
        set: function (value) {
            this._setOption('fileSelectionItems', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFileManagerToolbar.prototype, "items", {
        get: function () {
            return this._getOption('items');
        },
        set: function (value) {
            this._setOption('items', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFileManagerToolbar.prototype, "container", {
        get: function () {
            return this._getOption('container');
        },
        set: function (value) {
            this._setOption('container', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoFileManagerToolbar.prototype, "multiline", {
        get: function () {
            return this._getOption('multiline');
        },
        set: function (value) {
            this._setOption('multiline', value);
        },
        enumerable: true,
        configurable: true
    });
    return DxoFileManagerToolbar;
}(NestedOption));

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoToolbarComponent = /** @class */ (function (_super) {
    __extends(DxoToolbarComponent, _super);
    function DxoToolbarComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoToolbarComponent.prototype, "_optionPath", {
        get: function () {
            return 'toolbar';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoToolbarComponent.prototype, "fileSelectionItemsChildren", {
        get: function () {
            return this._getOption('fileSelectionItems');
        },
        set: function (value) {
            this.setChildren('fileSelectionItems', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoToolbarComponent.prototype, "itemsChildren", {
        get: function () {
            return this._getOption('items');
        },
        set: function (value) {
            this.setChildren('items', value);
        },
        enumerable: true,
        configurable: true
    });
    DxoToolbarComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoToolbarComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoToolbarComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        ContentChildren(forwardRef(function () { return DxiFileSelectionItemComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxoToolbarComponent.prototype, "fileSelectionItemsChildren", null);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiItemComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxoToolbarComponent.prototype, "itemsChildren", null);
    DxoToolbarComponent = __decorate([
        Component({
            selector: 'dxo-toolbar',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'fileSelectionItems',
                'items',
                'container',
                'multiline'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoToolbarComponent);
    return DxoToolbarComponent;
}(DxoFileManagerToolbar));
var DxoToolbarModule = /** @class */ (function () {
    function DxoToolbarModule() {
    }
    DxoToolbarModule = __decorate([
        NgModule({
            declarations: [
                DxoToolbarComponent
            ],
            exports: [
                DxoToolbarComponent
            ],
        })
    ], DxoToolbarModule);
    return DxoToolbarModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoToolboxComponent = /** @class */ (function (_super) {
    __extends(DxoToolboxComponent, _super);
    function DxoToolboxComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoToolboxComponent.prototype, "groups", {
        get: function () {
            return this._getOption('groups');
        },
        set: function (value) {
            this._setOption('groups', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoToolboxComponent.prototype, "visibility", {
        get: function () {
            return this._getOption('visibility');
        },
        set: function (value) {
            this._setOption('visibility', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoToolboxComponent.prototype, "_optionPath", {
        get: function () {
            return 'toolbox';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoToolboxComponent.prototype, "groupsChildren", {
        get: function () {
            return this._getOption('groups');
        },
        set: function (value) {
            this.setChildren('groups', value);
        },
        enumerable: true,
        configurable: true
    });
    DxoToolboxComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoToolboxComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoToolboxComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxoToolboxComponent.prototype, "groups", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoToolboxComponent.prototype, "visibility", null);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiGroupComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxoToolboxComponent.prototype, "groupsChildren", null);
    DxoToolboxComponent = __decorate([
        Component({
            selector: 'dxo-toolbox',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoToolboxComponent);
    return DxoToolboxComponent;
}(NestedOption));
var DxoToolboxModule = /** @class */ (function () {
    function DxoToolboxModule() {
    }
    DxoToolboxModule = __decorate([
        NgModule({
            declarations: [
                DxoToolboxComponent
            ],
            exports: [
                DxoToolboxComponent
            ],
        })
    ], DxoToolboxModule);
    return DxoToolboxModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoTooltipComponent = /** @class */ (function (_super) {
    __extends(DxoTooltipComponent, _super);
    function DxoTooltipComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoTooltipComponent.prototype, "arrowLength", {
        get: function () {
            return this._getOption('arrowLength');
        },
        set: function (value) {
            this._setOption('arrowLength', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTooltipComponent.prototype, "border", {
        get: function () {
            return this._getOption('border');
        },
        set: function (value) {
            this._setOption('border', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTooltipComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTooltipComponent.prototype, "container", {
        get: function () {
            return this._getOption('container');
        },
        set: function (value) {
            this._setOption('container', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTooltipComponent.prototype, "contentTemplate", {
        get: function () {
            return this._getOption('contentTemplate');
        },
        set: function (value) {
            this._setOption('contentTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTooltipComponent.prototype, "cornerRadius", {
        get: function () {
            return this._getOption('cornerRadius');
        },
        set: function (value) {
            this._setOption('cornerRadius', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTooltipComponent.prototype, "customizeTooltip", {
        get: function () {
            return this._getOption('customizeTooltip');
        },
        set: function (value) {
            this._setOption('customizeTooltip', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTooltipComponent.prototype, "enabled", {
        get: function () {
            return this._getOption('enabled');
        },
        set: function (value) {
            this._setOption('enabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTooltipComponent.prototype, "font", {
        get: function () {
            return this._getOption('font');
        },
        set: function (value) {
            this._setOption('font', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTooltipComponent.prototype, "format", {
        get: function () {
            return this._getOption('format');
        },
        set: function (value) {
            this._setOption('format', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTooltipComponent.prototype, "interactive", {
        get: function () {
            return this._getOption('interactive');
        },
        set: function (value) {
            this._setOption('interactive', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTooltipComponent.prototype, "opacity", {
        get: function () {
            return this._getOption('opacity');
        },
        set: function (value) {
            this._setOption('opacity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTooltipComponent.prototype, "paddingLeftRight", {
        get: function () {
            return this._getOption('paddingLeftRight');
        },
        set: function (value) {
            this._setOption('paddingLeftRight', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTooltipComponent.prototype, "paddingTopBottom", {
        get: function () {
            return this._getOption('paddingTopBottom');
        },
        set: function (value) {
            this._setOption('paddingTopBottom', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTooltipComponent.prototype, "shadow", {
        get: function () {
            return this._getOption('shadow');
        },
        set: function (value) {
            this._setOption('shadow', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTooltipComponent.prototype, "zIndex", {
        get: function () {
            return this._getOption('zIndex');
        },
        set: function (value) {
            this._setOption('zIndex', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTooltipComponent.prototype, "argumentFormat", {
        get: function () {
            return this._getOption('argumentFormat');
        },
        set: function (value) {
            this._setOption('argumentFormat', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTooltipComponent.prototype, "location", {
        get: function () {
            return this._getOption('location');
        },
        set: function (value) {
            this._setOption('location', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTooltipComponent.prototype, "shared", {
        get: function () {
            return this._getOption('shared');
        },
        set: function (value) {
            this._setOption('shared', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTooltipComponent.prototype, "isShown", {
        get: function () {
            return this._getOption('isShown');
        },
        set: function (value) {
            this._setOption('isShown', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTooltipComponent.prototype, "text", {
        get: function () {
            return this._getOption('text');
        },
        set: function (value) {
            this._setOption('text', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTooltipComponent.prototype, "position", {
        get: function () {
            return this._getOption('position');
        },
        set: function (value) {
            this._setOption('position', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTooltipComponent.prototype, "showMode", {
        get: function () {
            return this._getOption('showMode');
        },
        set: function (value) {
            this._setOption('showMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTooltipComponent.prototype, "customizeLinkTooltip", {
        get: function () {
            return this._getOption('customizeLinkTooltip');
        },
        set: function (value) {
            this._setOption('customizeLinkTooltip', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTooltipComponent.prototype, "customizeNodeTooltip", {
        get: function () {
            return this._getOption('customizeNodeTooltip');
        },
        set: function (value) {
            this._setOption('customizeNodeTooltip', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTooltipComponent.prototype, "linkTooltipTemplate", {
        get: function () {
            return this._getOption('linkTooltipTemplate');
        },
        set: function (value) {
            this._setOption('linkTooltipTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTooltipComponent.prototype, "nodeTooltipTemplate", {
        get: function () {
            return this._getOption('nodeTooltipTemplate');
        },
        set: function (value) {
            this._setOption('nodeTooltipTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTooltipComponent.prototype, "_optionPath", {
        get: function () {
            return 'tooltip';
        },
        enumerable: true,
        configurable: true
    });
    DxoTooltipComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoTooltipComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoTooltipComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoTooltipComponent.prototype, "arrowLength", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoTooltipComponent.prototype, "border", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTooltipComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoTooltipComponent.prototype, "container", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoTooltipComponent.prototype, "contentTemplate", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoTooltipComponent.prototype, "cornerRadius", null);
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxoTooltipComponent.prototype, "customizeTooltip", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoTooltipComponent.prototype, "enabled", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoTooltipComponent.prototype, "font", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoTooltipComponent.prototype, "format", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoTooltipComponent.prototype, "interactive", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoTooltipComponent.prototype, "opacity", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoTooltipComponent.prototype, "paddingLeftRight", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoTooltipComponent.prototype, "paddingTopBottom", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoTooltipComponent.prototype, "shadow", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoTooltipComponent.prototype, "zIndex", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoTooltipComponent.prototype, "argumentFormat", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTooltipComponent.prototype, "location", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoTooltipComponent.prototype, "shared", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoTooltipComponent.prototype, "isShown", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTooltipComponent.prototype, "text", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTooltipComponent.prototype, "position", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoTooltipComponent.prototype, "showMode", null);
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxoTooltipComponent.prototype, "customizeLinkTooltip", null);
    __decorate([
        Input(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Function])
    ], DxoTooltipComponent.prototype, "customizeNodeTooltip", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoTooltipComponent.prototype, "linkTooltipTemplate", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoTooltipComponent.prototype, "nodeTooltipTemplate", null);
    DxoTooltipComponent = __decorate([
        Component({
            selector: 'dxo-tooltip',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoTooltipComponent);
    return DxoTooltipComponent;
}(NestedOption));
var DxoTooltipModule = /** @class */ (function () {
    function DxoTooltipModule() {
    }
    DxoTooltipModule = __decorate([
        NgModule({
            declarations: [
                DxoTooltipComponent
            ],
            exports: [
                DxoTooltipComponent
            ],
        })
    ], DxoTooltipModule);
    return DxoTooltipModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoUploadComponent = /** @class */ (function (_super) {
    __extends(DxoUploadComponent, _super);
    function DxoUploadComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoUploadComponent.prototype, "chunkSize", {
        get: function () {
            return this._getOption('chunkSize');
        },
        set: function (value) {
            this._setOption('chunkSize', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoUploadComponent.prototype, "maxFileSize", {
        get: function () {
            return this._getOption('maxFileSize');
        },
        set: function (value) {
            this._setOption('maxFileSize', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoUploadComponent.prototype, "_optionPath", {
        get: function () {
            return 'upload';
        },
        enumerable: true,
        configurable: true
    });
    DxoUploadComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoUploadComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoUploadComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoUploadComponent.prototype, "chunkSize", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoUploadComponent.prototype, "maxFileSize", null);
    DxoUploadComponent = __decorate([
        Component({
            selector: 'dxo-upload',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoUploadComponent);
    return DxoUploadComponent;
}(NestedOption));
var DxoUploadModule = /** @class */ (function () {
    function DxoUploadModule() {
    }
    DxoUploadModule = __decorate([
        NgModule({
            declarations: [
                DxoUploadComponent
            ],
            exports: [
                DxoUploadComponent
            ],
        })
    ], DxoUploadModule);
    return DxoUploadModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoUrlComponent = /** @class */ (function (_super) {
    __extends(DxoUrlComponent, _super);
    function DxoUrlComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoUrlComponent.prototype, "rangeMaxPoint", {
        get: function () {
            return this._getOption('rangeMaxPoint');
        },
        set: function (value) {
            this._setOption('rangeMaxPoint', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoUrlComponent.prototype, "rangeMinPoint", {
        get: function () {
            return this._getOption('rangeMinPoint');
        },
        set: function (value) {
            this._setOption('rangeMinPoint', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoUrlComponent.prototype, "_optionPath", {
        get: function () {
            return 'url';
        },
        enumerable: true,
        configurable: true
    });
    DxoUrlComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoUrlComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoUrlComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoUrlComponent.prototype, "rangeMaxPoint", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoUrlComponent.prototype, "rangeMinPoint", null);
    DxoUrlComponent = __decorate([
        Component({
            selector: 'dxo-url',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoUrlComponent);
    return DxoUrlComponent;
}(NestedOption));
var DxoUrlModule = /** @class */ (function () {
    function DxoUrlModule() {
    }
    DxoUrlModule = __decorate([
        NgModule({
            declarations: [
                DxoUrlComponent
            ],
            exports: [
                DxoUrlComponent
            ],
        })
    ], DxoUrlModule);
    return DxoUrlModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoValidationComponent = /** @class */ (function (_super) {
    __extends(DxoValidationComponent, _super);
    function DxoValidationComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoValidationComponent.prototype, "autoUpdateParentTasks", {
        get: function () {
            return this._getOption('autoUpdateParentTasks');
        },
        set: function (value) {
            this._setOption('autoUpdateParentTasks', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValidationComponent.prototype, "validateDependencies", {
        get: function () {
            return this._getOption('validateDependencies');
        },
        set: function (value) {
            this._setOption('validateDependencies', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValidationComponent.prototype, "_optionPath", {
        get: function () {
            return 'validation';
        },
        enumerable: true,
        configurable: true
    });
    DxoValidationComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoValidationComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoValidationComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoValidationComponent.prototype, "autoUpdateParentTasks", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoValidationComponent.prototype, "validateDependencies", null);
    DxoValidationComponent = __decorate([
        Component({
            selector: 'dxo-validation',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoValidationComponent);
    return DxoValidationComponent;
}(NestedOption));
var DxoValidationModule = /** @class */ (function () {
    function DxoValidationModule() {
    }
    DxoValidationModule = __decorate([
        NgModule({
            declarations: [
                DxoValidationComponent
            ],
            exports: [
                DxoValidationComponent
            ],
        })
    ], DxoValidationModule);
    return DxoValidationModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiValueAxisComponent = /** @class */ (function (_super) {
    __extends(DxiValueAxisComponent, _super);
    function DxiValueAxisComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        _this._createEventEmitters([
            { emit: 'visualRangeChange' }
        ]);
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiValueAxisComponent.prototype, "allowDecimals", {
        get: function () {
            return this._getOption('allowDecimals');
        },
        set: function (value) {
            this._setOption('allowDecimals', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "autoBreaksEnabled", {
        get: function () {
            return this._getOption('autoBreaksEnabled');
        },
        set: function (value) {
            this._setOption('autoBreaksEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "axisDivisionFactor", {
        get: function () {
            return this._getOption('axisDivisionFactor');
        },
        set: function (value) {
            this._setOption('axisDivisionFactor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "breaks", {
        get: function () {
            return this._getOption('breaks');
        },
        set: function (value) {
            this._setOption('breaks', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "breakStyle", {
        get: function () {
            return this._getOption('breakStyle');
        },
        set: function (value) {
            this._setOption('breakStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "categories", {
        get: function () {
            return this._getOption('categories');
        },
        set: function (value) {
            this._setOption('categories', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "constantLines", {
        get: function () {
            return this._getOption('constantLines');
        },
        set: function (value) {
            this._setOption('constantLines', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "constantLineStyle", {
        get: function () {
            return this._getOption('constantLineStyle');
        },
        set: function (value) {
            this._setOption('constantLineStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "customPosition", {
        get: function () {
            return this._getOption('customPosition');
        },
        set: function (value) {
            this._setOption('customPosition', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "discreteAxisDivisionMode", {
        get: function () {
            return this._getOption('discreteAxisDivisionMode');
        },
        set: function (value) {
            this._setOption('discreteAxisDivisionMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "endOnTick", {
        get: function () {
            return this._getOption('endOnTick');
        },
        set: function (value) {
            this._setOption('endOnTick', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "grid", {
        get: function () {
            return this._getOption('grid');
        },
        set: function (value) {
            this._setOption('grid', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "inverted", {
        get: function () {
            return this._getOption('inverted');
        },
        set: function (value) {
            this._setOption('inverted', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "label", {
        get: function () {
            return this._getOption('label');
        },
        set: function (value) {
            this._setOption('label', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "linearThreshold", {
        get: function () {
            return this._getOption('linearThreshold');
        },
        set: function (value) {
            this._setOption('linearThreshold', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "logarithmBase", {
        get: function () {
            return this._getOption('logarithmBase');
        },
        set: function (value) {
            this._setOption('logarithmBase', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "max", {
        get: function () {
            return this._getOption('max');
        },
        set: function (value) {
            this._setOption('max', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "maxAutoBreakCount", {
        get: function () {
            return this._getOption('maxAutoBreakCount');
        },
        set: function (value) {
            this._setOption('maxAutoBreakCount', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "maxValueMargin", {
        get: function () {
            return this._getOption('maxValueMargin');
        },
        set: function (value) {
            this._setOption('maxValueMargin', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "min", {
        get: function () {
            return this._getOption('min');
        },
        set: function (value) {
            this._setOption('min', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "minorGrid", {
        get: function () {
            return this._getOption('minorGrid');
        },
        set: function (value) {
            this._setOption('minorGrid', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "minorTick", {
        get: function () {
            return this._getOption('minorTick');
        },
        set: function (value) {
            this._setOption('minorTick', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "minorTickCount", {
        get: function () {
            return this._getOption('minorTickCount');
        },
        set: function (value) {
            this._setOption('minorTickCount', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "minorTickInterval", {
        get: function () {
            return this._getOption('minorTickInterval');
        },
        set: function (value) {
            this._setOption('minorTickInterval', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "minValueMargin", {
        get: function () {
            return this._getOption('minValueMargin');
        },
        set: function (value) {
            this._setOption('minValueMargin', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "minVisualRangeLength", {
        get: function () {
            return this._getOption('minVisualRangeLength');
        },
        set: function (value) {
            this._setOption('minVisualRangeLength', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "multipleAxesSpacing", {
        get: function () {
            return this._getOption('multipleAxesSpacing');
        },
        set: function (value) {
            this._setOption('multipleAxesSpacing', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "name", {
        get: function () {
            return this._getOption('name');
        },
        set: function (value) {
            this._setOption('name', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "offset", {
        get: function () {
            return this._getOption('offset');
        },
        set: function (value) {
            this._setOption('offset', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "opacity", {
        get: function () {
            return this._getOption('opacity');
        },
        set: function (value) {
            this._setOption('opacity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "pane", {
        get: function () {
            return this._getOption('pane');
        },
        set: function (value) {
            this._setOption('pane', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "placeholderSize", {
        get: function () {
            return this._getOption('placeholderSize');
        },
        set: function (value) {
            this._setOption('placeholderSize', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "position", {
        get: function () {
            return this._getOption('position');
        },
        set: function (value) {
            this._setOption('position', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "showZero", {
        get: function () {
            return this._getOption('showZero');
        },
        set: function (value) {
            this._setOption('showZero', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "strips", {
        get: function () {
            return this._getOption('strips');
        },
        set: function (value) {
            this._setOption('strips', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "stripStyle", {
        get: function () {
            return this._getOption('stripStyle');
        },
        set: function (value) {
            this._setOption('stripStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "synchronizedValue", {
        get: function () {
            return this._getOption('synchronizedValue');
        },
        set: function (value) {
            this._setOption('synchronizedValue', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "tick", {
        get: function () {
            return this._getOption('tick');
        },
        set: function (value) {
            this._setOption('tick', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "tickInterval", {
        get: function () {
            return this._getOption('tickInterval');
        },
        set: function (value) {
            this._setOption('tickInterval', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "title", {
        get: function () {
            return this._getOption('title');
        },
        set: function (value) {
            this._setOption('title', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "type", {
        get: function () {
            return this._getOption('type');
        },
        set: function (value) {
            this._setOption('type', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "valueMarginsEnabled", {
        get: function () {
            return this._getOption('valueMarginsEnabled');
        },
        set: function (value) {
            this._setOption('valueMarginsEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "valueType", {
        get: function () {
            return this._getOption('valueType');
        },
        set: function (value) {
            this._setOption('valueType', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "visualRange", {
        get: function () {
            return this._getOption('visualRange');
        },
        set: function (value) {
            this._setOption('visualRange', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "visualRangeUpdateMode", {
        get: function () {
            return this._getOption('visualRangeUpdateMode');
        },
        set: function (value) {
            this._setOption('visualRangeUpdateMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "wholeRange", {
        get: function () {
            return this._getOption('wholeRange');
        },
        set: function (value) {
            this._setOption('wholeRange', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "_optionPath", {
        get: function () {
            return 'valueAxis';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "breaksChildren", {
        get: function () {
            return this._getOption('breaks');
        },
        set: function (value) {
            this.setChildren('breaks', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "constantLinesChildren", {
        get: function () {
            return this._getOption('constantLines');
        },
        set: function (value) {
            this.setChildren('constantLines', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValueAxisComponent.prototype, "stripsChildren", {
        get: function () {
            return this._getOption('strips');
        },
        set: function (value) {
            this.setChildren('strips', value);
        },
        enumerable: true,
        configurable: true
    });
    DxiValueAxisComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxiValueAxisComponent.prototype, "allowDecimals", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxiValueAxisComponent.prototype, "autoBreaksEnabled", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiValueAxisComponent.prototype, "axisDivisionFactor", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxiValueAxisComponent.prototype, "breaks", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiValueAxisComponent.prototype, "breakStyle", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxiValueAxisComponent.prototype, "categories", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiValueAxisComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxiValueAxisComponent.prototype, "constantLines", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiValueAxisComponent.prototype, "constantLineStyle", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiValueAxisComponent.prototype, "customPosition", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiValueAxisComponent.prototype, "discreteAxisDivisionMode", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxiValueAxisComponent.prototype, "endOnTick", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiValueAxisComponent.prototype, "grid", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxiValueAxisComponent.prototype, "inverted", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiValueAxisComponent.prototype, "label", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiValueAxisComponent.prototype, "linearThreshold", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiValueAxisComponent.prototype, "logarithmBase", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiValueAxisComponent.prototype, "max", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiValueAxisComponent.prototype, "maxAutoBreakCount", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiValueAxisComponent.prototype, "maxValueMargin", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiValueAxisComponent.prototype, "min", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiValueAxisComponent.prototype, "minorGrid", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiValueAxisComponent.prototype, "minorTick", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiValueAxisComponent.prototype, "minorTickCount", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiValueAxisComponent.prototype, "minorTickInterval", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiValueAxisComponent.prototype, "minValueMargin", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiValueAxisComponent.prototype, "minVisualRangeLength", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiValueAxisComponent.prototype, "multipleAxesSpacing", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiValueAxisComponent.prototype, "name", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiValueAxisComponent.prototype, "offset", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiValueAxisComponent.prototype, "opacity", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiValueAxisComponent.prototype, "pane", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiValueAxisComponent.prototype, "placeholderSize", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiValueAxisComponent.prototype, "position", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxiValueAxisComponent.prototype, "showZero", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxiValueAxisComponent.prototype, "strips", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiValueAxisComponent.prototype, "stripStyle", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiValueAxisComponent.prototype, "synchronizedValue", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiValueAxisComponent.prototype, "tick", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiValueAxisComponent.prototype, "tickInterval", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiValueAxisComponent.prototype, "title", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiValueAxisComponent.prototype, "type", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxiValueAxisComponent.prototype, "valueMarginsEnabled", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiValueAxisComponent.prototype, "valueType", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxiValueAxisComponent.prototype, "visible", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiValueAxisComponent.prototype, "visualRange", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiValueAxisComponent.prototype, "visualRangeUpdateMode", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiValueAxisComponent.prototype, "wholeRange", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiValueAxisComponent.prototype, "width", null);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxiValueAxisComponent.prototype, "visualRangeChange", void 0);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiBreakComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxiValueAxisComponent.prototype, "breaksChildren", null);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiConstantLineComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxiValueAxisComponent.prototype, "constantLinesChildren", null);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiStripComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxiValueAxisComponent.prototype, "stripsChildren", null);
    DxiValueAxisComponent = __decorate([
        Component({
            selector: 'dxi-value-axis',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiValueAxisComponent);
    return DxiValueAxisComponent;
}(CollectionNestedOption));
var DxiValueAxisModule = /** @class */ (function () {
    function DxiValueAxisModule() {
    }
    DxiValueAxisModule = __decorate([
        NgModule({
            declarations: [
                DxiValueAxisComponent
            ],
            exports: [
                DxiValueAxisComponent
            ],
        })
    ], DxiValueAxisModule);
    return DxiValueAxisModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoValueAxisComponent = /** @class */ (function (_super) {
    __extends(DxoValueAxisComponent, _super);
    function DxoValueAxisComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        _this._createEventEmitters([
            { emit: 'visualRangeChange' }
        ]);
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoValueAxisComponent.prototype, "allowDecimals", {
        get: function () {
            return this._getOption('allowDecimals');
        },
        set: function (value) {
            this._setOption('allowDecimals', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "axisDivisionFactor", {
        get: function () {
            return this._getOption('axisDivisionFactor');
        },
        set: function (value) {
            this._setOption('axisDivisionFactor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "categories", {
        get: function () {
            return this._getOption('categories');
        },
        set: function (value) {
            this._setOption('categories', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "constantLines", {
        get: function () {
            return this._getOption('constantLines');
        },
        set: function (value) {
            this._setOption('constantLines', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "constantLineStyle", {
        get: function () {
            return this._getOption('constantLineStyle');
        },
        set: function (value) {
            this._setOption('constantLineStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "discreteAxisDivisionMode", {
        get: function () {
            return this._getOption('discreteAxisDivisionMode');
        },
        set: function (value) {
            this._setOption('discreteAxisDivisionMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "endOnTick", {
        get: function () {
            return this._getOption('endOnTick');
        },
        set: function (value) {
            this._setOption('endOnTick', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "grid", {
        get: function () {
            return this._getOption('grid');
        },
        set: function (value) {
            this._setOption('grid', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "inverted", {
        get: function () {
            return this._getOption('inverted');
        },
        set: function (value) {
            this._setOption('inverted', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "label", {
        get: function () {
            return this._getOption('label');
        },
        set: function (value) {
            this._setOption('label', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "linearThreshold", {
        get: function () {
            return this._getOption('linearThreshold');
        },
        set: function (value) {
            this._setOption('linearThreshold', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "logarithmBase", {
        get: function () {
            return this._getOption('logarithmBase');
        },
        set: function (value) {
            this._setOption('logarithmBase', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "maxValueMargin", {
        get: function () {
            return this._getOption('maxValueMargin');
        },
        set: function (value) {
            this._setOption('maxValueMargin', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "minorGrid", {
        get: function () {
            return this._getOption('minorGrid');
        },
        set: function (value) {
            this._setOption('minorGrid', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "minorTick", {
        get: function () {
            return this._getOption('minorTick');
        },
        set: function (value) {
            this._setOption('minorTick', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "minorTickCount", {
        get: function () {
            return this._getOption('minorTickCount');
        },
        set: function (value) {
            this._setOption('minorTickCount', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "minorTickInterval", {
        get: function () {
            return this._getOption('minorTickInterval');
        },
        set: function (value) {
            this._setOption('minorTickInterval', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "minValueMargin", {
        get: function () {
            return this._getOption('minValueMargin');
        },
        set: function (value) {
            this._setOption('minValueMargin', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "minVisualRangeLength", {
        get: function () {
            return this._getOption('minVisualRangeLength');
        },
        set: function (value) {
            this._setOption('minVisualRangeLength', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "opacity", {
        get: function () {
            return this._getOption('opacity');
        },
        set: function (value) {
            this._setOption('opacity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "showZero", {
        get: function () {
            return this._getOption('showZero');
        },
        set: function (value) {
            this._setOption('showZero', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "strips", {
        get: function () {
            return this._getOption('strips');
        },
        set: function (value) {
            this._setOption('strips', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "stripStyle", {
        get: function () {
            return this._getOption('stripStyle');
        },
        set: function (value) {
            this._setOption('stripStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "tick", {
        get: function () {
            return this._getOption('tick');
        },
        set: function (value) {
            this._setOption('tick', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "tickInterval", {
        get: function () {
            return this._getOption('tickInterval');
        },
        set: function (value) {
            this._setOption('tickInterval', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "type", {
        get: function () {
            return this._getOption('type');
        },
        set: function (value) {
            this._setOption('type', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "valueMarginsEnabled", {
        get: function () {
            return this._getOption('valueMarginsEnabled');
        },
        set: function (value) {
            this._setOption('valueMarginsEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "valueType", {
        get: function () {
            return this._getOption('valueType');
        },
        set: function (value) {
            this._setOption('valueType', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "visualRange", {
        get: function () {
            return this._getOption('visualRange');
        },
        set: function (value) {
            this._setOption('visualRange', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "visualRangeUpdateMode", {
        get: function () {
            return this._getOption('visualRangeUpdateMode');
        },
        set: function (value) {
            this._setOption('visualRangeUpdateMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "wholeRange", {
        get: function () {
            return this._getOption('wholeRange');
        },
        set: function (value) {
            this._setOption('wholeRange', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "max", {
        get: function () {
            return this._getOption('max');
        },
        set: function (value) {
            this._setOption('max', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "min", {
        get: function () {
            return this._getOption('min');
        },
        set: function (value) {
            this._setOption('min', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "_optionPath", {
        get: function () {
            return 'valueAxis';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "constantLinesChildren", {
        get: function () {
            return this._getOption('constantLines');
        },
        set: function (value) {
            this.setChildren('constantLines', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueAxisComponent.prototype, "stripsChildren", {
        get: function () {
            return this._getOption('strips');
        },
        set: function (value) {
            this.setChildren('strips', value);
        },
        enumerable: true,
        configurable: true
    });
    DxoValueAxisComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoValueAxisComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoValueAxisComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoValueAxisComponent.prototype, "allowDecimals", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoValueAxisComponent.prototype, "axisDivisionFactor", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxoValueAxisComponent.prototype, "categories", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoValueAxisComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxoValueAxisComponent.prototype, "constantLines", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoValueAxisComponent.prototype, "constantLineStyle", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoValueAxisComponent.prototype, "discreteAxisDivisionMode", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoValueAxisComponent.prototype, "endOnTick", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoValueAxisComponent.prototype, "grid", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoValueAxisComponent.prototype, "inverted", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoValueAxisComponent.prototype, "label", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoValueAxisComponent.prototype, "linearThreshold", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoValueAxisComponent.prototype, "logarithmBase", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoValueAxisComponent.prototype, "maxValueMargin", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoValueAxisComponent.prototype, "minorGrid", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoValueAxisComponent.prototype, "minorTick", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoValueAxisComponent.prototype, "minorTickCount", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoValueAxisComponent.prototype, "minorTickInterval", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoValueAxisComponent.prototype, "minValueMargin", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoValueAxisComponent.prototype, "minVisualRangeLength", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoValueAxisComponent.prototype, "opacity", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoValueAxisComponent.prototype, "showZero", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxoValueAxisComponent.prototype, "strips", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoValueAxisComponent.prototype, "stripStyle", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoValueAxisComponent.prototype, "tick", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoValueAxisComponent.prototype, "tickInterval", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoValueAxisComponent.prototype, "type", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoValueAxisComponent.prototype, "valueMarginsEnabled", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoValueAxisComponent.prototype, "valueType", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoValueAxisComponent.prototype, "visible", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoValueAxisComponent.prototype, "visualRange", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoValueAxisComponent.prototype, "visualRangeUpdateMode", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoValueAxisComponent.prototype, "wholeRange", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoValueAxisComponent.prototype, "width", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoValueAxisComponent.prototype, "max", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoValueAxisComponent.prototype, "min", null);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DxoValueAxisComponent.prototype, "visualRangeChange", void 0);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiConstantLineComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxoValueAxisComponent.prototype, "constantLinesChildren", null);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiStripComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxoValueAxisComponent.prototype, "stripsChildren", null);
    DxoValueAxisComponent = __decorate([
        Component({
            selector: 'dxo-value-axis',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoValueAxisComponent);
    return DxoValueAxisComponent;
}(NestedOption));
var DxoValueAxisModule = /** @class */ (function () {
    function DxoValueAxisModule() {
    }
    DxoValueAxisModule = __decorate([
        NgModule({
            declarations: [
                DxoValueAxisComponent
            ],
            exports: [
                DxoValueAxisComponent
            ],
        })
    ], DxoValueAxisModule);
    return DxoValueAxisModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoValueErrorBarComponent = /** @class */ (function (_super) {
    __extends(DxoValueErrorBarComponent, _super);
    function DxoValueErrorBarComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoValueErrorBarComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueErrorBarComponent.prototype, "displayMode", {
        get: function () {
            return this._getOption('displayMode');
        },
        set: function (value) {
            this._setOption('displayMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueErrorBarComponent.prototype, "edgeLength", {
        get: function () {
            return this._getOption('edgeLength');
        },
        set: function (value) {
            this._setOption('edgeLength', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueErrorBarComponent.prototype, "highValueField", {
        get: function () {
            return this._getOption('highValueField');
        },
        set: function (value) {
            this._setOption('highValueField', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueErrorBarComponent.prototype, "lineWidth", {
        get: function () {
            return this._getOption('lineWidth');
        },
        set: function (value) {
            this._setOption('lineWidth', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueErrorBarComponent.prototype, "lowValueField", {
        get: function () {
            return this._getOption('lowValueField');
        },
        set: function (value) {
            this._setOption('lowValueField', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueErrorBarComponent.prototype, "opacity", {
        get: function () {
            return this._getOption('opacity');
        },
        set: function (value) {
            this._setOption('opacity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueErrorBarComponent.prototype, "type", {
        get: function () {
            return this._getOption('type');
        },
        set: function (value) {
            this._setOption('type', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueErrorBarComponent.prototype, "value", {
        get: function () {
            return this._getOption('value');
        },
        set: function (value) {
            this._setOption('value', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoValueErrorBarComponent.prototype, "_optionPath", {
        get: function () {
            return 'valueErrorBar';
        },
        enumerable: true,
        configurable: true
    });
    DxoValueErrorBarComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoValueErrorBarComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoValueErrorBarComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoValueErrorBarComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoValueErrorBarComponent.prototype, "displayMode", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoValueErrorBarComponent.prototype, "edgeLength", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoValueErrorBarComponent.prototype, "highValueField", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoValueErrorBarComponent.prototype, "lineWidth", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoValueErrorBarComponent.prototype, "lowValueField", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoValueErrorBarComponent.prototype, "opacity", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoValueErrorBarComponent.prototype, "type", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoValueErrorBarComponent.prototype, "value", null);
    DxoValueErrorBarComponent = __decorate([
        Component({
            selector: 'dxo-value-error-bar',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoValueErrorBarComponent);
    return DxoValueErrorBarComponent;
}(NestedOption));
var DxoValueErrorBarModule = /** @class */ (function () {
    function DxoValueErrorBarModule() {
    }
    DxoValueErrorBarModule = __decorate([
        NgModule({
            declarations: [
                DxoValueErrorBarComponent
            ],
            exports: [
                DxoValueErrorBarComponent
            ],
        })
    ], DxoValueErrorBarModule);
    return DxoValueErrorBarModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoValueFormatComponent = /** @class */ (function (_super) {
    __extends(DxoValueFormatComponent, _super);
    function DxoValueFormatComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoValueFormatComponent.prototype, "_optionPath", {
        get: function () {
            return 'valueFormat';
        },
        enumerable: true,
        configurable: true
    });
    DxoValueFormatComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoValueFormatComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoValueFormatComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoValueFormatComponent = __decorate([
        Component({
            selector: 'dxo-value-format',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'currency',
                'formatter',
                'parser',
                'precision',
                'type'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoValueFormatComponent);
    return DxoValueFormatComponent;
}(DxoFormat));
var DxoValueFormatModule = /** @class */ (function () {
    function DxoValueFormatModule() {
    }
    DxoValueFormatModule = __decorate([
        NgModule({
            declarations: [
                DxoValueFormatComponent
            ],
            exports: [
                DxoValueFormatComponent
            ],
        })
    ], DxoValueFormatModule);
    return DxoValueFormatModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoValueIndicatorComponent = /** @class */ (function (_super) {
    __extends(DxoValueIndicatorComponent, _super);
    function DxoValueIndicatorComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoValueIndicatorComponent.prototype, "_optionPath", {
        get: function () {
            return 'valueIndicator';
        },
        enumerable: true,
        configurable: true
    });
    DxoValueIndicatorComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoValueIndicatorComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoValueIndicatorComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoValueIndicatorComponent = __decorate([
        Component({
            selector: 'dxo-value-indicator',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'arrowLength',
                'backgroundColor',
                'baseValue',
                'beginAdaptingAtRadius',
                'color',
                'horizontalOrientation',
                'indentFromCenter',
                'length',
                'offset',
                'palette',
                'secondColor',
                'secondFraction',
                'size',
                'spindleGapSize',
                'spindleSize',
                'text',
                'type',
                'verticalOrientation',
                'width'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoValueIndicatorComponent);
    return DxoValueIndicatorComponent;
}(DxoGaugeIndicator));
var DxoValueIndicatorModule = /** @class */ (function () {
    function DxoValueIndicatorModule() {
    }
    DxoValueIndicatorModule = __decorate([
        NgModule({
            declarations: [
                DxoValueIndicatorComponent
            ],
            exports: [
                DxoValueIndicatorComponent
            ],
        })
    ], DxoValueIndicatorModule);
    return DxoValueIndicatorModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoHtmlEditorVariables = /** @class */ (function (_super) {
    __extends(DxoHtmlEditorVariables, _super);
    function DxoHtmlEditorVariables() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DxoHtmlEditorVariables.prototype, "dataSource", {
        get: function () {
            return this._getOption('dataSource');
        },
        set: function (value) {
            this._setOption('dataSource', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHtmlEditorVariables.prototype, "escapeChar", {
        get: function () {
            return this._getOption('escapeChar');
        },
        set: function (value) {
            this._setOption('escapeChar', value);
        },
        enumerable: true,
        configurable: true
    });
    return DxoHtmlEditorVariables;
}(NestedOption));

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoVariablesComponent = /** @class */ (function (_super) {
    __extends(DxoVariablesComponent, _super);
    function DxoVariablesComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoVariablesComponent.prototype, "_optionPath", {
        get: function () {
            return 'variables';
        },
        enumerable: true,
        configurable: true
    });
    DxoVariablesComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoVariablesComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoVariablesComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoVariablesComponent = __decorate([
        Component({
            selector: 'dxo-variables',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'dataSource',
                'escapeChar'
            ],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoVariablesComponent);
    return DxoVariablesComponent;
}(DxoHtmlEditorVariables));
var DxoVariablesModule = /** @class */ (function () {
    function DxoVariablesModule() {
    }
    DxoVariablesModule = __decorate([
        NgModule({
            declarations: [
                DxoVariablesComponent
            ],
            exports: [
                DxoVariablesComponent
            ],
        })
    ], DxoVariablesModule);
    return DxoVariablesModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoVerticalLineComponent = /** @class */ (function (_super) {
    __extends(DxoVerticalLineComponent, _super);
    function DxoVerticalLineComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoVerticalLineComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoVerticalLineComponent.prototype, "dashStyle", {
        get: function () {
            return this._getOption('dashStyle');
        },
        set: function (value) {
            this._setOption('dashStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoVerticalLineComponent.prototype, "label", {
        get: function () {
            return this._getOption('label');
        },
        set: function (value) {
            this._setOption('label', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoVerticalLineComponent.prototype, "opacity", {
        get: function () {
            return this._getOption('opacity');
        },
        set: function (value) {
            this._setOption('opacity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoVerticalLineComponent.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoVerticalLineComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoVerticalLineComponent.prototype, "_optionPath", {
        get: function () {
            return 'verticalLine';
        },
        enumerable: true,
        configurable: true
    });
    DxoVerticalLineComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoVerticalLineComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoVerticalLineComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoVerticalLineComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoVerticalLineComponent.prototype, "dashStyle", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoVerticalLineComponent.prototype, "label", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoVerticalLineComponent.prototype, "opacity", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoVerticalLineComponent.prototype, "visible", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoVerticalLineComponent.prototype, "width", null);
    DxoVerticalLineComponent = __decorate([
        Component({
            selector: 'dxo-vertical-line',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoVerticalLineComponent);
    return DxoVerticalLineComponent;
}(NestedOption));
var DxoVerticalLineModule = /** @class */ (function () {
    function DxoVerticalLineModule() {
    }
    DxoVerticalLineModule = __decorate([
        NgModule({
            declarations: [
                DxoVerticalLineComponent
            ],
            exports: [
                DxoVerticalLineComponent
            ],
        })
    ], DxoVerticalLineModule);
    return DxoVerticalLineModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxiViewComponent = /** @class */ (function (_super) {
    __extends(DxiViewComponent, _super);
    function DxiViewComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiViewComponent.prototype, "agendaDuration", {
        get: function () {
            return this._getOption('agendaDuration');
        },
        set: function (value) {
            this._setOption('agendaDuration', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiViewComponent.prototype, "appointmentCollectorTemplate", {
        get: function () {
            return this._getOption('appointmentCollectorTemplate');
        },
        set: function (value) {
            this._setOption('appointmentCollectorTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiViewComponent.prototype, "appointmentTemplate", {
        get: function () {
            return this._getOption('appointmentTemplate');
        },
        set: function (value) {
            this._setOption('appointmentTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiViewComponent.prototype, "appointmentTooltipTemplate", {
        get: function () {
            return this._getOption('appointmentTooltipTemplate');
        },
        set: function (value) {
            this._setOption('appointmentTooltipTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiViewComponent.prototype, "cellDuration", {
        get: function () {
            return this._getOption('cellDuration');
        },
        set: function (value) {
            this._setOption('cellDuration', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiViewComponent.prototype, "dataCellTemplate", {
        get: function () {
            return this._getOption('dataCellTemplate');
        },
        set: function (value) {
            this._setOption('dataCellTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiViewComponent.prototype, "dateCellTemplate", {
        get: function () {
            return this._getOption('dateCellTemplate');
        },
        set: function (value) {
            this._setOption('dateCellTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiViewComponent.prototype, "dropDownAppointmentTemplate", {
        get: function () {
            return this._getOption('dropDownAppointmentTemplate');
        },
        set: function (value) {
            this._setOption('dropDownAppointmentTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiViewComponent.prototype, "endDayHour", {
        get: function () {
            return this._getOption('endDayHour');
        },
        set: function (value) {
            this._setOption('endDayHour', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiViewComponent.prototype, "firstDayOfWeek", {
        get: function () {
            return this._getOption('firstDayOfWeek');
        },
        set: function (value) {
            this._setOption('firstDayOfWeek', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiViewComponent.prototype, "groupByDate", {
        get: function () {
            return this._getOption('groupByDate');
        },
        set: function (value) {
            this._setOption('groupByDate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiViewComponent.prototype, "groupOrientation", {
        get: function () {
            return this._getOption('groupOrientation');
        },
        set: function (value) {
            this._setOption('groupOrientation', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiViewComponent.prototype, "groups", {
        get: function () {
            return this._getOption('groups');
        },
        set: function (value) {
            this._setOption('groups', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiViewComponent.prototype, "intervalCount", {
        get: function () {
            return this._getOption('intervalCount');
        },
        set: function (value) {
            this._setOption('intervalCount', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiViewComponent.prototype, "maxAppointmentsPerCell", {
        get: function () {
            return this._getOption('maxAppointmentsPerCell');
        },
        set: function (value) {
            this._setOption('maxAppointmentsPerCell', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiViewComponent.prototype, "name", {
        get: function () {
            return this._getOption('name');
        },
        set: function (value) {
            this._setOption('name', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiViewComponent.prototype, "resourceCellTemplate", {
        get: function () {
            return this._getOption('resourceCellTemplate');
        },
        set: function (value) {
            this._setOption('resourceCellTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiViewComponent.prototype, "startDate", {
        get: function () {
            return this._getOption('startDate');
        },
        set: function (value) {
            this._setOption('startDate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiViewComponent.prototype, "startDayHour", {
        get: function () {
            return this._getOption('startDayHour');
        },
        set: function (value) {
            this._setOption('startDayHour', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiViewComponent.prototype, "timeCellTemplate", {
        get: function () {
            return this._getOption('timeCellTemplate');
        },
        set: function (value) {
            this._setOption('timeCellTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiViewComponent.prototype, "type", {
        get: function () {
            return this._getOption('type');
        },
        set: function (value) {
            this._setOption('type', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiViewComponent.prototype, "_optionPath", {
        get: function () {
            return 'views';
        },
        enumerable: true,
        configurable: true
    });
    DxiViewComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiViewComponent.prototype, "agendaDuration", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiViewComponent.prototype, "appointmentCollectorTemplate", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiViewComponent.prototype, "appointmentTemplate", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiViewComponent.prototype, "appointmentTooltipTemplate", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiViewComponent.prototype, "cellDuration", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiViewComponent.prototype, "dataCellTemplate", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiViewComponent.prototype, "dateCellTemplate", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiViewComponent.prototype, "dropDownAppointmentTemplate", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiViewComponent.prototype, "endDayHour", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiViewComponent.prototype, "firstDayOfWeek", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxiViewComponent.prototype, "groupByDate", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiViewComponent.prototype, "groupOrientation", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxiViewComponent.prototype, "groups", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiViewComponent.prototype, "intervalCount", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiViewComponent.prototype, "maxAppointmentsPerCell", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiViewComponent.prototype, "name", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiViewComponent.prototype, "resourceCellTemplate", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiViewComponent.prototype, "startDate", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxiViewComponent.prototype, "startDayHour", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiViewComponent.prototype, "timeCellTemplate", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxiViewComponent.prototype, "type", null);
    DxiViewComponent = __decorate([
        Component({
            selector: 'dxi-view',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiViewComponent);
    return DxiViewComponent;
}(CollectionNestedOption));
var DxiViewModule = /** @class */ (function () {
    function DxiViewModule() {
    }
    DxiViewModule = __decorate([
        NgModule({
            declarations: [
                DxiViewComponent
            ],
            exports: [
                DxiViewComponent
            ],
        })
    ], DxiViewModule);
    return DxiViewModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoViewToolbarComponent = /** @class */ (function (_super) {
    __extends(DxoViewToolbarComponent, _super);
    function DxoViewToolbarComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoViewToolbarComponent.prototype, "commands", {
        get: function () {
            return this._getOption('commands');
        },
        set: function (value) {
            this._setOption('commands', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoViewToolbarComponent.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoViewToolbarComponent.prototype, "_optionPath", {
        get: function () {
            return 'viewToolbar';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoViewToolbarComponent.prototype, "commandsChildren", {
        get: function () {
            return this._getOption('commands');
        },
        set: function (value) {
            this.setChildren('commands', value);
        },
        enumerable: true,
        configurable: true
    });
    DxoViewToolbarComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoViewToolbarComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoViewToolbarComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxoViewToolbarComponent.prototype, "commands", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoViewToolbarComponent.prototype, "visible", null);
    __decorate([
        ContentChildren(forwardRef(function () { return DxiCommandComponent; })),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxoViewToolbarComponent.prototype, "commandsChildren", null);
    DxoViewToolbarComponent = __decorate([
        Component({
            selector: 'dxo-view-toolbar',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoViewToolbarComponent);
    return DxoViewToolbarComponent;
}(NestedOption));
var DxoViewToolbarModule = /** @class */ (function () {
    function DxoViewToolbarModule() {
    }
    DxoViewToolbarModule = __decorate([
        NgModule({
            declarations: [
                DxoViewToolbarComponent
            ],
            exports: [
                DxoViewToolbarComponent
            ],
        })
    ], DxoViewToolbarModule);
    return DxoViewToolbarModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoWidthComponent = /** @class */ (function (_super) {
    __extends(DxoWidthComponent, _super);
    function DxoWidthComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoWidthComponent.prototype, "rangeMaxPoint", {
        get: function () {
            return this._getOption('rangeMaxPoint');
        },
        set: function (value) {
            this._setOption('rangeMaxPoint', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoWidthComponent.prototype, "rangeMinPoint", {
        get: function () {
            return this._getOption('rangeMinPoint');
        },
        set: function (value) {
            this._setOption('rangeMinPoint', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoWidthComponent.prototype, "end", {
        get: function () {
            return this._getOption('end');
        },
        set: function (value) {
            this._setOption('end', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoWidthComponent.prototype, "start", {
        get: function () {
            return this._getOption('start');
        },
        set: function (value) {
            this._setOption('start', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoWidthComponent.prototype, "_optionPath", {
        get: function () {
            return 'width';
        },
        enumerable: true,
        configurable: true
    });
    DxoWidthComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoWidthComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoWidthComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoWidthComponent.prototype, "rangeMaxPoint", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoWidthComponent.prototype, "rangeMinPoint", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoWidthComponent.prototype, "end", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoWidthComponent.prototype, "start", null);
    DxoWidthComponent = __decorate([
        Component({
            selector: 'dxo-width',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoWidthComponent);
    return DxoWidthComponent;
}(NestedOption));
var DxoWidthModule = /** @class */ (function () {
    function DxoWidthModule() {
    }
    DxoWidthModule = __decorate([
        NgModule({
            declarations: [
                DxoWidthComponent
            ],
            exports: [
                DxoWidthComponent
            ],
        })
    ], DxoWidthModule);
    return DxoWidthModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoZoomAndPanComponent = /** @class */ (function (_super) {
    __extends(DxoZoomAndPanComponent, _super);
    function DxoZoomAndPanComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoZoomAndPanComponent.prototype, "allowMouseWheel", {
        get: function () {
            return this._getOption('allowMouseWheel');
        },
        set: function (value) {
            this._setOption('allowMouseWheel', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoZoomAndPanComponent.prototype, "allowTouchGestures", {
        get: function () {
            return this._getOption('allowTouchGestures');
        },
        set: function (value) {
            this._setOption('allowTouchGestures', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoZoomAndPanComponent.prototype, "argumentAxis", {
        get: function () {
            return this._getOption('argumentAxis');
        },
        set: function (value) {
            this._setOption('argumentAxis', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoZoomAndPanComponent.prototype, "dragBoxStyle", {
        get: function () {
            return this._getOption('dragBoxStyle');
        },
        set: function (value) {
            this._setOption('dragBoxStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoZoomAndPanComponent.prototype, "dragToZoom", {
        get: function () {
            return this._getOption('dragToZoom');
        },
        set: function (value) {
            this._setOption('dragToZoom', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoZoomAndPanComponent.prototype, "panKey", {
        get: function () {
            return this._getOption('panKey');
        },
        set: function (value) {
            this._setOption('panKey', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoZoomAndPanComponent.prototype, "valueAxis", {
        get: function () {
            return this._getOption('valueAxis');
        },
        set: function (value) {
            this._setOption('valueAxis', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoZoomAndPanComponent.prototype, "_optionPath", {
        get: function () {
            return 'zoomAndPan';
        },
        enumerable: true,
        configurable: true
    });
    DxoZoomAndPanComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoZoomAndPanComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoZoomAndPanComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoZoomAndPanComponent.prototype, "allowMouseWheel", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoZoomAndPanComponent.prototype, "allowTouchGestures", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoZoomAndPanComponent.prototype, "argumentAxis", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoZoomAndPanComponent.prototype, "dragBoxStyle", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], DxoZoomAndPanComponent.prototype, "dragToZoom", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoZoomAndPanComponent.prototype, "panKey", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], DxoZoomAndPanComponent.prototype, "valueAxis", null);
    DxoZoomAndPanComponent = __decorate([
        Component({
            selector: 'dxo-zoom-and-pan',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoZoomAndPanComponent);
    return DxoZoomAndPanComponent;
}(NestedOption));
var DxoZoomAndPanModule = /** @class */ (function () {
    function DxoZoomAndPanModule() {
    }
    DxoZoomAndPanModule = __decorate([
        NgModule({
            declarations: [
                DxoZoomAndPanComponent
            ],
            exports: [
                DxoZoomAndPanComponent
            ],
        })
    ], DxoZoomAndPanModule);
    return DxoZoomAndPanModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var DxoZoomLevelComponent = /** @class */ (function (_super) {
    __extends(DxoZoomLevelComponent, _super);
    function DxoZoomLevelComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoZoomLevelComponent.prototype, "items", {
        get: function () {
            return this._getOption('items');
        },
        set: function (value) {
            this._setOption('items', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoZoomLevelComponent.prototype, "value", {
        get: function () {
            return this._getOption('value');
        },
        set: function (value) {
            this._setOption('value', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoZoomLevelComponent.prototype, "_optionPath", {
        get: function () {
            return 'zoomLevel';
        },
        enumerable: true,
        configurable: true
    });
    DxoZoomLevelComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoZoomLevelComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoZoomLevelComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], DxoZoomLevelComponent.prototype, "items", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], DxoZoomLevelComponent.prototype, "value", null);
    DxoZoomLevelComponent = __decorate([
        Component({
            selector: 'dxo-zoom-level',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        __param(0, SkipSelf()), __param(0, Host()),
        __param(1, Host()),
        __metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoZoomLevelComponent);
    return DxoZoomLevelComponent;
}(NestedOption));
var DxoZoomLevelModule = /** @class */ (function () {
    function DxoZoomLevelModule() {
    }
    DxoZoomLevelModule = __decorate([
        NgModule({
            declarations: [
                DxoZoomLevelComponent
            ],
            exports: [
                DxoZoomLevelComponent
            ],
        })
    ], DxoZoomLevelModule);
    return DxoZoomLevelModule;
}());

/*!
 * devextreme-angular
 * Version: 20.1.6
 * Build date: Fri Jul 17 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */

/**
 * Generated bundle index. Do not edit.
 */

export { DxiAnnotationComponent, DxiAnnotationModule, DxiBreakComponent, DxiBreakModule, DxiButtonComponent, DxiButtonModule, DxiCenterComponent, DxiCenterModule, DxiColComponent, DxiColModule, DxiColumnComponent, DxiColumnModule, DxiCommandComponent, DxiCommandModule, DxiConnectionPointComponent, DxiConnectionPointModule, DxiConstantLineComponent, DxiConstantLineModule, DxiCustomOperationComponent, DxiCustomOperationModule, DxiCustomShapeComponent, DxiCustomShapeModule, DxiFieldComponent, DxiFieldModule, DxiFileSelectionItemComponent, DxiFileSelectionItemModule, DxiGroupComponent, DxiGroupItemComponent, DxiGroupItemModule, DxiGroupModule, DxiItemComponent, DxiItemModule, DxiLayerComponent, DxiLayerModule, DxiLegendComponent, DxiLegendModule, DxiLocationComponent, DxiLocationModule, DxiMarkerComponent, DxiMarkerModule, DxiMentionComponent, DxiMentionModule, DxiMenuItemComponent, DxiMenuItemModule, DxiPaneComponent, DxiPaneModule, DxiRangeComponent, DxiRangeModule, DxiResourceComponent, DxiResourceModule, DxiRouteComponent, DxiRouteModule, DxiRowComponent, DxiRowModule, DxiSeriesComponent, DxiSeriesModule, DxiSortByGroupSummaryInfoComponent, DxiSortByGroupSummaryInfoModule, DxiStripComponent, DxiStripLineComponent, DxiStripLineModule, DxiStripModule, DxiTabComponent, DxiTabModule, DxiToolbarItemComponent, DxiToolbarItemModule, DxiTotalItemComponent, DxiTotalItemModule, DxiValidationRuleComponent, DxiValidationRuleModule, DxiValueAxisComponent, DxiValueAxisModule, DxiViewComponent, DxiViewModule, DxoAdapterComponent, DxoAdapterModule, DxoAdaptiveLayoutComponent, DxoAdaptiveLayoutModule, DxoAggregationComponent, DxoAggregationIntervalComponent, DxoAggregationIntervalModule, DxoAggregationModule, DxoAnimationComponent, DxoAnimationModule, DxoAppointmentDraggingComponent, DxoAppointmentDraggingModule, DxoAreaComponent, DxoAreaModule, DxoArgumentAxisComponent, DxoArgumentAxisModule, DxoArgumentFormatComponent, DxoArgumentFormatModule, DxoAtComponent, DxoAtModule, DxoAutoLayoutComponent, DxoAutoLayoutModule, DxoBackgroundComponent, DxoBackgroundModule, DxoBarComponent, DxoBarModule, DxoBehaviorComponent, DxoBehaviorModule, DxoBorderComponent, DxoBorderModule, DxoBoundaryOffsetComponent, DxoBoundaryOffsetModule, DxoBoxComponent, DxoBoxModule, DxoBreakStyleComponent, DxoBreakStyleModule, DxoBubbleComponent, DxoBubbleModule, DxoButtonOptionsComponent, DxoButtonOptionsModule, DxoCalendarOptionsComponent, DxoCalendarOptionsModule, DxoCandlestickComponent, DxoCandlestickModule, DxoChartComponent, DxoChartModule, DxoColCountByScreenComponent, DxoColCountByScreenModule, DxoCollisionComponent, DxoCollisionModule, DxoColorizerComponent, DxoColorizerModule, DxoColumnChooserComponent, DxoColumnChooserModule, DxoColumnFixingComponent, DxoColumnFixingModule, DxoCommonAnnotationSettingsComponent, DxoCommonAnnotationSettingsModule, DxoCommonAxisSettingsComponent, DxoCommonAxisSettingsModule, DxoCommonPaneSettingsComponent, DxoCommonPaneSettingsModule, DxoCommonSeriesSettingsComponent, DxoCommonSeriesSettingsModule, DxoConnectorComponent, DxoConnectorModule, DxoConstantLineStyleComponent, DxoConstantLineStyleModule, DxoContextMenuComponent, DxoContextMenuModule, DxoContextToolboxComponent, DxoContextToolboxModule, DxoControlBarComponent, DxoControlBarModule, DxoCrosshairComponent, DxoCrosshairModule, DxoCursorOffsetComponent, DxoCursorOffsetModule, DxoDataPrepareSettingsComponent, DxoDataPrepareSettingsModule, DxoDataSourceComponent, DxoDataSourceModule, DxoDefaultItemPropertiesComponent, DxoDefaultItemPropertiesModule, DxoDelayComponent, DxoDelayModule, DxoDependenciesComponent, DxoDependenciesModule, DxoDetailsComponent, DxoDetailsModule, DxoDisplayFormatComponent, DxoDisplayFormatModule, DxoDragBoxStyleComponent, DxoDragBoxStyleModule, DxoDropDownOptionsComponent, DxoDropDownOptionsModule, DxoEdgesComponent, DxoEdgesModule, DxoEditingComponent, DxoEditingModule, DxoExportComponent, DxoExportModule, DxoFieldChooserComponent, DxoFieldChooserModule, DxoFieldPanelComponent, DxoFieldPanelModule, DxoFilterBuilderComponent, DxoFilterBuilderModule, DxoFilterBuilderPopupComponent, DxoFilterBuilderPopupModule, DxoFilterOperationDescriptionsComponent, DxoFilterOperationDescriptionsModule, DxoFilterPanelComponent, DxoFilterPanelModule, DxoFilterRowComponent, DxoFilterRowModule, DxoFontComponent, DxoFontModule, DxoFormComponent, DxoFormItemComponent, DxoFormItemModule, DxoFormModule, DxoFormatComponent, DxoFormatModule, DxoFullstackedareaComponent, DxoFullstackedareaModule, DxoFullstackedbarComponent, DxoFullstackedbarModule, DxoFullstackedlineComponent, DxoFullstackedlineModule, DxoFullstackedsplineComponent, DxoFullstackedsplineModule, DxoFullstackedsplineareaComponent, DxoFullstackedsplineareaModule, DxoGeometryComponent, DxoGeometryModule, DxoGridComponent, DxoGridModule, DxoGridSizeComponent, DxoGridSizeModule, DxoGroupComponent, DxoGroupModule, DxoGroupOperationDescriptionsComponent, DxoGroupOperationDescriptionsModule, DxoGroupPanelComponent, DxoGroupPanelModule, DxoGroupingComponent, DxoGroupingModule, DxoHatchingComponent, DxoHatchingModule, DxoHeaderFilterComponent, DxoHeaderFilterModule, DxoHeightComponent, DxoHeightModule, DxoHideComponent, DxoHideEventComponent, DxoHideEventModule, DxoHideModule, DxoHistoryToolbarComponent, DxoHistoryToolbarModule, DxoHorizontalLineComponent, DxoHorizontalLineModule, DxoHoverStyleComponent, DxoHoverStyleModule, DxoImageComponent, DxoImageModule, DxoIndentComponent, DxoIndentModule, DxoItemComponent, DxoItemDraggingComponent, DxoItemDraggingModule, DxoItemModule, DxoItemTextFormatComponent, DxoItemTextFormatModule, DxoItemViewComponent, DxoItemViewModule, DxoKeyComponent, DxoKeyModule, DxoKeyboardNavigationComponent, DxoKeyboardNavigationModule, DxoLabelComponent, DxoLabelModule, DxoLegendComponent, DxoLegendModule, DxoLineComponent, DxoLineModule, DxoLinkComponent, DxoLinkModule, DxoLoadPanelComponent, DxoLoadPanelModule, DxoLoadingIndicatorComponent, DxoLoadingIndicatorModule, DxoLookupComponent, DxoLookupModule, DxoMainToolbarComponent, DxoMainToolbarModule, DxoMarginComponent, DxoMarginModule, DxoMarkerComponent, DxoMarkerModule, DxoMasterDetailComponent, DxoMasterDetailModule, DxoMaxRangeComponent, DxoMaxRangeModule, DxoMediaResizingComponent, DxoMediaResizingModule, DxoMinRangeComponent, DxoMinRangeModule, DxoMinVisualRangeLengthComponent, DxoMinVisualRangeLengthModule, DxoMinorGridComponent, DxoMinorGridModule, DxoMinorTickComponent, DxoMinorTickIntervalComponent, DxoMinorTickIntervalModule, DxoMinorTickModule, DxoMyComponent, DxoMyModule, DxoNodeComponent, DxoNodeModule, DxoNodesComponent, DxoNodesModule, DxoOffsetComponent, DxoOffsetModule, DxoOperationDescriptionsComponent, DxoOperationDescriptionsModule, DxoOptionsComponent, DxoOptionsModule, DxoPageSizeComponent, DxoPageSizeModule, DxoPagerComponent, DxoPagerModule, DxoPagingComponent, DxoPagingModule, DxoPermissionsComponent, DxoPermissionsModule, DxoPointComponent, DxoPointModule, DxoPopupComponent, DxoPopupModule, DxoPositionComponent, DxoPositionModule, DxoProjectionComponent, DxoProjectionModule, DxoPropertiesPanelComponent, DxoPropertiesPanelModule, DxoRangeContainerComponent, DxoRangeContainerModule, DxoRangeareaComponent, DxoRangeareaModule, DxoRangebarComponent, DxoRangebarModule, DxoReductionComponent, DxoReductionModule, DxoRemoteOperationsComponent, DxoRemoteOperationsModule, DxoResourceAssignmentsComponent, DxoResourceAssignmentsModule, DxoResourcesComponent, DxoResourcesModule, DxoRowDraggingComponent, DxoRowDraggingModule, DxoScaleComponent, DxoScaleModule, DxoScatterComponent, DxoScatterModule, DxoScrollBarComponent, DxoScrollBarModule, DxoScrollingComponent, DxoScrollingModule, DxoSearchEditorOptionsComponent, DxoSearchEditorOptionsModule, DxoSearchPanelComponent, DxoSearchPanelModule, DxoSelectionComponent, DxoSelectionModule, DxoSelectionStyleComponent, DxoSelectionStyleModule, DxoSeriesTemplateComponent, DxoSeriesTemplateModule, DxoShadowComponent, DxoShadowModule, DxoShowComponent, DxoShowEventComponent, DxoShowEventModule, DxoShowFirstSubmenuModeComponent, DxoShowFirstSubmenuModeModule, DxoShowModule, DxoShowSubmenuModeComponent, DxoShowSubmenuModeModule, DxoShutterComponent, DxoShutterModule, DxoSizeComponent, DxoSizeModule, DxoSliderHandleComponent, DxoSliderHandleModule, DxoSliderMarkerComponent, DxoSliderMarkerModule, DxoSmallValuesGroupingComponent, DxoSmallValuesGroupingModule, DxoSortingComponent, DxoSortingModule, DxoSourceComponent, DxoSourceModule, DxoSplineComponent, DxoSplineModule, DxoSplineareaComponent, DxoSplineareaModule, DxoStackedareaComponent, DxoStackedareaModule, DxoStackedbarComponent, DxoStackedbarModule, DxoStackedlineComponent, DxoStackedlineModule, DxoStackedsplineComponent, DxoStackedsplineModule, DxoStackedsplineareaComponent, DxoStackedsplineareaModule, DxoStateStoringComponent, DxoStateStoringModule, DxoStepareaComponent, DxoStepareaModule, DxoSteplineComponent, DxoSteplineModule, DxoStockComponent, DxoStockModule, DxoStoreComponent, DxoStoreModule, DxoStripStyleComponent, DxoStripStyleModule, DxoSubtitleComponent, DxoSubtitleModule, DxoSubvalueIndicatorComponent, DxoSubvalueIndicatorModule, DxoSummaryComponent, DxoSummaryModule, DxoTabPanelOptionsComponent, DxoTabPanelOptionsModule, DxoTasksComponent, DxoTasksModule, DxoTextComponent, DxoTextModule, DxoTextsComponent, DxoTextsModule, DxoTickComponent, DxoTickIntervalComponent, DxoTickIntervalModule, DxoTickModule, DxoTileComponent, DxoTileModule, DxoTitleComponent, DxoTitleModule, DxoToolbarComponent, DxoToolbarModule, DxoToolboxComponent, DxoToolboxModule, DxoTooltipComponent, DxoTooltipModule, DxoUploadComponent, DxoUploadModule, DxoUrlComponent, DxoUrlModule, DxoValidationComponent, DxoValidationModule, DxoValueAxisComponent, DxoValueAxisModule, DxoValueErrorBarComponent, DxoValueErrorBarModule, DxoValueFormatComponent, DxoValueFormatModule, DxoValueIndicatorComponent, DxoValueIndicatorModule, DxoVariablesComponent, DxoVariablesModule, DxoVerticalLineComponent, DxoVerticalLineModule, DxoViewToolbarComponent, DxoViewToolbarModule, DxoWidthComponent, DxoWidthModule, DxoZoomAndPanComponent, DxoZoomAndPanModule, DxoZoomLevelComponent, DxoZoomLevelModule, DxoAnimationConfig as ɵa, DxiChartAnnotationConfig as ɵb, DxiHtmlEditorMention as ɵba, DxoPositionConfig as ɵbb, DxoVectorMapProjectionConfig as ɵbc, DxoTextBoxOptions as ɵbd, DxiGanttStripLine as ɵbe, DxoGaugeIndicator as ɵbf, DxoTabPanelOptions as ɵbg, DxoFileManagerToolbar as ɵbh, DxoHtmlEditorVariables as ɵbi, DxoChartCommonSeriesSettings as ɵc, DxiVizScaleBreak as ɵd, DxoFormat as ɵe, DxoBoxOptions as ɵf, DxiButtonGroupItem as ɵg, DxiDiagramCustomCommand as ɵh, DxiTextEditorButton as ɵi, DxoButtonOptions as ɵj, DxoCalendarOptions as ɵk, DxiChartSeries as ɵl, DxiDataGridColumn as ɵm, DxoChartCommonAnnotationConfig as ɵn, DxoFileManagerContextMenu as ɵo, DxiFilterBuilderCustomOperation as ɵp, DxoPivotGridDataSource as ɵq, DxiFilterBuilderField as ɵr, DxoPopupOptions as ɵs, DxiFileManagerToolbarItem as ɵt, DxoFilterBuilderOptions as ɵu, DxoVizFont as ɵv, DxoFormSimpleItem as ɵw, DxoFormOptions as ɵx, DxoSortableOptions as ɵy, DxoHtmlEditorMediaResizing as ɵz };
//# sourceMappingURL=devextreme-angular-ui-nested.js.map
