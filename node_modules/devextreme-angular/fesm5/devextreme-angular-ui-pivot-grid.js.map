{"version":3,"file":"devextreme-angular-ui-pivot-grid.js","sources":["ng://devextreme-angular/ui/pivot-grid/index.ts","ng://devextreme-angular/ui/pivot-grid/devextreme-angular-ui-pivot-grid.ts"],"sourcesContent":["/*!\n * devextreme-angular\n * Version: 20.1.6\n * Build date: Fri Jul 17 2020\n *\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/* tslint:disable:max-line-length */\r\n\r\n\r\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\r\nimport { TransferState } from '@angular/platform-browser';\r\n\r\nimport {\r\n    Component,\r\n    NgModule,\r\n    ElementRef,\r\n    NgZone,\r\n    PLATFORM_ID,\r\n    Inject,\r\n\r\n    Input,\r\n    Output,\r\n    OnDestroy,\r\n    EventEmitter,\r\n    OnChanges,\r\n    DoCheck,\r\n    SimpleChanges\r\n} from '@angular/core';\r\n\r\n\r\nimport DevExpress from 'devextreme/bundles/dx.all';\r\n\r\nimport DxPivotGrid from 'devextreme/ui/pivot_grid';\r\n\r\n\r\nimport {\r\n    DxComponent,\r\n    DxTemplateHost,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    NestedOptionHost,\r\n    IterableDifferHelper,\r\n    WatcherHelper\r\n} from 'devextreme-angular/core';\r\n\r\nimport { DxoDataSourceModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiFieldModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoFormatModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoHeaderFilterModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoStoreModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoExportModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoFieldChooserModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoTextsModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoFieldPanelModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoLoadPanelModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoScrollingModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoStateStoringModule } from 'devextreme-angular/ui/nested';\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * The PivotGrid is a widget that allows you to display and analyze multi-dimensional data from a local storage or an OLAP cube.\r\n */\r\n@Component({\r\n    selector: 'dx-pivot-grid',\r\n    template: '',\r\n    providers: [\r\n        DxTemplateHost,\r\n        WatcherHelper,\r\n        NestedOptionHost,\r\n        IterableDifferHelper\r\n    ]\r\n})\r\nexport class DxPivotGridComponent extends DxComponent implements OnDestroy, OnChanges, DoCheck {\r\n    instance: DxPivotGrid;\r\n\r\n    /**\r\n     * Allows an end-user to expand/collapse all header items within a header level.\r\n     */\r\n    @Input()\r\n    get allowExpandAll(): boolean {\r\n        return this._getOption('allowExpandAll');\r\n    }\r\n    set allowExpandAll(value: boolean) {\r\n        this._setOption('allowExpandAll', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Allows a user to filter fields by selecting or deselecting values in the popup menu.\r\n     */\r\n    @Input()\r\n    get allowFiltering(): boolean {\r\n        return this._getOption('allowFiltering');\r\n    }\r\n    set allowFiltering(value: boolean) {\r\n        this._setOption('allowFiltering', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Allows an end-user to change sorting options.\r\n     */\r\n    @Input()\r\n    get allowSorting(): boolean {\r\n        return this._getOption('allowSorting');\r\n    }\r\n    set allowSorting(value: boolean) {\r\n        this._setOption('allowSorting', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Allows an end-user to sort columns by summary values.\r\n     */\r\n    @Input()\r\n    get allowSortingBySummary(): boolean {\r\n        return this._getOption('allowSortingBySummary');\r\n    }\r\n    set allowSortingBySummary(value: boolean) {\r\n        this._setOption('allowSortingBySummary', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the area to which data field headers must belong.\r\n     */\r\n    @Input()\r\n    get dataFieldArea(): string {\r\n        return this._getOption('dataFieldArea');\r\n    }\r\n    set dataFieldArea(value: string) {\r\n        this._setOption('dataFieldArea', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Binds the widget to data.\r\n     */\r\n    @Input()\r\n    get dataSource(): DevExpress.data.PivotGridDataSource | DevExpress.data.PivotGridDataSourceOptions | Array<any> {\r\n        return this._getOption('dataSource');\r\n    }\r\n    set dataSource(value: DevExpress.data.PivotGridDataSource | DevExpress.data.PivotGridDataSourceOptions | Array<any>) {\r\n        this._setOption('dataSource', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget responds to user interaction.\r\n     */\r\n    @Input()\r\n    get disabled(): boolean {\r\n        return this._getOption('disabled');\r\n    }\r\n    set disabled(value: boolean) {\r\n        this._setOption('disabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the attributes to be attached to the widget's root element.\r\n     */\r\n    @Input()\r\n    get elementAttr(): any {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value: any) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures client-side exporting.\r\n     */\r\n    @Input()\r\n    get export(): { enabled?: boolean, fileName?: string, ignoreExcelErrors?: boolean, proxyUrl?: string } {\r\n        return this._getOption('export');\r\n    }\r\n    set export(value: { enabled?: boolean, fileName?: string, ignoreExcelErrors?: boolean, proxyUrl?: string }) {\r\n        this._setOption('export', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * The Field Chooser configuration options.\r\n     */\r\n    @Input()\r\n    get fieldChooser(): { allowSearch?: boolean, applyChangesMode?: string, enabled?: boolean, height?: number, layout?: number | string, searchTimeout?: number, texts?: { allFields?: string, columnFields?: string, dataFields?: string, filterFields?: string, rowFields?: string }, title?: string, width?: number } {\r\n        return this._getOption('fieldChooser');\r\n    }\r\n    set fieldChooser(value: { allowSearch?: boolean, applyChangesMode?: string, enabled?: boolean, height?: number, layout?: number | string, searchTimeout?: number, texts?: { allFields?: string, columnFields?: string, dataFields?: string, filterFields?: string, rowFields?: string }, title?: string, width?: number }) {\r\n        this._setOption('fieldChooser', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the field panel.\r\n     */\r\n    @Input()\r\n    get fieldPanel(): { allowFieldDragging?: boolean, showColumnFields?: boolean, showDataFields?: boolean, showFilterFields?: boolean, showRowFields?: boolean, texts?: { columnFieldArea?: string, dataFieldArea?: string, filterFieldArea?: string, rowFieldArea?: string }, visible?: boolean } {\r\n        return this._getOption('fieldPanel');\r\n    }\r\n    set fieldPanel(value: { allowFieldDragging?: boolean, showColumnFields?: boolean, showDataFields?: boolean, showFilterFields?: boolean, showRowFields?: boolean, texts?: { columnFieldArea?: string, dataFieldArea?: string, filterFieldArea?: string, rowFieldArea?: string }, visible?: boolean }) {\r\n        this._setOption('fieldPanel', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the header filter feature.\r\n     */\r\n    @Input()\r\n    get headerFilter(): { allowSearch?: boolean, height?: number, searchTimeout?: number, showRelevantValues?: boolean, texts?: { cancel?: string, emptyValue?: string, ok?: string }, width?: number } {\r\n        return this._getOption('headerFilter');\r\n    }\r\n    set headerFilter(value: { allowSearch?: boolean, height?: number, searchTimeout?: number, showRelevantValues?: boolean, texts?: { cancel?: string, emptyValue?: string, ok?: string }, width?: number }) {\r\n        this._setOption('headerFilter', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's height.\r\n     */\r\n    @Input()\r\n    get height(): number | Function | string {\r\n        return this._getOption('height');\r\n    }\r\n    set height(value: number | Function | string) {\r\n        this._setOption('height', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether or not to hide rows and columns with no data.\r\n     */\r\n    @Input()\r\n    get hideEmptySummaryCells(): boolean {\r\n        return this._getOption('hideEmptySummaryCells');\r\n    }\r\n    set hideEmptySummaryCells(value: boolean) {\r\n        this._setOption('hideEmptySummaryCells', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies text for a hint that appears when a user pauses on the widget.\r\n     */\r\n    @Input()\r\n    get hint(): string {\r\n        return this._getOption('hint');\r\n    }\r\n    set hint(value: string) {\r\n        this._setOption('hint', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies options configuring the load panel.\r\n     */\r\n    @Input()\r\n    get loadPanel(): { enabled?: boolean, height?: number, indicatorSrc?: string, showIndicator?: boolean, showPane?: boolean, text?: string, width?: number } {\r\n        return this._getOption('loadPanel');\r\n    }\r\n    set loadPanel(value: { enabled?: boolean, height?: number, indicatorSrc?: string, showIndicator?: boolean, showPane?: boolean, text?: string, width?: number }) {\r\n        this._setOption('loadPanel', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the layout of items in the row header.\r\n     */\r\n    @Input()\r\n    get rowHeaderLayout(): string {\r\n        return this._getOption('rowHeaderLayout');\r\n    }\r\n    set rowHeaderLayout(value: string) {\r\n        this._setOption('rowHeaderLayout', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Switches the widget to a right-to-left representation.\r\n     */\r\n    @Input()\r\n    get rtlEnabled(): boolean {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value: boolean) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * A configuration object specifying scrolling options.\r\n     */\r\n    @Input()\r\n    get scrolling(): { mode?: string, useNative?: boolean | string } {\r\n        return this._getOption('scrolling');\r\n    }\r\n    set scrolling(value: { mode?: string, useNative?: boolean | string }) {\r\n        this._setOption('scrolling', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the outer borders of the grid are visible or not.\r\n     */\r\n    @Input()\r\n    get showBorders(): boolean {\r\n        return this._getOption('showBorders');\r\n    }\r\n    set showBorders(value: boolean) {\r\n        this._setOption('showBorders', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether to display the Grand Total column.\r\n     */\r\n    @Input()\r\n    get showColumnGrandTotals(): boolean {\r\n        return this._getOption('showColumnGrandTotals');\r\n    }\r\n    set showColumnGrandTotals(value: boolean) {\r\n        this._setOption('showColumnGrandTotals', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether to display the Total columns.\r\n     */\r\n    @Input()\r\n    get showColumnTotals(): boolean {\r\n        return this._getOption('showColumnTotals');\r\n    }\r\n    set showColumnTotals(value: boolean) {\r\n        this._setOption('showColumnTotals', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether to display the Grand Total row.\r\n     */\r\n    @Input()\r\n    get showRowGrandTotals(): boolean {\r\n        return this._getOption('showRowGrandTotals');\r\n    }\r\n    set showRowGrandTotals(value: boolean) {\r\n        this._setOption('showRowGrandTotals', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether to display the Total rows. Applies only if rowHeaderLayout is \"standard\".\r\n     */\r\n    @Input()\r\n    get showRowTotals(): boolean {\r\n        return this._getOption('showRowTotals');\r\n    }\r\n    set showRowTotals(value: boolean) {\r\n        this._setOption('showRowTotals', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies where to show the total rows or columns. Applies only if rowHeaderLayout is \"standard\".\r\n     */\r\n    @Input()\r\n    get showTotalsPrior(): string {\r\n        return this._getOption('showTotalsPrior');\r\n    }\r\n    set showTotalsPrior(value: string) {\r\n        this._setOption('showTotalsPrior', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * A configuration object specifying options related to state storing.\r\n     */\r\n    @Input()\r\n    get stateStoring(): { customLoad?: Function, customSave?: Function, enabled?: boolean, savingTimeout?: number, storageKey?: string, type?: string } {\r\n        return this._getOption('stateStoring');\r\n    }\r\n    set stateStoring(value: { customLoad?: Function, customSave?: Function, enabled?: boolean, savingTimeout?: number, storageKey?: string, type?: string }) {\r\n        this._setOption('stateStoring', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the number of the element when the Tab key is used for navigating.\r\n     */\r\n    @Input()\r\n    get tabIndex(): number {\r\n        return this._getOption('tabIndex');\r\n    }\r\n    set tabIndex(value: number) {\r\n        this._setOption('tabIndex', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Strings that can be changed or localized in the PivotGrid widget.\r\n     */\r\n    @Input()\r\n    get texts(): { collapseAll?: string, dataNotAvailable?: string, expandAll?: string, exportToExcel?: string, grandTotal?: string, noData?: string, removeAllSorting?: string, showFieldChooser?: string, sortColumnBySummary?: string, sortRowBySummary?: string, total?: string } {\r\n        return this._getOption('texts');\r\n    }\r\n    set texts(value: { collapseAll?: string, dataNotAvailable?: string, expandAll?: string, exportToExcel?: string, grandTotal?: string, noData?: string, removeAllSorting?: string, showFieldChooser?: string, sortColumnBySummary?: string, sortRowBySummary?: string, total?: string }) {\r\n        this._setOption('texts', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget is visible.\r\n     */\r\n    @Input()\r\n    get visible(): boolean {\r\n        return this._getOption('visible');\r\n    }\r\n    set visible(value: boolean) {\r\n        this._setOption('visible', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's width.\r\n     */\r\n    @Input()\r\n    get width(): number | Function | string {\r\n        return this._getOption('width');\r\n    }\r\n    set width(value: number | Function | string) {\r\n        this._setOption('width', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether long text in header items should be wrapped.\r\n     */\r\n    @Input()\r\n    get wordWrapEnabled(): boolean {\r\n        return this._getOption('wordWrapEnabled');\r\n    }\r\n    set wordWrapEnabled(value: boolean) {\r\n        this._setOption('wordWrapEnabled', value);\r\n    }\r\n\r\n    /**\r\n     * A function that is executed when a pivot grid cell is clicked or tapped.\r\n     */\r\n    @Output() onCellClick: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after a pivot grid cell is created.\r\n     */\r\n    @Output() onCellPrepared: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when the widget's content is ready and each time the content is changed.\r\n     */\r\n    @Output() onContentReady: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before the context menu is rendered.\r\n     */\r\n    @Output() onContextMenuPreparing: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before the widget is disposed of.\r\n     */\r\n    @Output() onDisposing: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after data is exported.\r\n     */\r\n    @Output() onExported: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before data is exported.\r\n     */\r\n    @Output() onExporting: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before a file with exported data is saved to the user's local storage.\r\n     */\r\n    @Output() onFileSaving: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function used in JavaScript frameworks to save the widget instance.\r\n     */\r\n    @Output() onInitialized: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after a widget option is changed.\r\n     */\r\n    @Output() onOptionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() allowExpandAllChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() allowFilteringChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() allowSortingChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() allowSortingBySummaryChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() dataFieldAreaChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() dataSourceChange: EventEmitter<DevExpress.data.PivotGridDataSource | DevExpress.data.PivotGridDataSourceOptions | Array<any>>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() disabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() elementAttrChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() exportChange: EventEmitter<{ enabled?: boolean, fileName?: string, ignoreExcelErrors?: boolean, proxyUrl?: string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() fieldChooserChange: EventEmitter<{ allowSearch?: boolean, applyChangesMode?: string, enabled?: boolean, height?: number, layout?: number | string, searchTimeout?: number, texts?: { allFields?: string, columnFields?: string, dataFields?: string, filterFields?: string, rowFields?: string }, title?: string, width?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() fieldPanelChange: EventEmitter<{ allowFieldDragging?: boolean, showColumnFields?: boolean, showDataFields?: boolean, showFilterFields?: boolean, showRowFields?: boolean, texts?: { columnFieldArea?: string, dataFieldArea?: string, filterFieldArea?: string, rowFieldArea?: string }, visible?: boolean }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() headerFilterChange: EventEmitter<{ allowSearch?: boolean, height?: number, searchTimeout?: number, showRelevantValues?: boolean, texts?: { cancel?: string, emptyValue?: string, ok?: string }, width?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() heightChange: EventEmitter<number | Function | string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() hideEmptySummaryCellsChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() hintChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() loadPanelChange: EventEmitter<{ enabled?: boolean, height?: number, indicatorSrc?: string, showIndicator?: boolean, showPane?: boolean, text?: string, width?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() rowHeaderLayoutChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() rtlEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() scrollingChange: EventEmitter<{ mode?: string, useNative?: boolean | string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() showBordersChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() showColumnGrandTotalsChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() showColumnTotalsChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() showRowGrandTotalsChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() showRowTotalsChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() showTotalsPriorChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() stateStoringChange: EventEmitter<{ customLoad?: Function, customSave?: Function, enabled?: boolean, savingTimeout?: number, storageKey?: string, type?: string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() tabIndexChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() textsChange: EventEmitter<{ collapseAll?: string, dataNotAvailable?: string, expandAll?: string, exportToExcel?: string, grandTotal?: string, noData?: string, removeAllSorting?: string, showFieldChooser?: string, sortColumnBySummary?: string, sortRowBySummary?: string, total?: string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() visibleChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() widthChange: EventEmitter<number | Function | string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() wordWrapEnabledChange: EventEmitter<boolean>;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost,\r\n            private _watcherHelper: WatcherHelper,\r\n            private _idh: IterableDifferHelper,\r\n            optionHost: NestedOptionHost,\r\n            transferState: TransferState,\r\n            @Inject(PLATFORM_ID) platformId: any) {\r\n\r\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\r\n\r\n        this._createEventEmitters([\r\n            { subscribe: 'cellClick', emit: 'onCellClick' },\r\n            { subscribe: 'cellPrepared', emit: 'onCellPrepared' },\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'contextMenuPreparing', emit: 'onContextMenuPreparing' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'exported', emit: 'onExported' },\r\n            { subscribe: 'exporting', emit: 'onExporting' },\r\n            { subscribe: 'fileSaving', emit: 'onFileSaving' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { emit: 'allowExpandAllChange' },\r\n            { emit: 'allowFilteringChange' },\r\n            { emit: 'allowSortingChange' },\r\n            { emit: 'allowSortingBySummaryChange' },\r\n            { emit: 'dataFieldAreaChange' },\r\n            { emit: 'dataSourceChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'exportChange' },\r\n            { emit: 'fieldChooserChange' },\r\n            { emit: 'fieldPanelChange' },\r\n            { emit: 'headerFilterChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'hideEmptySummaryCellsChange' },\r\n            { emit: 'hintChange' },\r\n            { emit: 'loadPanelChange' },\r\n            { emit: 'rowHeaderLayoutChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'scrollingChange' },\r\n            { emit: 'showBordersChange' },\r\n            { emit: 'showColumnGrandTotalsChange' },\r\n            { emit: 'showColumnTotalsChange' },\r\n            { emit: 'showRowGrandTotalsChange' },\r\n            { emit: 'showRowTotalsChange' },\r\n            { emit: 'showTotalsPriorChange' },\r\n            { emit: 'stateStoringChange' },\r\n            { emit: 'tabIndexChange' },\r\n            { emit: 'textsChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' },\r\n            { emit: 'wordWrapEnabledChange' }\r\n        ]);\r\n\r\n        this._idh.setHost(this);\r\n        optionHost.setHost(this);\r\n    }\r\n\r\n    protected _createInstance(element, options) {\r\n\r\n        return new DxPivotGrid(element, options);\r\n    }\r\n\r\n\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        super.ngOnChanges(changes);\r\n        this.setupChanges('dataSource', changes);\r\n    }\r\n\r\n    setupChanges(prop: string, changes: SimpleChanges) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    }\r\n\r\n    ngDoCheck() {\r\n        this._idh.doCheck('dataSource');\r\n        this._watcherHelper.checkWatchers();\r\n        super.ngDoCheck();\r\n        super.clearChangedOptions();\r\n    }\r\n\r\n    _setOption(name: string, value: any) {\r\n        let isSetup = this._idh.setupSingle(name, value);\r\n        let isChanged = this._idh.getChanges(name, value) !== null;\r\n\r\n        if (isSetup || isChanged) {\r\n            super._setOption(name, value);\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    DxoDataSourceModule,\r\n    DxiFieldModule,\r\n    DxoFormatModule,\r\n    DxoHeaderFilterModule,\r\n    DxoStoreModule,\r\n    DxoExportModule,\r\n    DxoFieldChooserModule,\r\n    DxoTextsModule,\r\n    DxoFieldPanelModule,\r\n    DxoLoadPanelModule,\r\n    DxoScrollingModule,\r\n    DxoStateStoringModule,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    BrowserTransferStateModule\r\n  ],\r\n  declarations: [\r\n    DxPivotGridComponent\r\n  ],\r\n  exports: [\r\n    DxPivotGridComponent,\r\n    DxoDataSourceModule,\r\n    DxiFieldModule,\r\n    DxoFormatModule,\r\n    DxoHeaderFilterModule,\r\n    DxoStoreModule,\r\n    DxoExportModule,\r\n    DxoFieldChooserModule,\r\n    DxoTextsModule,\r\n    DxoFieldPanelModule,\r\n    DxoLoadPanelModule,\r\n    DxoScrollingModule,\r\n    DxoStateStoringModule,\r\n    DxTemplateModule\r\n  ]\r\n})\r\nexport class DxPivotGridModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["tslib_1.__extends","tslib_1.__decorate","tslib_1.__param"],"mappings":"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"}