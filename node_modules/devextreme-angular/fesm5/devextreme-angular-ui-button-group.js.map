{"version":3,"file":"devextreme-angular-ui-button-group.js","sources":["ng://devextreme-angular/ui/button-group/index.ts","ng://devextreme-angular/ui/button-group/devextreme-angular-ui-button-group.ts"],"sourcesContent":["/*!\n * devextreme-angular\n * Version: 20.1.6\n * Build date: Fri Jul 17 2020\n *\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/* tslint:disable:max-line-length */\r\n\r\n\r\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\r\nimport { TransferState } from '@angular/platform-browser';\r\n\r\nimport {\r\n    Component,\r\n    NgModule,\r\n    ElementRef,\r\n    NgZone,\r\n    PLATFORM_ID,\r\n    Inject,\r\n\r\n    Input,\r\n    Output,\r\n    OnDestroy,\r\n    EventEmitter,\r\n    OnChanges,\r\n    DoCheck,\r\n    SimpleChanges,\r\n    ContentChildren,\r\n    QueryList\r\n} from '@angular/core';\r\n\r\n\r\nimport DevExpress from 'devextreme/bundles/dx.all';\r\n\r\nimport DxButtonGroup from 'devextreme/ui/button_group';\r\n\r\n\r\nimport {\r\n    DxComponent,\r\n    DxTemplateHost,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    NestedOptionHost,\r\n    IterableDifferHelper,\r\n    WatcherHelper\r\n} from 'devextreme-angular/core';\r\n\r\nimport { DxiItemModule } from 'devextreme-angular/ui/nested';\r\n\r\nimport { DxiItemComponent } from 'devextreme-angular/ui/nested';\r\n\r\n\r\n\r\n\r\n/**\r\n * The ButtonGroup is a widget that contains a set of toggle buttons and can be used as a mode switcher.\r\n */\r\n@Component({\r\n    selector: 'dx-button-group',\r\n    template: '',\r\n    providers: [\r\n        DxTemplateHost,\r\n        WatcherHelper,\r\n        NestedOptionHost,\r\n        IterableDifferHelper\r\n    ]\r\n})\r\nexport class DxButtonGroupComponent extends DxComponent implements OnDestroy, OnChanges, DoCheck {\r\n    instance: DxButtonGroup;\r\n\r\n    /**\r\n     * Specifies the shortcut key that sets focus on the widget.\r\n     */\r\n    @Input()\r\n    get accessKey(): string {\r\n        return this._getOption('accessKey');\r\n    }\r\n    set accessKey(value: string) {\r\n        this._setOption('accessKey', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether or not the widget changes its state when interacting with a user.\r\n     */\r\n    @Input()\r\n    get activeStateEnabled(): boolean {\r\n        return this._getOption('activeStateEnabled');\r\n    }\r\n    set activeStateEnabled(value: boolean) {\r\n        this._setOption('activeStateEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies a template for all the buttons in the group.\r\n     */\r\n    @Input()\r\n    get buttonTemplate(): any {\r\n        return this._getOption('buttonTemplate');\r\n    }\r\n    set buttonTemplate(value: any) {\r\n        this._setOption('buttonTemplate', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget responds to user interaction.\r\n     */\r\n    @Input()\r\n    get disabled(): boolean {\r\n        return this._getOption('disabled');\r\n    }\r\n    set disabled(value: boolean) {\r\n        this._setOption('disabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the attributes to be attached to the widget's root element.\r\n     */\r\n    @Input()\r\n    get elementAttr(): any {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value: any) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget can be focused using keyboard navigation.\r\n     */\r\n    @Input()\r\n    get focusStateEnabled(): boolean {\r\n        return this._getOption('focusStateEnabled');\r\n    }\r\n    set focusStateEnabled(value: boolean) {\r\n        this._setOption('focusStateEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's height.\r\n     */\r\n    @Input()\r\n    get height(): number | Function | string {\r\n        return this._getOption('height');\r\n    }\r\n    set height(value: number | Function | string) {\r\n        this._setOption('height', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies text for a hint that appears when a user pauses on the widget.\r\n     */\r\n    @Input()\r\n    get hint(): string {\r\n        return this._getOption('hint');\r\n    }\r\n    set hint(value: string) {\r\n        this._setOption('hint', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget changes its state when a user pauses on it.\r\n     */\r\n    @Input()\r\n    get hoverStateEnabled(): boolean {\r\n        return this._getOption('hoverStateEnabled');\r\n    }\r\n    set hoverStateEnabled(value: boolean) {\r\n        this._setOption('hoverStateEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures buttons in the group.\r\n     */\r\n    @Input()\r\n    get items(): Array<DevExpress.ui.dxButtonGroupItem> {\r\n        return this._getOption('items');\r\n    }\r\n    set items(value: Array<DevExpress.ui.dxButtonGroupItem>) {\r\n        this._setOption('items', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Use the buttonTemplate option instead.\r\n     */\r\n    @Input()\r\n    get itemTemplate(): any {\r\n        return this._getOption('itemTemplate');\r\n    }\r\n    set itemTemplate(value: any) {\r\n        this._setOption('itemTemplate', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies which data field provides keys used to distinguish between the selected buttons.\r\n     */\r\n    @Input()\r\n    get keyExpr(): Function | string {\r\n        return this._getOption('keyExpr');\r\n    }\r\n    set keyExpr(value: Function | string) {\r\n        this._setOption('keyExpr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Switches the widget to a right-to-left representation.\r\n     */\r\n    @Input()\r\n    get rtlEnabled(): boolean {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value: boolean) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Contains the keys of the selected buttons and allows selecting buttons initially.\r\n     */\r\n    @Input()\r\n    get selectedItemKeys(): Array<any> {\r\n        return this._getOption('selectedItemKeys');\r\n    }\r\n    set selectedItemKeys(value: Array<any>) {\r\n        this._setOption('selectedItemKeys', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Contains the data objects that correspond to the selected buttons. The data objects are taken from the items array.\r\n     */\r\n    @Input()\r\n    get selectedItems(): Array<any> {\r\n        return this._getOption('selectedItems');\r\n    }\r\n    set selectedItems(value: Array<any>) {\r\n        this._setOption('selectedItems', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether a single or multiple buttons can be in the selected state simultaneously.\r\n     */\r\n    @Input()\r\n    get selectionMode(): string {\r\n        return this._getOption('selectionMode');\r\n    }\r\n    set selectionMode(value: string) {\r\n        this._setOption('selectionMode', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies how buttons in the group are styled.\r\n     */\r\n    @Input()\r\n    get stylingMode(): string {\r\n        return this._getOption('stylingMode');\r\n    }\r\n    set stylingMode(value: string) {\r\n        this._setOption('stylingMode', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the number of the element when the Tab key is used for navigating.\r\n     */\r\n    @Input()\r\n    get tabIndex(): number {\r\n        return this._getOption('tabIndex');\r\n    }\r\n    set tabIndex(value: number) {\r\n        this._setOption('tabIndex', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget is visible.\r\n     */\r\n    @Input()\r\n    get visible(): boolean {\r\n        return this._getOption('visible');\r\n    }\r\n    set visible(value: boolean) {\r\n        this._setOption('visible', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's width.\r\n     */\r\n    @Input()\r\n    get width(): number | Function | string {\r\n        return this._getOption('width');\r\n    }\r\n    set width(value: number | Function | string) {\r\n        this._setOption('width', value);\r\n    }\r\n\r\n    /**\r\n     * A function that is executed when the widget's content is ready and each time the content is changed.\r\n     */\r\n    @Output() onContentReady: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before the widget is disposed of.\r\n     */\r\n    @Output() onDisposing: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function used in JavaScript frameworks to save the widget instance.\r\n     */\r\n    @Output() onInitialized: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when a button is clicked or tapped.\r\n     */\r\n    @Output() onItemClick: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after a widget option is changed.\r\n     */\r\n    @Output() onOptionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when a button is selected or selection is canceled.\r\n     */\r\n    @Output() onSelectionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() accessKeyChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() activeStateEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() buttonTemplateChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() disabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() elementAttrChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() focusStateEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() heightChange: EventEmitter<number | Function | string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() hintChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() hoverStateEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() itemsChange: EventEmitter<Array<DevExpress.ui.dxButtonGroupItem>>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() itemTemplateChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() keyExprChange: EventEmitter<Function | string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() rtlEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() selectedItemKeysChange: EventEmitter<Array<any>>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() selectedItemsChange: EventEmitter<Array<any>>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() selectionModeChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() stylingModeChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() tabIndexChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() visibleChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() widthChange: EventEmitter<number | Function | string>;\r\n\r\n\r\n\r\n\r\n    @ContentChildren(DxiItemComponent)\r\n    get itemsChildren(): QueryList<DxiItemComponent> {\r\n        return this._getOption('items');\r\n    }\r\n    set itemsChildren(value) {\r\n        this.setChildren('items', value);\r\n    }\r\n\r\n\r\n\r\n\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost,\r\n            private _watcherHelper: WatcherHelper,\r\n            private _idh: IterableDifferHelper,\r\n            optionHost: NestedOptionHost,\r\n            transferState: TransferState,\r\n            @Inject(PLATFORM_ID) platformId: any) {\r\n\r\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\r\n\r\n        this._createEventEmitters([\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'itemClick', emit: 'onItemClick' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'selectionChanged', emit: 'onSelectionChanged' },\r\n            { emit: 'accessKeyChange' },\r\n            { emit: 'activeStateEnabledChange' },\r\n            { emit: 'buttonTemplateChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'focusStateEnabledChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'hintChange' },\r\n            { emit: 'hoverStateEnabledChange' },\r\n            { emit: 'itemsChange' },\r\n            { emit: 'itemTemplateChange' },\r\n            { emit: 'keyExprChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'selectedItemKeysChange' },\r\n            { emit: 'selectedItemsChange' },\r\n            { emit: 'selectionModeChange' },\r\n            { emit: 'stylingModeChange' },\r\n            { emit: 'tabIndexChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' }\r\n        ]);\r\n\r\n        this._idh.setHost(this);\r\n        optionHost.setHost(this);\r\n    }\r\n\r\n    protected _createInstance(element, options) {\r\n\r\n        return new DxButtonGroup(element, options);\r\n    }\r\n\r\n\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        super.ngOnChanges(changes);\r\n        this.setupChanges('items', changes);\r\n        this.setupChanges('selectedItemKeys', changes);\r\n        this.setupChanges('selectedItems', changes);\r\n    }\r\n\r\n    setupChanges(prop: string, changes: SimpleChanges) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    }\r\n\r\n    ngDoCheck() {\r\n        this._idh.doCheck('items');\r\n        this._idh.doCheck('selectedItemKeys');\r\n        this._idh.doCheck('selectedItems');\r\n        this._watcherHelper.checkWatchers();\r\n        super.ngDoCheck();\r\n        super.clearChangedOptions();\r\n    }\r\n\r\n    _setOption(name: string, value: any) {\r\n        let isSetup = this._idh.setupSingle(name, value);\r\n        let isChanged = this._idh.getChanges(name, value) !== null;\r\n\r\n        if (isSetup || isChanged) {\r\n            super._setOption(name, value);\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    DxiItemModule,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    BrowserTransferStateModule\r\n  ],\r\n  declarations: [\r\n    DxButtonGroupComponent\r\n  ],\r\n  exports: [\r\n    DxButtonGroupComponent,\r\n    DxiItemModule,\r\n    DxTemplateModule\r\n  ]\r\n})\r\nexport class DxButtonGroupModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["tslib_1.__extends","tslib_1.__decorate","tslib_1.__param"],"mappings":"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"}