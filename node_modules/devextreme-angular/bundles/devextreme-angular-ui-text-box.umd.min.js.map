{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://devextreme-angular/ui/text-box/index.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","CUSTOM_VALUE_ACCESSOR_PROVIDER","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","DxTextBoxComponent","multi","elementRef","ngZone","templateHost","_watcherHelper","_idh","optionHost","transferState","platformId","_this","_super","call","this","touched","_","_createEventEmitters","subscribe","emit","setHost","paramIndex","decorator","__","constructor","prototype","create","tslib_1.__extends","_getOption","value","_setOption","change","setChildren","_createInstance","element","options","DxTextBox","writeValue","eventHelper","lockedValueChangeEvent","setDisabledState","isDisabled","disabled","registerOnChange","fn","registerOnTouched","_createWidget","instance","on","e","fireNgEvent","ngOnDestroy","_destroyWidget","ngOnChanges","changes","setupChanges","prop","_optionsToUpdate","setup","ngDoCheck","doCheck","checkWatchers","clearChangedOptions","name","isSetup","setupSingle","isChanged","getChanges","ElementRef","NgZone","DxTemplateHost","WatcherHelper","IterableDifferHelper","NestedOptionHost","TransferState","Inject","args","PLATFORM_ID","tslib_1.__decorate","Input","Output","EventEmitter","HostListener","ContentChildren","DxiButtonComponent","QueryList","Component","selector","template","providers","tslib_1.__param","DxComponent","DxTextBoxModule","NgModule","imports","DxiButtonModule","DxoOptionsModule","DxIntegrationModule","DxTemplateModule","BrowserTransferStateModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*!\n * devextreme-angular\n * Version: 20.1.6\n * Build date: Fri Jul 17 2020\n *\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/* tslint:disable:max-line-length */\r\n\r\n\r\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\r\nimport { TransferState } from '@angular/platform-browser';\r\n\r\nimport {\r\n    Component,\r\n    NgModule,\r\n    ElementRef,\r\n    NgZone,\r\n    PLATFORM_ID,\r\n    Inject,\r\n\r\n    Input,\r\n    Output,\r\n    OnDestroy,\r\n    EventEmitter,\r\n    forwardRef,\r\n    HostListener,\r\n    OnChanges,\r\n    DoCheck,\r\n    SimpleChanges,\r\n    ContentChildren,\r\n    QueryList\r\n} from '@angular/core';\r\n\r\n\r\nimport DevExpress from 'devextreme/bundles/dx.all';\r\n\r\nimport DxTextBox from 'devextreme/ui/text_box';\r\n\r\nimport {\r\n    ControlValueAccessor,\r\n    NG_VALUE_ACCESSOR\r\n} from '@angular/forms';\r\n\r\nimport {\r\n    DxComponent,\r\n    DxTemplateHost,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    NestedOptionHost,\r\n    IterableDifferHelper,\r\n    WatcherHelper\r\n} from 'devextreme-angular/core';\r\n\r\nimport { DxiButtonModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoOptionsModule } from 'devextreme-angular/ui/nested';\r\n\r\nimport { DxiButtonComponent } from 'devextreme-angular/ui/nested';\r\n\r\n\r\n\r\n\r\nconst CUSTOM_VALUE_ACCESSOR_PROVIDER = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => DxTextBoxComponent),\r\n    multi: true\r\n};\r\n\r\n/**\r\n * The TextBox is a widget that enables a user to enter and edit a single line of text.\r\n */\r\n@Component({\r\n    selector: 'dx-text-box',\r\n    template: '',\r\n    providers: [\r\n        DxTemplateHost,\r\n        WatcherHelper,\r\n        CUSTOM_VALUE_ACCESSOR_PROVIDER,\r\n        NestedOptionHost,\r\n        IterableDifferHelper\r\n    ]\r\n})\r\nexport class DxTextBoxComponent extends DxComponent implements OnDestroy, ControlValueAccessor, OnChanges, DoCheck {\r\n    instance: DxTextBox;\r\n\r\n    /**\r\n     * Specifies the shortcut key that sets focus on the widget.\r\n     */\r\n    @Input()\r\n    get accessKey(): string {\r\n        return this._getOption('accessKey');\r\n    }\r\n    set accessKey(value: string) {\r\n        this._setOption('accessKey', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether or not the widget changes its state when interacting with a user.\r\n     */\r\n    @Input()\r\n    get activeStateEnabled(): boolean {\r\n        return this._getOption('activeStateEnabled');\r\n    }\r\n    set activeStateEnabled(value: boolean) {\r\n        this._setOption('activeStateEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Allows you to add custom buttons to the input text field.\r\n     */\r\n    @Input()\r\n    get buttons(): Array<string | DevExpress.ui.dxTextEditorButton> {\r\n        return this._getOption('buttons');\r\n    }\r\n    set buttons(value: Array<string | DevExpress.ui.dxTextEditorButton>) {\r\n        this._setOption('buttons', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget responds to user interaction.\r\n     */\r\n    @Input()\r\n    get disabled(): boolean {\r\n        return this._getOption('disabled');\r\n    }\r\n    set disabled(value: boolean) {\r\n        this._setOption('disabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the attributes to be attached to the widget's root element.\r\n     */\r\n    @Input()\r\n    get elementAttr(): any {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value: any) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget can be focused using keyboard navigation.\r\n     */\r\n    @Input()\r\n    get focusStateEnabled(): boolean {\r\n        return this._getOption('focusStateEnabled');\r\n    }\r\n    set focusStateEnabled(value: boolean) {\r\n        this._setOption('focusStateEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's height.\r\n     */\r\n    @Input()\r\n    get height(): number | Function | string {\r\n        return this._getOption('height');\r\n    }\r\n    set height(value: number | Function | string) {\r\n        this._setOption('height', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies text for a hint that appears when a user pauses on the widget.\r\n     */\r\n    @Input()\r\n    get hint(): string {\r\n        return this._getOption('hint');\r\n    }\r\n    set hint(value: string) {\r\n        this._setOption('hint', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget changes its state when a user pauses on it.\r\n     */\r\n    @Input()\r\n    get hoverStateEnabled(): boolean {\r\n        return this._getOption('hoverStateEnabled');\r\n    }\r\n    set hoverStateEnabled(value: boolean) {\r\n        this._setOption('hoverStateEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the attributes to be passed on to the underlying HTML element.\r\n     */\r\n    @Input()\r\n    get inputAttr(): any {\r\n        return this._getOption('inputAttr');\r\n    }\r\n    set inputAttr(value: any) {\r\n        this._setOption('inputAttr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies or indicates whether the editor's value is valid.\r\n     */\r\n    @Input()\r\n    get isValid(): boolean {\r\n        return this._getOption('isValid');\r\n    }\r\n    set isValid(value: boolean) {\r\n        this._setOption('isValid', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * The editor mask that specifies the custom format of the entered string.\r\n     */\r\n    @Input()\r\n    get mask(): string {\r\n        return this._getOption('mask');\r\n    }\r\n    set mask(value: string) {\r\n        this._setOption('mask', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies a mask placeholder. A single character is recommended.\r\n     */\r\n    @Input()\r\n    get maskChar(): string {\r\n        return this._getOption('maskChar');\r\n    }\r\n    set maskChar(value: string) {\r\n        this._setOption('maskChar', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * A message displayed when the entered text does not match the specified pattern.\r\n     */\r\n    @Input()\r\n    get maskInvalidMessage(): string {\r\n        return this._getOption('maskInvalidMessage');\r\n    }\r\n    set maskInvalidMessage(value: string) {\r\n        this._setOption('maskInvalidMessage', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies custom mask rules.\r\n     */\r\n    @Input()\r\n    get maskRules(): any {\r\n        return this._getOption('maskRules');\r\n    }\r\n    set maskRules(value: any) {\r\n        this._setOption('maskRules', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the maximum number of characters you can enter into the textbox.\r\n     */\r\n    @Input()\r\n    get maxLength(): number | string {\r\n        return this._getOption('maxLength');\r\n    }\r\n    set maxLength(value: number | string) {\r\n        this._setOption('maxLength', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * The \"mode\" attribute value of the actual HTML input element representing the text box.\r\n     */\r\n    @Input()\r\n    get mode(): string {\r\n        return this._getOption('mode');\r\n    }\r\n    set mode(value: string) {\r\n        this._setOption('mode', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * The value to be assigned to the `name` attribute of the underlying HTML element.\r\n     */\r\n    @Input()\r\n    get name(): string {\r\n        return this._getOption('name');\r\n    }\r\n    set name(value: string) {\r\n        this._setOption('name', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * The text displayed by the widget when the widget value is empty.\r\n     */\r\n    @Input()\r\n    get placeholder(): string {\r\n        return this._getOption('placeholder');\r\n    }\r\n    set placeholder(value: string) {\r\n        this._setOption('placeholder', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the editor is read-only.\r\n     */\r\n    @Input()\r\n    get readOnly(): boolean {\r\n        return this._getOption('readOnly');\r\n    }\r\n    set readOnly(value: boolean) {\r\n        this._setOption('readOnly', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Switches the widget to a right-to-left representation.\r\n     */\r\n    @Input()\r\n    get rtlEnabled(): boolean {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value: boolean) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether to display the Clear button in the widget.\r\n     */\r\n    @Input()\r\n    get showClearButton(): boolean {\r\n        return this._getOption('showClearButton');\r\n    }\r\n    set showClearButton(value: boolean) {\r\n        this._setOption('showClearButton', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies when the widget shows the mask. Applies only if useMaskedValue is true.\r\n     */\r\n    @Input()\r\n    get showMaskMode(): string {\r\n        return this._getOption('showMaskMode');\r\n    }\r\n    set showMaskMode(value: string) {\r\n        this._setOption('showMaskMode', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether or not the widget checks the inner text for spelling mistakes.\r\n     */\r\n    @Input()\r\n    get spellcheck(): boolean {\r\n        return this._getOption('spellcheck');\r\n    }\r\n    set spellcheck(value: boolean) {\r\n        this._setOption('spellcheck', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies how the widget's text field is styled.\r\n     */\r\n    @Input()\r\n    get stylingMode(): string {\r\n        return this._getOption('stylingMode');\r\n    }\r\n    set stylingMode(value: string) {\r\n        this._setOption('stylingMode', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the number of the element when the Tab key is used for navigating.\r\n     */\r\n    @Input()\r\n    get tabIndex(): number {\r\n        return this._getOption('tabIndex');\r\n    }\r\n    set tabIndex(value: number) {\r\n        this._setOption('tabIndex', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * The read-only option that holds the text displayed by the widget input element.\r\n     */\r\n    @Input()\r\n    get text(): string {\r\n        return this._getOption('text');\r\n    }\r\n    set text(value: string) {\r\n        this._setOption('text', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the value should contain mask characters or not.\r\n     */\r\n    @Input()\r\n    get useMaskedValue(): boolean {\r\n        return this._getOption('useMaskedValue');\r\n    }\r\n    set useMaskedValue(value: boolean) {\r\n        this._setOption('useMaskedValue', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Information on the broken validation rule. Contains the first item from the validationErrors array.\r\n     */\r\n    @Input()\r\n    get validationError(): any {\r\n        return this._getOption('validationError');\r\n    }\r\n    set validationError(value: any) {\r\n        this._setOption('validationError', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * An array of the validation rules that failed.\r\n     */\r\n    @Input()\r\n    get validationErrors(): Array<any> {\r\n        return this._getOption('validationErrors');\r\n    }\r\n    set validationErrors(value: Array<any>) {\r\n        this._setOption('validationErrors', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies how the message about the validation rules that are not satisfied by this editor's value is displayed.\r\n     */\r\n    @Input()\r\n    get validationMessageMode(): string {\r\n        return this._getOption('validationMessageMode');\r\n    }\r\n    set validationMessageMode(value: string) {\r\n        this._setOption('validationMessageMode', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Indicates or specifies the current validation status.\r\n     */\r\n    @Input()\r\n    get validationStatus(): string {\r\n        return this._getOption('validationStatus');\r\n    }\r\n    set validationStatus(value: string) {\r\n        this._setOption('validationStatus', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies a value the widget displays.\r\n     */\r\n    @Input()\r\n    get value(): string {\r\n        return this._getOption('value');\r\n    }\r\n    set value(value: string) {\r\n        this._setOption('value', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the DOM events after which the widget's value should be updated.\r\n     */\r\n    @Input()\r\n    get valueChangeEvent(): string {\r\n        return this._getOption('valueChangeEvent');\r\n    }\r\n    set valueChangeEvent(value: string) {\r\n        this._setOption('valueChangeEvent', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget is visible.\r\n     */\r\n    @Input()\r\n    get visible(): boolean {\r\n        return this._getOption('visible');\r\n    }\r\n    set visible(value: boolean) {\r\n        this._setOption('visible', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's width.\r\n     */\r\n    @Input()\r\n    get width(): number | Function | string {\r\n        return this._getOption('width');\r\n    }\r\n    set width(value: number | Function | string) {\r\n        this._setOption('width', value);\r\n    }\r\n\r\n    /**\r\n     * A function that is executed when the widget loses focus after the text field's content was changed using the keyboard.\r\n     */\r\n    @Output() onChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when the widget's content is ready and each time the content is changed.\r\n     */\r\n    @Output() onContentReady: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when the widget's input has been copied.\r\n     */\r\n    @Output() onCopy: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when the widget's input has been cut.\r\n     */\r\n    @Output() onCut: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before the widget is disposed of.\r\n     */\r\n    @Output() onDisposing: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when the Enter key has been pressed while the widget is focused.\r\n     */\r\n    @Output() onEnterKey: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when the widget gets focus.\r\n     */\r\n    @Output() onFocusIn: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when the widget loses focus.\r\n     */\r\n    @Output() onFocusOut: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function used in JavaScript frameworks to save the widget instance.\r\n     */\r\n    @Output() onInitialized: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed each time the widget's input is changed while the widget is focused.\r\n     */\r\n    @Output() onInput: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when a user is pressing a key on the keyboard.\r\n     */\r\n    @Output() onKeyDown: EventEmitter<any>;\r\n\r\n    /**\r\n     * The `keyPress` event is removed from the web standards and will be deprecated in modern browsers soon. Refer to the MDN topic for details.\r\n     */\r\n    @Output() onKeyPress: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when a user releases a key on the keyboard.\r\n     */\r\n    @Output() onKeyUp: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after a widget option is changed.\r\n     */\r\n    @Output() onOptionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when the widget's input has been pasted.\r\n     */\r\n    @Output() onPaste: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after the widget's value is changed.\r\n     */\r\n    @Output() onValueChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() accessKeyChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() activeStateEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() buttonsChange: EventEmitter<Array<string | DevExpress.ui.dxTextEditorButton>>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() disabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() elementAttrChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() focusStateEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() heightChange: EventEmitter<number | Function | string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() hintChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() hoverStateEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() inputAttrChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() isValidChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() maskChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() maskCharChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() maskInvalidMessageChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() maskRulesChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() maxLengthChange: EventEmitter<number | string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() modeChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() nameChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() placeholderChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() readOnlyChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() rtlEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() showClearButtonChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() showMaskModeChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() spellcheckChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() stylingModeChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() tabIndexChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() textChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() useMaskedValueChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() validationErrorChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() validationErrorsChange: EventEmitter<Array<any>>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() validationMessageModeChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() validationStatusChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() valueChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() valueChangeEventChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() visibleChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() widthChange: EventEmitter<number | Function | string>;\r\n\r\n    @Output() onBlur: EventEmitter<any>;\r\n\r\n\r\n    @HostListener('valueChange', ['$event']) change(_) { }\r\n    @HostListener('onBlur', ['$event']) touched = (_) => {};\r\n\r\n\r\n    @ContentChildren(DxiButtonComponent)\r\n    get buttonsChildren(): QueryList<DxiButtonComponent> {\r\n        return this._getOption('buttons');\r\n    }\r\n    set buttonsChildren(value) {\r\n        this.setChildren('buttons', value);\r\n    }\r\n\r\n\r\n\r\n\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost,\r\n            private _watcherHelper: WatcherHelper,\r\n            private _idh: IterableDifferHelper,\r\n            optionHost: NestedOptionHost,\r\n            transferState: TransferState,\r\n            @Inject(PLATFORM_ID) platformId: any) {\r\n\r\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\r\n\r\n        this._createEventEmitters([\r\n            { subscribe: 'change', emit: 'onChange' },\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'copy', emit: 'onCopy' },\r\n            { subscribe: 'cut', emit: 'onCut' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'enterKey', emit: 'onEnterKey' },\r\n            { subscribe: 'focusIn', emit: 'onFocusIn' },\r\n            { subscribe: 'focusOut', emit: 'onFocusOut' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'input', emit: 'onInput' },\r\n            { subscribe: 'keyDown', emit: 'onKeyDown' },\r\n            { subscribe: 'keyPress', emit: 'onKeyPress' },\r\n            { subscribe: 'keyUp', emit: 'onKeyUp' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'paste', emit: 'onPaste' },\r\n            { subscribe: 'valueChanged', emit: 'onValueChanged' },\r\n            { emit: 'accessKeyChange' },\r\n            { emit: 'activeStateEnabledChange' },\r\n            { emit: 'buttonsChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'focusStateEnabledChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'hintChange' },\r\n            { emit: 'hoverStateEnabledChange' },\r\n            { emit: 'inputAttrChange' },\r\n            { emit: 'isValidChange' },\r\n            { emit: 'maskChange' },\r\n            { emit: 'maskCharChange' },\r\n            { emit: 'maskInvalidMessageChange' },\r\n            { emit: 'maskRulesChange' },\r\n            { emit: 'maxLengthChange' },\r\n            { emit: 'modeChange' },\r\n            { emit: 'nameChange' },\r\n            { emit: 'placeholderChange' },\r\n            { emit: 'readOnlyChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'showClearButtonChange' },\r\n            { emit: 'showMaskModeChange' },\r\n            { emit: 'spellcheckChange' },\r\n            { emit: 'stylingModeChange' },\r\n            { emit: 'tabIndexChange' },\r\n            { emit: 'textChange' },\r\n            { emit: 'useMaskedValueChange' },\r\n            { emit: 'validationErrorChange' },\r\n            { emit: 'validationErrorsChange' },\r\n            { emit: 'validationMessageModeChange' },\r\n            { emit: 'validationStatusChange' },\r\n            { emit: 'valueChange' },\r\n            { emit: 'valueChangeEventChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' },\r\n            { emit: 'onBlur' }\r\n        ]);\r\n\r\n        this._idh.setHost(this);\r\n        optionHost.setHost(this);\r\n    }\r\n\r\n    protected _createInstance(element, options) {\r\n\r\n        return new DxTextBox(element, options);\r\n    }\r\n\r\n\r\n    writeValue(value: any): void {\r\n        this.eventHelper.lockedValueChangeEvent = true;\r\n        this.value = value;\r\n        this.eventHelper.lockedValueChangeEvent = false;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    registerOnChange(fn: (_: any) => void): void { this.change = fn; }\r\n    registerOnTouched(fn: () => void): void { this.touched = fn; }\r\n\r\n    _createWidget(element: any) {\r\n        super._createWidget(element);\r\n        this.instance.on('focusOut', (e) => {\r\n            this.eventHelper.fireNgEvent('onBlur', [e]);\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        super.ngOnChanges(changes);\r\n        this.setupChanges('buttons', changes);\r\n        this.setupChanges('validationErrors', changes);\r\n    }\r\n\r\n    setupChanges(prop: string, changes: SimpleChanges) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    }\r\n\r\n    ngDoCheck() {\r\n        this._idh.doCheck('buttons');\r\n        this._idh.doCheck('validationErrors');\r\n        this._watcherHelper.checkWatchers();\r\n        super.ngDoCheck();\r\n        super.clearChangedOptions();\r\n    }\r\n\r\n    _setOption(name: string, value: any) {\r\n        let isSetup = this._idh.setupSingle(name, value);\r\n        let isChanged = this._idh.getChanges(name, value) !== null;\r\n\r\n        if (isSetup || isChanged) {\r\n            super._setOption(name, value);\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    DxiButtonModule,\r\n    DxoOptionsModule,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    BrowserTransferStateModule\r\n  ],\r\n  declarations: [\r\n    DxTextBoxComponent\r\n  ],\r\n  exports: [\r\n    DxTextBoxComponent,\r\n    DxiButtonModule,\r\n    DxoOptionsModule,\r\n    DxTemplateModule\r\n  ]\r\n})\r\nexport class DxTextBoxModule { }\r\n"]}