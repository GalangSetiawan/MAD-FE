{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://devextreme-angular/ui/pivot-grid/index.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","DxPivotGridComponent","elementRef","ngZone","templateHost","_watcherHelper","_idh","optionHost","transferState","platformId","_this","_super","call","this","_createEventEmitters","subscribe","emit","setHost","paramIndex","decorator","__","constructor","prototype","create","tslib_1.__extends","_getOption","value","_setOption","_createInstance","element","options","DxPivotGrid","ngOnDestroy","_destroyWidget","ngOnChanges","changes","setupChanges","prop","_optionsToUpdate","setup","ngDoCheck","doCheck","checkWatchers","clearChangedOptions","name","isSetup","setupSingle","isChanged","getChanges","ElementRef","NgZone","DxTemplateHost","WatcherHelper","IterableDifferHelper","NestedOptionHost","TransferState","Inject","args","PLATFORM_ID","tslib_1.__decorate","Input","Output","EventEmitter","Component","selector","template","providers","tslib_1.__param","DxComponent","DxPivotGridModule","NgModule","imports","DxoDataSourceModule","DxiFieldModule","DxoFormatModule","DxoHeaderFilterModule","DxoStoreModule","DxoExportModule","DxoFieldChooserModule","DxoTextsModule","DxoFieldPanelModule","DxoLoadPanelModule","DxoScrollingModule","DxoStateStoringModule","DxIntegrationModule","DxTemplateModule","BrowserTransferStateModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*!\n * devextreme-angular\n * Version: 20.1.6\n * Build date: Fri Jul 17 2020\n *\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/* tslint:disable:max-line-length */\r\n\r\n\r\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\r\nimport { TransferState } from '@angular/platform-browser';\r\n\r\nimport {\r\n    Component,\r\n    NgModule,\r\n    ElementRef,\r\n    NgZone,\r\n    PLATFORM_ID,\r\n    Inject,\r\n\r\n    Input,\r\n    Output,\r\n    OnDestroy,\r\n    EventEmitter,\r\n    OnChanges,\r\n    DoCheck,\r\n    SimpleChanges\r\n} from '@angular/core';\r\n\r\n\r\nimport DevExpress from 'devextreme/bundles/dx.all';\r\n\r\nimport DxPivotGrid from 'devextreme/ui/pivot_grid';\r\n\r\n\r\nimport {\r\n    DxComponent,\r\n    DxTemplateHost,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    NestedOptionHost,\r\n    IterableDifferHelper,\r\n    WatcherHelper\r\n} from 'devextreme-angular/core';\r\n\r\nimport { DxoDataSourceModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiFieldModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoFormatModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoHeaderFilterModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoStoreModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoExportModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoFieldChooserModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoTextsModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoFieldPanelModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoLoadPanelModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoScrollingModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoStateStoringModule } from 'devextreme-angular/ui/nested';\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * The PivotGrid is a widget that allows you to display and analyze multi-dimensional data from a local storage or an OLAP cube.\r\n */\r\n@Component({\r\n    selector: 'dx-pivot-grid',\r\n    template: '',\r\n    providers: [\r\n        DxTemplateHost,\r\n        WatcherHelper,\r\n        NestedOptionHost,\r\n        IterableDifferHelper\r\n    ]\r\n})\r\nexport class DxPivotGridComponent extends DxComponent implements OnDestroy, OnChanges, DoCheck {\r\n    instance: DxPivotGrid;\r\n\r\n    /**\r\n     * Allows an end-user to expand/collapse all header items within a header level.\r\n     */\r\n    @Input()\r\n    get allowExpandAll(): boolean {\r\n        return this._getOption('allowExpandAll');\r\n    }\r\n    set allowExpandAll(value: boolean) {\r\n        this._setOption('allowExpandAll', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Allows a user to filter fields by selecting or deselecting values in the popup menu.\r\n     */\r\n    @Input()\r\n    get allowFiltering(): boolean {\r\n        return this._getOption('allowFiltering');\r\n    }\r\n    set allowFiltering(value: boolean) {\r\n        this._setOption('allowFiltering', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Allows an end-user to change sorting options.\r\n     */\r\n    @Input()\r\n    get allowSorting(): boolean {\r\n        return this._getOption('allowSorting');\r\n    }\r\n    set allowSorting(value: boolean) {\r\n        this._setOption('allowSorting', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Allows an end-user to sort columns by summary values.\r\n     */\r\n    @Input()\r\n    get allowSortingBySummary(): boolean {\r\n        return this._getOption('allowSortingBySummary');\r\n    }\r\n    set allowSortingBySummary(value: boolean) {\r\n        this._setOption('allowSortingBySummary', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the area to which data field headers must belong.\r\n     */\r\n    @Input()\r\n    get dataFieldArea(): string {\r\n        return this._getOption('dataFieldArea');\r\n    }\r\n    set dataFieldArea(value: string) {\r\n        this._setOption('dataFieldArea', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Binds the widget to data.\r\n     */\r\n    @Input()\r\n    get dataSource(): DevExpress.data.PivotGridDataSource | DevExpress.data.PivotGridDataSourceOptions | Array<any> {\r\n        return this._getOption('dataSource');\r\n    }\r\n    set dataSource(value: DevExpress.data.PivotGridDataSource | DevExpress.data.PivotGridDataSourceOptions | Array<any>) {\r\n        this._setOption('dataSource', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget responds to user interaction.\r\n     */\r\n    @Input()\r\n    get disabled(): boolean {\r\n        return this._getOption('disabled');\r\n    }\r\n    set disabled(value: boolean) {\r\n        this._setOption('disabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the attributes to be attached to the widget's root element.\r\n     */\r\n    @Input()\r\n    get elementAttr(): any {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value: any) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures client-side exporting.\r\n     */\r\n    @Input()\r\n    get export(): { enabled?: boolean, fileName?: string, ignoreExcelErrors?: boolean, proxyUrl?: string } {\r\n        return this._getOption('export');\r\n    }\r\n    set export(value: { enabled?: boolean, fileName?: string, ignoreExcelErrors?: boolean, proxyUrl?: string }) {\r\n        this._setOption('export', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * The Field Chooser configuration options.\r\n     */\r\n    @Input()\r\n    get fieldChooser(): { allowSearch?: boolean, applyChangesMode?: string, enabled?: boolean, height?: number, layout?: number | string, searchTimeout?: number, texts?: { allFields?: string, columnFields?: string, dataFields?: string, filterFields?: string, rowFields?: string }, title?: string, width?: number } {\r\n        return this._getOption('fieldChooser');\r\n    }\r\n    set fieldChooser(value: { allowSearch?: boolean, applyChangesMode?: string, enabled?: boolean, height?: number, layout?: number | string, searchTimeout?: number, texts?: { allFields?: string, columnFields?: string, dataFields?: string, filterFields?: string, rowFields?: string }, title?: string, width?: number }) {\r\n        this._setOption('fieldChooser', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the field panel.\r\n     */\r\n    @Input()\r\n    get fieldPanel(): { allowFieldDragging?: boolean, showColumnFields?: boolean, showDataFields?: boolean, showFilterFields?: boolean, showRowFields?: boolean, texts?: { columnFieldArea?: string, dataFieldArea?: string, filterFieldArea?: string, rowFieldArea?: string }, visible?: boolean } {\r\n        return this._getOption('fieldPanel');\r\n    }\r\n    set fieldPanel(value: { allowFieldDragging?: boolean, showColumnFields?: boolean, showDataFields?: boolean, showFilterFields?: boolean, showRowFields?: boolean, texts?: { columnFieldArea?: string, dataFieldArea?: string, filterFieldArea?: string, rowFieldArea?: string }, visible?: boolean }) {\r\n        this._setOption('fieldPanel', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the header filter feature.\r\n     */\r\n    @Input()\r\n    get headerFilter(): { allowSearch?: boolean, height?: number, searchTimeout?: number, showRelevantValues?: boolean, texts?: { cancel?: string, emptyValue?: string, ok?: string }, width?: number } {\r\n        return this._getOption('headerFilter');\r\n    }\r\n    set headerFilter(value: { allowSearch?: boolean, height?: number, searchTimeout?: number, showRelevantValues?: boolean, texts?: { cancel?: string, emptyValue?: string, ok?: string }, width?: number }) {\r\n        this._setOption('headerFilter', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's height.\r\n     */\r\n    @Input()\r\n    get height(): number | Function | string {\r\n        return this._getOption('height');\r\n    }\r\n    set height(value: number | Function | string) {\r\n        this._setOption('height', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether or not to hide rows and columns with no data.\r\n     */\r\n    @Input()\r\n    get hideEmptySummaryCells(): boolean {\r\n        return this._getOption('hideEmptySummaryCells');\r\n    }\r\n    set hideEmptySummaryCells(value: boolean) {\r\n        this._setOption('hideEmptySummaryCells', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies text for a hint that appears when a user pauses on the widget.\r\n     */\r\n    @Input()\r\n    get hint(): string {\r\n        return this._getOption('hint');\r\n    }\r\n    set hint(value: string) {\r\n        this._setOption('hint', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies options configuring the load panel.\r\n     */\r\n    @Input()\r\n    get loadPanel(): { enabled?: boolean, height?: number, indicatorSrc?: string, showIndicator?: boolean, showPane?: boolean, text?: string, width?: number } {\r\n        return this._getOption('loadPanel');\r\n    }\r\n    set loadPanel(value: { enabled?: boolean, height?: number, indicatorSrc?: string, showIndicator?: boolean, showPane?: boolean, text?: string, width?: number }) {\r\n        this._setOption('loadPanel', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the layout of items in the row header.\r\n     */\r\n    @Input()\r\n    get rowHeaderLayout(): string {\r\n        return this._getOption('rowHeaderLayout');\r\n    }\r\n    set rowHeaderLayout(value: string) {\r\n        this._setOption('rowHeaderLayout', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Switches the widget to a right-to-left representation.\r\n     */\r\n    @Input()\r\n    get rtlEnabled(): boolean {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value: boolean) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * A configuration object specifying scrolling options.\r\n     */\r\n    @Input()\r\n    get scrolling(): { mode?: string, useNative?: boolean | string } {\r\n        return this._getOption('scrolling');\r\n    }\r\n    set scrolling(value: { mode?: string, useNative?: boolean | string }) {\r\n        this._setOption('scrolling', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the outer borders of the grid are visible or not.\r\n     */\r\n    @Input()\r\n    get showBorders(): boolean {\r\n        return this._getOption('showBorders');\r\n    }\r\n    set showBorders(value: boolean) {\r\n        this._setOption('showBorders', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether to display the Grand Total column.\r\n     */\r\n    @Input()\r\n    get showColumnGrandTotals(): boolean {\r\n        return this._getOption('showColumnGrandTotals');\r\n    }\r\n    set showColumnGrandTotals(value: boolean) {\r\n        this._setOption('showColumnGrandTotals', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether to display the Total columns.\r\n     */\r\n    @Input()\r\n    get showColumnTotals(): boolean {\r\n        return this._getOption('showColumnTotals');\r\n    }\r\n    set showColumnTotals(value: boolean) {\r\n        this._setOption('showColumnTotals', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether to display the Grand Total row.\r\n     */\r\n    @Input()\r\n    get showRowGrandTotals(): boolean {\r\n        return this._getOption('showRowGrandTotals');\r\n    }\r\n    set showRowGrandTotals(value: boolean) {\r\n        this._setOption('showRowGrandTotals', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether to display the Total rows. Applies only if rowHeaderLayout is \"standard\".\r\n     */\r\n    @Input()\r\n    get showRowTotals(): boolean {\r\n        return this._getOption('showRowTotals');\r\n    }\r\n    set showRowTotals(value: boolean) {\r\n        this._setOption('showRowTotals', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies where to show the total rows or columns. Applies only if rowHeaderLayout is \"standard\".\r\n     */\r\n    @Input()\r\n    get showTotalsPrior(): string {\r\n        return this._getOption('showTotalsPrior');\r\n    }\r\n    set showTotalsPrior(value: string) {\r\n        this._setOption('showTotalsPrior', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * A configuration object specifying options related to state storing.\r\n     */\r\n    @Input()\r\n    get stateStoring(): { customLoad?: Function, customSave?: Function, enabled?: boolean, savingTimeout?: number, storageKey?: string, type?: string } {\r\n        return this._getOption('stateStoring');\r\n    }\r\n    set stateStoring(value: { customLoad?: Function, customSave?: Function, enabled?: boolean, savingTimeout?: number, storageKey?: string, type?: string }) {\r\n        this._setOption('stateStoring', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the number of the element when the Tab key is used for navigating.\r\n     */\r\n    @Input()\r\n    get tabIndex(): number {\r\n        return this._getOption('tabIndex');\r\n    }\r\n    set tabIndex(value: number) {\r\n        this._setOption('tabIndex', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Strings that can be changed or localized in the PivotGrid widget.\r\n     */\r\n    @Input()\r\n    get texts(): { collapseAll?: string, dataNotAvailable?: string, expandAll?: string, exportToExcel?: string, grandTotal?: string, noData?: string, removeAllSorting?: string, showFieldChooser?: string, sortColumnBySummary?: string, sortRowBySummary?: string, total?: string } {\r\n        return this._getOption('texts');\r\n    }\r\n    set texts(value: { collapseAll?: string, dataNotAvailable?: string, expandAll?: string, exportToExcel?: string, grandTotal?: string, noData?: string, removeAllSorting?: string, showFieldChooser?: string, sortColumnBySummary?: string, sortRowBySummary?: string, total?: string }) {\r\n        this._setOption('texts', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget is visible.\r\n     */\r\n    @Input()\r\n    get visible(): boolean {\r\n        return this._getOption('visible');\r\n    }\r\n    set visible(value: boolean) {\r\n        this._setOption('visible', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's width.\r\n     */\r\n    @Input()\r\n    get width(): number | Function | string {\r\n        return this._getOption('width');\r\n    }\r\n    set width(value: number | Function | string) {\r\n        this._setOption('width', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether long text in header items should be wrapped.\r\n     */\r\n    @Input()\r\n    get wordWrapEnabled(): boolean {\r\n        return this._getOption('wordWrapEnabled');\r\n    }\r\n    set wordWrapEnabled(value: boolean) {\r\n        this._setOption('wordWrapEnabled', value);\r\n    }\r\n\r\n    /**\r\n     * A function that is executed when a pivot grid cell is clicked or tapped.\r\n     */\r\n    @Output() onCellClick: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after a pivot grid cell is created.\r\n     */\r\n    @Output() onCellPrepared: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when the widget's content is ready and each time the content is changed.\r\n     */\r\n    @Output() onContentReady: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before the context menu is rendered.\r\n     */\r\n    @Output() onContextMenuPreparing: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before the widget is disposed of.\r\n     */\r\n    @Output() onDisposing: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after data is exported.\r\n     */\r\n    @Output() onExported: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before data is exported.\r\n     */\r\n    @Output() onExporting: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before a file with exported data is saved to the user's local storage.\r\n     */\r\n    @Output() onFileSaving: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function used in JavaScript frameworks to save the widget instance.\r\n     */\r\n    @Output() onInitialized: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after a widget option is changed.\r\n     */\r\n    @Output() onOptionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() allowExpandAllChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() allowFilteringChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() allowSortingChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() allowSortingBySummaryChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() dataFieldAreaChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() dataSourceChange: EventEmitter<DevExpress.data.PivotGridDataSource | DevExpress.data.PivotGridDataSourceOptions | Array<any>>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() disabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() elementAttrChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() exportChange: EventEmitter<{ enabled?: boolean, fileName?: string, ignoreExcelErrors?: boolean, proxyUrl?: string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() fieldChooserChange: EventEmitter<{ allowSearch?: boolean, applyChangesMode?: string, enabled?: boolean, height?: number, layout?: number | string, searchTimeout?: number, texts?: { allFields?: string, columnFields?: string, dataFields?: string, filterFields?: string, rowFields?: string }, title?: string, width?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() fieldPanelChange: EventEmitter<{ allowFieldDragging?: boolean, showColumnFields?: boolean, showDataFields?: boolean, showFilterFields?: boolean, showRowFields?: boolean, texts?: { columnFieldArea?: string, dataFieldArea?: string, filterFieldArea?: string, rowFieldArea?: string }, visible?: boolean }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() headerFilterChange: EventEmitter<{ allowSearch?: boolean, height?: number, searchTimeout?: number, showRelevantValues?: boolean, texts?: { cancel?: string, emptyValue?: string, ok?: string }, width?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() heightChange: EventEmitter<number | Function | string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() hideEmptySummaryCellsChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() hintChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() loadPanelChange: EventEmitter<{ enabled?: boolean, height?: number, indicatorSrc?: string, showIndicator?: boolean, showPane?: boolean, text?: string, width?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() rowHeaderLayoutChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() rtlEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() scrollingChange: EventEmitter<{ mode?: string, useNative?: boolean | string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() showBordersChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() showColumnGrandTotalsChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() showColumnTotalsChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() showRowGrandTotalsChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() showRowTotalsChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() showTotalsPriorChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() stateStoringChange: EventEmitter<{ customLoad?: Function, customSave?: Function, enabled?: boolean, savingTimeout?: number, storageKey?: string, type?: string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() tabIndexChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() textsChange: EventEmitter<{ collapseAll?: string, dataNotAvailable?: string, expandAll?: string, exportToExcel?: string, grandTotal?: string, noData?: string, removeAllSorting?: string, showFieldChooser?: string, sortColumnBySummary?: string, sortRowBySummary?: string, total?: string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() visibleChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() widthChange: EventEmitter<number | Function | string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() wordWrapEnabledChange: EventEmitter<boolean>;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost,\r\n            private _watcherHelper: WatcherHelper,\r\n            private _idh: IterableDifferHelper,\r\n            optionHost: NestedOptionHost,\r\n            transferState: TransferState,\r\n            @Inject(PLATFORM_ID) platformId: any) {\r\n\r\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\r\n\r\n        this._createEventEmitters([\r\n            { subscribe: 'cellClick', emit: 'onCellClick' },\r\n            { subscribe: 'cellPrepared', emit: 'onCellPrepared' },\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'contextMenuPreparing', emit: 'onContextMenuPreparing' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'exported', emit: 'onExported' },\r\n            { subscribe: 'exporting', emit: 'onExporting' },\r\n            { subscribe: 'fileSaving', emit: 'onFileSaving' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { emit: 'allowExpandAllChange' },\r\n            { emit: 'allowFilteringChange' },\r\n            { emit: 'allowSortingChange' },\r\n            { emit: 'allowSortingBySummaryChange' },\r\n            { emit: 'dataFieldAreaChange' },\r\n            { emit: 'dataSourceChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'exportChange' },\r\n            { emit: 'fieldChooserChange' },\r\n            { emit: 'fieldPanelChange' },\r\n            { emit: 'headerFilterChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'hideEmptySummaryCellsChange' },\r\n            { emit: 'hintChange' },\r\n            { emit: 'loadPanelChange' },\r\n            { emit: 'rowHeaderLayoutChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'scrollingChange' },\r\n            { emit: 'showBordersChange' },\r\n            { emit: 'showColumnGrandTotalsChange' },\r\n            { emit: 'showColumnTotalsChange' },\r\n            { emit: 'showRowGrandTotalsChange' },\r\n            { emit: 'showRowTotalsChange' },\r\n            { emit: 'showTotalsPriorChange' },\r\n            { emit: 'stateStoringChange' },\r\n            { emit: 'tabIndexChange' },\r\n            { emit: 'textsChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' },\r\n            { emit: 'wordWrapEnabledChange' }\r\n        ]);\r\n\r\n        this._idh.setHost(this);\r\n        optionHost.setHost(this);\r\n    }\r\n\r\n    protected _createInstance(element, options) {\r\n\r\n        return new DxPivotGrid(element, options);\r\n    }\r\n\r\n\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        super.ngOnChanges(changes);\r\n        this.setupChanges('dataSource', changes);\r\n    }\r\n\r\n    setupChanges(prop: string, changes: SimpleChanges) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    }\r\n\r\n    ngDoCheck() {\r\n        this._idh.doCheck('dataSource');\r\n        this._watcherHelper.checkWatchers();\r\n        super.ngDoCheck();\r\n        super.clearChangedOptions();\r\n    }\r\n\r\n    _setOption(name: string, value: any) {\r\n        let isSetup = this._idh.setupSingle(name, value);\r\n        let isChanged = this._idh.getChanges(name, value) !== null;\r\n\r\n        if (isSetup || isChanged) {\r\n            super._setOption(name, value);\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    DxoDataSourceModule,\r\n    DxiFieldModule,\r\n    DxoFormatModule,\r\n    DxoHeaderFilterModule,\r\n    DxoStoreModule,\r\n    DxoExportModule,\r\n    DxoFieldChooserModule,\r\n    DxoTextsModule,\r\n    DxoFieldPanelModule,\r\n    DxoLoadPanelModule,\r\n    DxoScrollingModule,\r\n    DxoStateStoringModule,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    BrowserTransferStateModule\r\n  ],\r\n  declarations: [\r\n    DxPivotGridComponent\r\n  ],\r\n  exports: [\r\n    DxPivotGridComponent,\r\n    DxoDataSourceModule,\r\n    DxiFieldModule,\r\n    DxoFormatModule,\r\n    DxoHeaderFilterModule,\r\n    DxoStoreModule,\r\n    DxoExportModule,\r\n    DxoFieldChooserModule,\r\n    DxoTextsModule,\r\n    DxoFieldPanelModule,\r\n    DxoLoadPanelModule,\r\n    DxoScrollingModule,\r\n    DxoStateStoringModule,\r\n    DxTemplateModule\r\n  ]\r\n})\r\nexport class DxPivotGridModule { }\r\n"]}