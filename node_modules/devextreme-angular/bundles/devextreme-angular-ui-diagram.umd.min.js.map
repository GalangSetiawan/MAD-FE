{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://devextreme-angular/ui/diagram/index.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","DxDiagramComponent","elementRef","ngZone","templateHost","_watcherHelper","_idh","optionHost","transferState","platformId","_this","_super","call","this","_createEventEmitters","subscribe","emit","setHost","paramIndex","decorator","__","constructor","prototype","create","tslib_1.__extends","_getOption","value","_setOption","setChildren","_createInstance","element","options","DxDiagram","ngOnDestroy","_destroyWidget","ngOnChanges","changes","setupChanges","prop","_optionsToUpdate","setup","ngDoCheck","doCheck","checkWatchers","clearChangedOptions","name","isSetup","setupSingle","isChanged","getChanges","ElementRef","NgZone","DxTemplateHost","WatcherHelper","IterableDifferHelper","NestedOptionHost","TransferState","Inject","args","PLATFORM_ID","tslib_1.__decorate","Input","Output","EventEmitter","ContentChildren","DxiCustomShapeComponent","QueryList","Component","selector","template","providers","tslib_1.__param","DxComponent","DxDiagramModule","NgModule","imports","DxoContextMenuModule","DxiCommandModule","DxiItemModule","DxoContextToolboxModule","DxiCustomShapeModule","DxiConnectionPointModule","DxoDefaultItemPropertiesModule","DxoEdgesModule","DxoExportModule","DxoGridSizeModule","DxoHistoryToolbarModule","DxoMainToolbarModule","DxoNodesModule","DxoAutoLayoutModule","DxoPageSizeModule","DxoPropertiesPanelModule","DxiTabModule","DxiGroupModule","DxoToolboxModule","DxoViewToolbarModule","DxoZoomLevelModule","DxIntegrationModule","DxTemplateModule","BrowserTransferStateModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*!\n * devextreme-angular\n * Version: 20.1.6\n * Build date: Fri Jul 17 2020\n *\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/* tslint:disable:max-line-length */\r\n\r\n\r\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\r\nimport { TransferState } from '@angular/platform-browser';\r\n\r\nimport {\r\n    Component,\r\n    NgModule,\r\n    ElementRef,\r\n    NgZone,\r\n    PLATFORM_ID,\r\n    Inject,\r\n\r\n    Input,\r\n    Output,\r\n    OnDestroy,\r\n    EventEmitter,\r\n    OnChanges,\r\n    DoCheck,\r\n    SimpleChanges,\r\n    ContentChildren,\r\n    QueryList\r\n} from '@angular/core';\r\n\r\n\r\nimport DevExpress from 'devextreme/bundles/dx.all';\r\n\r\nimport DxDiagram from 'devextreme/ui/diagram';\r\n\r\n\r\nimport {\r\n    DxComponent,\r\n    DxTemplateHost,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    NestedOptionHost,\r\n    IterableDifferHelper,\r\n    WatcherHelper\r\n} from 'devextreme-angular/core';\r\n\r\nimport { DxoContextMenuModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiCommandModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiItemModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoContextToolboxModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiCustomShapeModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiConnectionPointModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoDefaultItemPropertiesModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoEdgesModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoExportModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoGridSizeModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoHistoryToolbarModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoMainToolbarModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoNodesModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoAutoLayoutModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoPageSizeModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoPropertiesPanelModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiTabModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiGroupModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoToolboxModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoViewToolbarModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoZoomLevelModule } from 'devextreme-angular/ui/nested';\r\n\r\nimport { DxiCustomShapeComponent } from 'devextreme-angular/ui/nested';\r\n\r\n\r\n\r\n\r\n/**\r\n * The Diagram widget provides a visual interface to help you design new and modify existing diagrams.\r\n */\r\n@Component({\r\n    selector: 'dx-diagram',\r\n    template: '',\r\n    providers: [\r\n        DxTemplateHost,\r\n        WatcherHelper,\r\n        NestedOptionHost,\r\n        IterableDifferHelper\r\n    ]\r\n})\r\nexport class DxDiagramComponent extends DxComponent implements OnDestroy, OnChanges, DoCheck {\r\n    instance: DxDiagram;\r\n\r\n    /**\r\n     * Specifies how the Diagram widget automatically zooms the work area.\r\n     */\r\n    @Input()\r\n    get autoZoomMode(): string {\r\n        return this._getOption('autoZoomMode');\r\n    }\r\n    set autoZoomMode(value: string) {\r\n        this._setOption('autoZoomMode', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the context menu's settings.\r\n     */\r\n    @Input()\r\n    get contextMenu(): { commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>, enabled?: boolean } {\r\n        return this._getOption('contextMenu');\r\n    }\r\n    set contextMenu(value: { commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>, enabled?: boolean }) {\r\n        this._setOption('contextMenu', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the context toolbox's settings.\r\n     */\r\n    @Input()\r\n    get contextToolbox(): { category?: string, displayMode?: string, enabled?: boolean, shapes?: Array<string> } {\r\n        return this._getOption('contextToolbox');\r\n    }\r\n    set contextToolbox(value: { category?: string, displayMode?: string, enabled?: boolean, shapes?: Array<string> }) {\r\n        this._setOption('contextToolbox', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Provide access to an array of custom shapes.\r\n     */\r\n    @Input()\r\n    get customShapes(): Array<any | { allowEditImage?: boolean, allowEditText?: boolean, allowResize?: boolean, backgroundImageHeight?: number, backgroundImageLeft?: number, backgroundImageToolboxUrl?: string, backgroundImageTop?: number, backgroundImageUrl?: string, backgroundImageWidth?: number, baseType?: string, category?: string, connectionPoints?: Array<any | { x?: number, y?: number }>, defaultHeight?: number, defaultImageUrl?: string, defaultText?: string, defaultWidth?: number, imageHeight?: number, imageLeft?: number, imageTop?: number, imageWidth?: number, maxHeight?: number, maxWidth?: number, minHeight?: number, minWidth?: number, template?: any, templateHeight?: number, templateLeft?: number, templateTop?: number, templateWidth?: number, textHeight?: number, textLeft?: number, textTop?: number, textWidth?: number, title?: string, type?: string }> {\r\n        return this._getOption('customShapes');\r\n    }\r\n    set customShapes(value: Array<any | { allowEditImage?: boolean, allowEditText?: boolean, allowResize?: boolean, backgroundImageHeight?: number, backgroundImageLeft?: number, backgroundImageToolboxUrl?: string, backgroundImageTop?: number, backgroundImageUrl?: string, backgroundImageWidth?: number, baseType?: string, category?: string, connectionPoints?: Array<any | { x?: number, y?: number }>, defaultHeight?: number, defaultImageUrl?: string, defaultText?: string, defaultWidth?: number, imageHeight?: number, imageLeft?: number, imageTop?: number, imageWidth?: number, maxHeight?: number, maxWidth?: number, minHeight?: number, minWidth?: number, template?: any, templateHeight?: number, templateLeft?: number, templateTop?: number, templateWidth?: number, textHeight?: number, textLeft?: number, textTop?: number, textWidth?: number, title?: string, type?: string }>) {\r\n        this._setOption('customShapes', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies a custom template for shapes.\r\n     */\r\n    @Input()\r\n    get customShapeTemplate(): any {\r\n        return this._getOption('customShapeTemplate');\r\n    }\r\n    set customShapeTemplate(value: any) {\r\n        this._setOption('customShapeTemplate', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures default item properties.\r\n     */\r\n    @Input()\r\n    get defaultItemProperties(): { connectorLineEnd?: string, connectorLineStart?: string, connectorLineType?: string, style?: any, textStyle?: any } {\r\n        return this._getOption('defaultItemProperties');\r\n    }\r\n    set defaultItemProperties(value: { connectorLineEnd?: string, connectorLineStart?: string, connectorLineType?: string, style?: any, textStyle?: any }) {\r\n        this._setOption('defaultItemProperties', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget responds to user interaction.\r\n     */\r\n    @Input()\r\n    get disabled(): boolean {\r\n        return this._getOption('disabled');\r\n    }\r\n    set disabled(value: boolean) {\r\n        this._setOption('disabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Allows you to bind the collection of diagram edges to a data source. For more information, see the Data Binding section.\r\n     */\r\n    @Input()\r\n    get edges(): { dataSource?: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | Array<any>, fromExpr?: Function | string, fromLineEndExpr?: Function | string, fromPointIndexExpr?: Function | string, keyExpr?: Function | string, lineTypeExpr?: Function | string, lockedExpr?: Function | string, pointsExpr?: Function | string, styleExpr?: Function | string, textExpr?: Function | string, textStyleExpr?: Function | string, toExpr?: Function | string, toLineEndExpr?: Function | string, toPointIndexExpr?: Function | string, zIndexExpr?: Function | string } {\r\n        return this._getOption('edges');\r\n    }\r\n    set edges(value: { dataSource?: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | Array<any>, fromExpr?: Function | string, fromLineEndExpr?: Function | string, fromPointIndexExpr?: Function | string, keyExpr?: Function | string, lineTypeExpr?: Function | string, lockedExpr?: Function | string, pointsExpr?: Function | string, styleExpr?: Function | string, textExpr?: Function | string, textStyleExpr?: Function | string, toExpr?: Function | string, toLineEndExpr?: Function | string, toPointIndexExpr?: Function | string, zIndexExpr?: Function | string }) {\r\n        this._setOption('edges', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the attributes to be attached to the widget's root element.\r\n     */\r\n    @Input()\r\n    get elementAttr(): any {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value: any) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures export settings.\r\n     */\r\n    @Input()\r\n    get export(): { fileName?: string, proxyUrl?: string } {\r\n        return this._getOption('export');\r\n    }\r\n    set export(value: { fileName?: string, proxyUrl?: string }) {\r\n        this._setOption('export', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether or not to display the widget in full-screen mode.\r\n     */\r\n    @Input()\r\n    get fullScreen(): boolean {\r\n        return this._getOption('fullScreen');\r\n    }\r\n    set fullScreen(value: boolean) {\r\n        this._setOption('fullScreen', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the grid pitch.\r\n     */\r\n    @Input()\r\n    get gridSize(): number | { items?: Array<number>, value?: number } {\r\n        return this._getOption('gridSize');\r\n    }\r\n    set gridSize(value: number | { items?: Array<number>, value?: number }) {\r\n        this._setOption('gridSize', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Indicates whether diagram content has been changed.\r\n     */\r\n    @Input()\r\n    get hasChanges(): boolean {\r\n        return this._getOption('hasChanges');\r\n    }\r\n    set hasChanges(value: boolean) {\r\n        this._setOption('hasChanges', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's height.\r\n     */\r\n    @Input()\r\n    get height(): number | Function | string {\r\n        return this._getOption('height');\r\n    }\r\n    set height(value: number | Function | string) {\r\n        this._setOption('height', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the history toolbar's settings.\r\n     */\r\n    @Input()\r\n    get historyToolbar(): { commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>, visible?: boolean } {\r\n        return this._getOption('historyToolbar');\r\n    }\r\n    set historyToolbar(value: { commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>, visible?: boolean }) {\r\n        this._setOption('historyToolbar', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the main toolbar settings.\r\n     */\r\n    @Input()\r\n    get mainToolbar(): { commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>, visible?: boolean } {\r\n        return this._getOption('mainToolbar');\r\n    }\r\n    set mainToolbar(value: { commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>, visible?: boolean }) {\r\n        this._setOption('mainToolbar', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Allows you to bind the collection of diagram nodes to a data source. For more information, see the Data Binding section.\r\n     */\r\n    @Input()\r\n    get nodes(): { autoLayout?: string | { orientation?: string, type?: string }, containerChildrenExpr?: Function | string, containerKeyExpr?: Function | string, dataSource?: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | Array<any>, heightExpr?: Function | string, imageUrlExpr?: Function | string, itemsExpr?: Function | string, keyExpr?: Function | string, leftExpr?: Function | string, lockedExpr?: Function | string, parentKeyExpr?: Function | string, styleExpr?: Function | string, textExpr?: Function | string, textStyleExpr?: Function | string, topExpr?: Function | string, typeExpr?: Function | string, widthExpr?: Function | string, zIndexExpr?: Function | string } {\r\n        return this._getOption('nodes');\r\n    }\r\n    set nodes(value: { autoLayout?: string | { orientation?: string, type?: string }, containerChildrenExpr?: Function | string, containerKeyExpr?: Function | string, dataSource?: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | Array<any>, heightExpr?: Function | string, imageUrlExpr?: Function | string, itemsExpr?: Function | string, keyExpr?: Function | string, leftExpr?: Function | string, lockedExpr?: Function | string, parentKeyExpr?: Function | string, styleExpr?: Function | string, textExpr?: Function | string, textStyleExpr?: Function | string, topExpr?: Function | string, typeExpr?: Function | string, widthExpr?: Function | string, zIndexExpr?: Function | string }) {\r\n        this._setOption('nodes', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the color of a diagram page.\r\n     */\r\n    @Input()\r\n    get pageColor(): string {\r\n        return this._getOption('pageColor');\r\n    }\r\n    set pageColor(value: string) {\r\n        this._setOption('pageColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the page orientation.\r\n     */\r\n    @Input()\r\n    get pageOrientation(): string {\r\n        return this._getOption('pageOrientation');\r\n    }\r\n    set pageOrientation(value: string) {\r\n        this._setOption('pageOrientation', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies a size of pages.\r\n     */\r\n    @Input()\r\n    get pageSize(): { height?: number, items?: Array<any | { height?: number, text?: string, width?: number }>, width?: number } {\r\n        return this._getOption('pageSize');\r\n    }\r\n    set pageSize(value: { height?: number, items?: Array<any | { height?: number, text?: string, width?: number }>, width?: number }) {\r\n        this._setOption('pageSize', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the Properties panel settings.\r\n     */\r\n    @Input()\r\n    get propertiesPanel(): { tabs?: Array<any | { commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>, groups?: Array<any | { commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>, title?: string }>, title?: string }>, visibility?: string } {\r\n        return this._getOption('propertiesPanel');\r\n    }\r\n    set propertiesPanel(value: { tabs?: Array<any | { commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>, groups?: Array<any | { commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>, title?: string }>, title?: string }>, visibility?: string }) {\r\n        this._setOption('propertiesPanel', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the diagram is read-only.\r\n     */\r\n    @Input()\r\n    get readOnly(): boolean {\r\n        return this._getOption('readOnly');\r\n    }\r\n    set readOnly(value: boolean) {\r\n        this._setOption('readOnly', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Switches the widget to a right-to-left representation.\r\n     */\r\n    @Input()\r\n    get rtlEnabled(): boolean {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value: boolean) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether grid lines are visible.\r\n     */\r\n    @Input()\r\n    get showGrid(): boolean {\r\n        return this._getOption('showGrid');\r\n    }\r\n    set showGrid(value: boolean) {\r\n        this._setOption('showGrid', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Switch the Diagram widget to simple view mode.\r\n     */\r\n    @Input()\r\n    get simpleView(): boolean {\r\n        return this._getOption('simpleView');\r\n    }\r\n    set simpleView(value: boolean) {\r\n        this._setOption('simpleView', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether diagram elements should snap to grid lines.\r\n     */\r\n    @Input()\r\n    get snapToGrid(): boolean {\r\n        return this._getOption('snapToGrid');\r\n    }\r\n    set snapToGrid(value: boolean) {\r\n        this._setOption('snapToGrid', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the toolbox settings.\r\n     */\r\n    @Input()\r\n    get toolbox(): { groups?: Array<any | string | { category?: string, displayMode?: string, expanded?: boolean, shapes?: Array<string>, title?: string }>, visibility?: string } {\r\n        return this._getOption('toolbox');\r\n    }\r\n    set toolbox(value: { groups?: Array<any | string | { category?: string, displayMode?: string, expanded?: boolean, shapes?: Array<string>, title?: string }>, visibility?: string }) {\r\n        this._setOption('toolbox', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the unit for measurement options (for example, defaultHeight, gridSize, leftExpr).\r\n     */\r\n    @Input()\r\n    get units(): string {\r\n        return this._getOption('units');\r\n    }\r\n    set units(value: string) {\r\n        this._setOption('units', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the view toolbar settings.\r\n     */\r\n    @Input()\r\n    get viewToolbar(): { commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>, visible?: boolean } {\r\n        return this._getOption('viewToolbar');\r\n    }\r\n    set viewToolbar(value: { commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>, visible?: boolean }) {\r\n        this._setOption('viewToolbar', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the measurement unit that is displayed in user interface elements.\r\n     */\r\n    @Input()\r\n    get viewUnits(): string {\r\n        return this._getOption('viewUnits');\r\n    }\r\n    set viewUnits(value: string) {\r\n        this._setOption('viewUnits', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget is visible.\r\n     */\r\n    @Input()\r\n    get visible(): boolean {\r\n        return this._getOption('visible');\r\n    }\r\n    set visible(value: boolean) {\r\n        this._setOption('visible', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's width.\r\n     */\r\n    @Input()\r\n    get width(): number | Function | string {\r\n        return this._getOption('width');\r\n    }\r\n    set width(value: number | Function | string) {\r\n        this._setOption('width', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the zoom level.\r\n     */\r\n    @Input()\r\n    get zoomLevel(): number | { items?: Array<number>, value?: number } {\r\n        return this._getOption('zoomLevel');\r\n    }\r\n    set zoomLevel(value: number | { items?: Array<number>, value?: number }) {\r\n        this._setOption('zoomLevel', value);\r\n    }\r\n\r\n    /**\r\n     * A function that is executed when the widget's content is ready and each time the content is changed.\r\n     */\r\n    @Output() onContentReady: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after a custom command item was clicked and allows you to implement the custom command's logic.\r\n     */\r\n    @Output() onCustomCommand: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before the widget is disposed of.\r\n     */\r\n    @Output() onDisposing: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function used in JavaScript frameworks to save the widget instance.\r\n     */\r\n    @Output() onInitialized: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after a shape or connector is clicked.\r\n     */\r\n    @Output() onItemClick: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after a shape or connector is double-clicked.\r\n     */\r\n    @Output() onItemDblClick: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after a widget option is changed.\r\n     */\r\n    @Output() onOptionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after the selection is changed in the Diagram.\r\n     */\r\n    @Output() onSelectionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() autoZoomModeChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() contextMenuChange: EventEmitter<{ commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>, enabled?: boolean }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() contextToolboxChange: EventEmitter<{ category?: string, displayMode?: string, enabled?: boolean, shapes?: Array<string> }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() customShapesChange: EventEmitter<Array<any | { allowEditImage?: boolean, allowEditText?: boolean, allowResize?: boolean, backgroundImageHeight?: number, backgroundImageLeft?: number, backgroundImageToolboxUrl?: string, backgroundImageTop?: number, backgroundImageUrl?: string, backgroundImageWidth?: number, baseType?: string, category?: string, connectionPoints?: Array<any | { x?: number, y?: number }>, defaultHeight?: number, defaultImageUrl?: string, defaultText?: string, defaultWidth?: number, imageHeight?: number, imageLeft?: number, imageTop?: number, imageWidth?: number, maxHeight?: number, maxWidth?: number, minHeight?: number, minWidth?: number, template?: any, templateHeight?: number, templateLeft?: number, templateTop?: number, templateWidth?: number, textHeight?: number, textLeft?: number, textTop?: number, textWidth?: number, title?: string, type?: string }>>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() customShapeTemplateChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() defaultItemPropertiesChange: EventEmitter<{ connectorLineEnd?: string, connectorLineStart?: string, connectorLineType?: string, style?: any, textStyle?: any }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() disabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() edgesChange: EventEmitter<{ dataSource?: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | Array<any>, fromExpr?: Function | string, fromLineEndExpr?: Function | string, fromPointIndexExpr?: Function | string, keyExpr?: Function | string, lineTypeExpr?: Function | string, lockedExpr?: Function | string, pointsExpr?: Function | string, styleExpr?: Function | string, textExpr?: Function | string, textStyleExpr?: Function | string, toExpr?: Function | string, toLineEndExpr?: Function | string, toPointIndexExpr?: Function | string, zIndexExpr?: Function | string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() elementAttrChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() exportChange: EventEmitter<{ fileName?: string, proxyUrl?: string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() fullScreenChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() gridSizeChange: EventEmitter<number | { items?: Array<number>, value?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() hasChangesChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() heightChange: EventEmitter<number | Function | string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() historyToolbarChange: EventEmitter<{ commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>, visible?: boolean }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() mainToolbarChange: EventEmitter<{ commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>, visible?: boolean }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() nodesChange: EventEmitter<{ autoLayout?: string | { orientation?: string, type?: string }, containerChildrenExpr?: Function | string, containerKeyExpr?: Function | string, dataSource?: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | Array<any>, heightExpr?: Function | string, imageUrlExpr?: Function | string, itemsExpr?: Function | string, keyExpr?: Function | string, leftExpr?: Function | string, lockedExpr?: Function | string, parentKeyExpr?: Function | string, styleExpr?: Function | string, textExpr?: Function | string, textStyleExpr?: Function | string, topExpr?: Function | string, typeExpr?: Function | string, widthExpr?: Function | string, zIndexExpr?: Function | string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() pageColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() pageOrientationChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() pageSizeChange: EventEmitter<{ height?: number, items?: Array<any | { height?: number, text?: string, width?: number }>, width?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() propertiesPanelChange: EventEmitter<{ tabs?: Array<any | { commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>, groups?: Array<any | { commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>, title?: string }>, title?: string }>, visibility?: string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() readOnlyChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() rtlEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() showGridChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() simpleViewChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() snapToGridChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() toolboxChange: EventEmitter<{ groups?: Array<any | string | { category?: string, displayMode?: string, expanded?: boolean, shapes?: Array<string>, title?: string }>, visibility?: string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() unitsChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() viewToolbarChange: EventEmitter<{ commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>, visible?: boolean }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() viewUnitsChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() visibleChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() widthChange: EventEmitter<number | Function | string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() zoomLevelChange: EventEmitter<number | { items?: Array<number>, value?: number }>;\r\n\r\n\r\n\r\n\r\n    @ContentChildren(DxiCustomShapeComponent)\r\n    get customShapesChildren(): QueryList<DxiCustomShapeComponent> {\r\n        return this._getOption('customShapes');\r\n    }\r\n    set customShapesChildren(value) {\r\n        this.setChildren('customShapes', value);\r\n    }\r\n\r\n\r\n\r\n\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost,\r\n            private _watcherHelper: WatcherHelper,\r\n            private _idh: IterableDifferHelper,\r\n            optionHost: NestedOptionHost,\r\n            transferState: TransferState,\r\n            @Inject(PLATFORM_ID) platformId: any) {\r\n\r\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\r\n\r\n        this._createEventEmitters([\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'customCommand', emit: 'onCustomCommand' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'itemClick', emit: 'onItemClick' },\r\n            { subscribe: 'itemDblClick', emit: 'onItemDblClick' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'selectionChanged', emit: 'onSelectionChanged' },\r\n            { emit: 'autoZoomModeChange' },\r\n            { emit: 'contextMenuChange' },\r\n            { emit: 'contextToolboxChange' },\r\n            { emit: 'customShapesChange' },\r\n            { emit: 'customShapeTemplateChange' },\r\n            { emit: 'defaultItemPropertiesChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'edgesChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'exportChange' },\r\n            { emit: 'fullScreenChange' },\r\n            { emit: 'gridSizeChange' },\r\n            { emit: 'hasChangesChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'historyToolbarChange' },\r\n            { emit: 'mainToolbarChange' },\r\n            { emit: 'nodesChange' },\r\n            { emit: 'pageColorChange' },\r\n            { emit: 'pageOrientationChange' },\r\n            { emit: 'pageSizeChange' },\r\n            { emit: 'propertiesPanelChange' },\r\n            { emit: 'readOnlyChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'showGridChange' },\r\n            { emit: 'simpleViewChange' },\r\n            { emit: 'snapToGridChange' },\r\n            { emit: 'toolboxChange' },\r\n            { emit: 'unitsChange' },\r\n            { emit: 'viewToolbarChange' },\r\n            { emit: 'viewUnitsChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' },\r\n            { emit: 'zoomLevelChange' }\r\n        ]);\r\n\r\n        this._idh.setHost(this);\r\n        optionHost.setHost(this);\r\n    }\r\n\r\n    protected _createInstance(element, options) {\r\n\r\n        return new DxDiagram(element, options);\r\n    }\r\n\r\n\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        super.ngOnChanges(changes);\r\n        this.setupChanges('customShapes', changes);\r\n    }\r\n\r\n    setupChanges(prop: string, changes: SimpleChanges) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    }\r\n\r\n    ngDoCheck() {\r\n        this._idh.doCheck('customShapes');\r\n        this._watcherHelper.checkWatchers();\r\n        super.ngDoCheck();\r\n        super.clearChangedOptions();\r\n    }\r\n\r\n    _setOption(name: string, value: any) {\r\n        let isSetup = this._idh.setupSingle(name, value);\r\n        let isChanged = this._idh.getChanges(name, value) !== null;\r\n\r\n        if (isSetup || isChanged) {\r\n            super._setOption(name, value);\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    DxoContextMenuModule,\r\n    DxiCommandModule,\r\n    DxiItemModule,\r\n    DxoContextToolboxModule,\r\n    DxiCustomShapeModule,\r\n    DxiConnectionPointModule,\r\n    DxoDefaultItemPropertiesModule,\r\n    DxoEdgesModule,\r\n    DxoExportModule,\r\n    DxoGridSizeModule,\r\n    DxoHistoryToolbarModule,\r\n    DxoMainToolbarModule,\r\n    DxoNodesModule,\r\n    DxoAutoLayoutModule,\r\n    DxoPageSizeModule,\r\n    DxoPropertiesPanelModule,\r\n    DxiTabModule,\r\n    DxiGroupModule,\r\n    DxoToolboxModule,\r\n    DxoViewToolbarModule,\r\n    DxoZoomLevelModule,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    BrowserTransferStateModule\r\n  ],\r\n  declarations: [\r\n    DxDiagramComponent\r\n  ],\r\n  exports: [\r\n    DxDiagramComponent,\r\n    DxoContextMenuModule,\r\n    DxiCommandModule,\r\n    DxiItemModule,\r\n    DxoContextToolboxModule,\r\n    DxiCustomShapeModule,\r\n    DxiConnectionPointModule,\r\n    DxoDefaultItemPropertiesModule,\r\n    DxoEdgesModule,\r\n    DxoExportModule,\r\n    DxoGridSizeModule,\r\n    DxoHistoryToolbarModule,\r\n    DxoMainToolbarModule,\r\n    DxoNodesModule,\r\n    DxoAutoLayoutModule,\r\n    DxoPageSizeModule,\r\n    DxoPropertiesPanelModule,\r\n    DxiTabModule,\r\n    DxiGroupModule,\r\n    DxoToolboxModule,\r\n    DxoViewToolbarModule,\r\n    DxoZoomLevelModule,\r\n    DxTemplateModule\r\n  ]\r\n})\r\nexport class DxDiagramModule { }\r\n"]}