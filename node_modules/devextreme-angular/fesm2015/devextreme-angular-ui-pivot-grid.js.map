{"version":3,"file":"devextreme-angular-ui-pivot-grid.js","sources":["ng://devextreme-angular/ui/pivot-grid/index.ts","ng://devextreme-angular/ui/pivot-grid/devextreme-angular-ui-pivot-grid.ts"],"sourcesContent":["/*!\n * devextreme-angular\n * Version: 20.1.6\n * Build date: Fri Jul 17 2020\n *\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/* tslint:disable:max-line-length */\r\n\r\n\r\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\r\nimport { TransferState } from '@angular/platform-browser';\r\n\r\nimport {\r\n    Component,\r\n    NgModule,\r\n    ElementRef,\r\n    NgZone,\r\n    PLATFORM_ID,\r\n    Inject,\r\n\r\n    Input,\r\n    Output,\r\n    OnDestroy,\r\n    EventEmitter,\r\n    OnChanges,\r\n    DoCheck,\r\n    SimpleChanges\r\n} from '@angular/core';\r\n\r\n\r\nimport DevExpress from 'devextreme/bundles/dx.all';\r\n\r\nimport DxPivotGrid from 'devextreme/ui/pivot_grid';\r\n\r\n\r\nimport {\r\n    DxComponent,\r\n    DxTemplateHost,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    NestedOptionHost,\r\n    IterableDifferHelper,\r\n    WatcherHelper\r\n} from 'devextreme-angular/core';\r\n\r\nimport { DxoDataSourceModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiFieldModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoFormatModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoHeaderFilterModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoStoreModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoExportModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoFieldChooserModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoTextsModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoFieldPanelModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoLoadPanelModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoScrollingModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoStateStoringModule } from 'devextreme-angular/ui/nested';\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * The PivotGrid is a widget that allows you to display and analyze multi-dimensional data from a local storage or an OLAP cube.\r\n */\r\n@Component({\r\n    selector: 'dx-pivot-grid',\r\n    template: '',\r\n    providers: [\r\n        DxTemplateHost,\r\n        WatcherHelper,\r\n        NestedOptionHost,\r\n        IterableDifferHelper\r\n    ]\r\n})\r\nexport class DxPivotGridComponent extends DxComponent implements OnDestroy, OnChanges, DoCheck {\r\n    instance: DxPivotGrid;\r\n\r\n    /**\r\n     * Allows an end-user to expand/collapse all header items within a header level.\r\n     */\r\n    @Input()\r\n    get allowExpandAll(): boolean {\r\n        return this._getOption('allowExpandAll');\r\n    }\r\n    set allowExpandAll(value: boolean) {\r\n        this._setOption('allowExpandAll', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Allows a user to filter fields by selecting or deselecting values in the popup menu.\r\n     */\r\n    @Input()\r\n    get allowFiltering(): boolean {\r\n        return this._getOption('allowFiltering');\r\n    }\r\n    set allowFiltering(value: boolean) {\r\n        this._setOption('allowFiltering', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Allows an end-user to change sorting options.\r\n     */\r\n    @Input()\r\n    get allowSorting(): boolean {\r\n        return this._getOption('allowSorting');\r\n    }\r\n    set allowSorting(value: boolean) {\r\n        this._setOption('allowSorting', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Allows an end-user to sort columns by summary values.\r\n     */\r\n    @Input()\r\n    get allowSortingBySummary(): boolean {\r\n        return this._getOption('allowSortingBySummary');\r\n    }\r\n    set allowSortingBySummary(value: boolean) {\r\n        this._setOption('allowSortingBySummary', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the area to which data field headers must belong.\r\n     */\r\n    @Input()\r\n    get dataFieldArea(): string {\r\n        return this._getOption('dataFieldArea');\r\n    }\r\n    set dataFieldArea(value: string) {\r\n        this._setOption('dataFieldArea', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Binds the widget to data.\r\n     */\r\n    @Input()\r\n    get dataSource(): DevExpress.data.PivotGridDataSource | DevExpress.data.PivotGridDataSourceOptions | Array<any> {\r\n        return this._getOption('dataSource');\r\n    }\r\n    set dataSource(value: DevExpress.data.PivotGridDataSource | DevExpress.data.PivotGridDataSourceOptions | Array<any>) {\r\n        this._setOption('dataSource', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget responds to user interaction.\r\n     */\r\n    @Input()\r\n    get disabled(): boolean {\r\n        return this._getOption('disabled');\r\n    }\r\n    set disabled(value: boolean) {\r\n        this._setOption('disabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the attributes to be attached to the widget's root element.\r\n     */\r\n    @Input()\r\n    get elementAttr(): any {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value: any) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures client-side exporting.\r\n     */\r\n    @Input()\r\n    get export(): { enabled?: boolean, fileName?: string, ignoreExcelErrors?: boolean, proxyUrl?: string } {\r\n        return this._getOption('export');\r\n    }\r\n    set export(value: { enabled?: boolean, fileName?: string, ignoreExcelErrors?: boolean, proxyUrl?: string }) {\r\n        this._setOption('export', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * The Field Chooser configuration options.\r\n     */\r\n    @Input()\r\n    get fieldChooser(): { allowSearch?: boolean, applyChangesMode?: string, enabled?: boolean, height?: number, layout?: number | string, searchTimeout?: number, texts?: { allFields?: string, columnFields?: string, dataFields?: string, filterFields?: string, rowFields?: string }, title?: string, width?: number } {\r\n        return this._getOption('fieldChooser');\r\n    }\r\n    set fieldChooser(value: { allowSearch?: boolean, applyChangesMode?: string, enabled?: boolean, height?: number, layout?: number | string, searchTimeout?: number, texts?: { allFields?: string, columnFields?: string, dataFields?: string, filterFields?: string, rowFields?: string }, title?: string, width?: number }) {\r\n        this._setOption('fieldChooser', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the field panel.\r\n     */\r\n    @Input()\r\n    get fieldPanel(): { allowFieldDragging?: boolean, showColumnFields?: boolean, showDataFields?: boolean, showFilterFields?: boolean, showRowFields?: boolean, texts?: { columnFieldArea?: string, dataFieldArea?: string, filterFieldArea?: string, rowFieldArea?: string }, visible?: boolean } {\r\n        return this._getOption('fieldPanel');\r\n    }\r\n    set fieldPanel(value: { allowFieldDragging?: boolean, showColumnFields?: boolean, showDataFields?: boolean, showFilterFields?: boolean, showRowFields?: boolean, texts?: { columnFieldArea?: string, dataFieldArea?: string, filterFieldArea?: string, rowFieldArea?: string }, visible?: boolean }) {\r\n        this._setOption('fieldPanel', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the header filter feature.\r\n     */\r\n    @Input()\r\n    get headerFilter(): { allowSearch?: boolean, height?: number, searchTimeout?: number, showRelevantValues?: boolean, texts?: { cancel?: string, emptyValue?: string, ok?: string }, width?: number } {\r\n        return this._getOption('headerFilter');\r\n    }\r\n    set headerFilter(value: { allowSearch?: boolean, height?: number, searchTimeout?: number, showRelevantValues?: boolean, texts?: { cancel?: string, emptyValue?: string, ok?: string }, width?: number }) {\r\n        this._setOption('headerFilter', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's height.\r\n     */\r\n    @Input()\r\n    get height(): number | Function | string {\r\n        return this._getOption('height');\r\n    }\r\n    set height(value: number | Function | string) {\r\n        this._setOption('height', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether or not to hide rows and columns with no data.\r\n     */\r\n    @Input()\r\n    get hideEmptySummaryCells(): boolean {\r\n        return this._getOption('hideEmptySummaryCells');\r\n    }\r\n    set hideEmptySummaryCells(value: boolean) {\r\n        this._setOption('hideEmptySummaryCells', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies text for a hint that appears when a user pauses on the widget.\r\n     */\r\n    @Input()\r\n    get hint(): string {\r\n        return this._getOption('hint');\r\n    }\r\n    set hint(value: string) {\r\n        this._setOption('hint', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies options configuring the load panel.\r\n     */\r\n    @Input()\r\n    get loadPanel(): { enabled?: boolean, height?: number, indicatorSrc?: string, showIndicator?: boolean, showPane?: boolean, text?: string, width?: number } {\r\n        return this._getOption('loadPanel');\r\n    }\r\n    set loadPanel(value: { enabled?: boolean, height?: number, indicatorSrc?: string, showIndicator?: boolean, showPane?: boolean, text?: string, width?: number }) {\r\n        this._setOption('loadPanel', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the layout of items in the row header.\r\n     */\r\n    @Input()\r\n    get rowHeaderLayout(): string {\r\n        return this._getOption('rowHeaderLayout');\r\n    }\r\n    set rowHeaderLayout(value: string) {\r\n        this._setOption('rowHeaderLayout', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Switches the widget to a right-to-left representation.\r\n     */\r\n    @Input()\r\n    get rtlEnabled(): boolean {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value: boolean) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * A configuration object specifying scrolling options.\r\n     */\r\n    @Input()\r\n    get scrolling(): { mode?: string, useNative?: boolean | string } {\r\n        return this._getOption('scrolling');\r\n    }\r\n    set scrolling(value: { mode?: string, useNative?: boolean | string }) {\r\n        this._setOption('scrolling', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the outer borders of the grid are visible or not.\r\n     */\r\n    @Input()\r\n    get showBorders(): boolean {\r\n        return this._getOption('showBorders');\r\n    }\r\n    set showBorders(value: boolean) {\r\n        this._setOption('showBorders', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether to display the Grand Total column.\r\n     */\r\n    @Input()\r\n    get showColumnGrandTotals(): boolean {\r\n        return this._getOption('showColumnGrandTotals');\r\n    }\r\n    set showColumnGrandTotals(value: boolean) {\r\n        this._setOption('showColumnGrandTotals', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether to display the Total columns.\r\n     */\r\n    @Input()\r\n    get showColumnTotals(): boolean {\r\n        return this._getOption('showColumnTotals');\r\n    }\r\n    set showColumnTotals(value: boolean) {\r\n        this._setOption('showColumnTotals', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether to display the Grand Total row.\r\n     */\r\n    @Input()\r\n    get showRowGrandTotals(): boolean {\r\n        return this._getOption('showRowGrandTotals');\r\n    }\r\n    set showRowGrandTotals(value: boolean) {\r\n        this._setOption('showRowGrandTotals', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether to display the Total rows. Applies only if rowHeaderLayout is \"standard\".\r\n     */\r\n    @Input()\r\n    get showRowTotals(): boolean {\r\n        return this._getOption('showRowTotals');\r\n    }\r\n    set showRowTotals(value: boolean) {\r\n        this._setOption('showRowTotals', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies where to show the total rows or columns. Applies only if rowHeaderLayout is \"standard\".\r\n     */\r\n    @Input()\r\n    get showTotalsPrior(): string {\r\n        return this._getOption('showTotalsPrior');\r\n    }\r\n    set showTotalsPrior(value: string) {\r\n        this._setOption('showTotalsPrior', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * A configuration object specifying options related to state storing.\r\n     */\r\n    @Input()\r\n    get stateStoring(): { customLoad?: Function, customSave?: Function, enabled?: boolean, savingTimeout?: number, storageKey?: string, type?: string } {\r\n        return this._getOption('stateStoring');\r\n    }\r\n    set stateStoring(value: { customLoad?: Function, customSave?: Function, enabled?: boolean, savingTimeout?: number, storageKey?: string, type?: string }) {\r\n        this._setOption('stateStoring', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the number of the element when the Tab key is used for navigating.\r\n     */\r\n    @Input()\r\n    get tabIndex(): number {\r\n        return this._getOption('tabIndex');\r\n    }\r\n    set tabIndex(value: number) {\r\n        this._setOption('tabIndex', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Strings that can be changed or localized in the PivotGrid widget.\r\n     */\r\n    @Input()\r\n    get texts(): { collapseAll?: string, dataNotAvailable?: string, expandAll?: string, exportToExcel?: string, grandTotal?: string, noData?: string, removeAllSorting?: string, showFieldChooser?: string, sortColumnBySummary?: string, sortRowBySummary?: string, total?: string } {\r\n        return this._getOption('texts');\r\n    }\r\n    set texts(value: { collapseAll?: string, dataNotAvailable?: string, expandAll?: string, exportToExcel?: string, grandTotal?: string, noData?: string, removeAllSorting?: string, showFieldChooser?: string, sortColumnBySummary?: string, sortRowBySummary?: string, total?: string }) {\r\n        this._setOption('texts', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget is visible.\r\n     */\r\n    @Input()\r\n    get visible(): boolean {\r\n        return this._getOption('visible');\r\n    }\r\n    set visible(value: boolean) {\r\n        this._setOption('visible', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's width.\r\n     */\r\n    @Input()\r\n    get width(): number | Function | string {\r\n        return this._getOption('width');\r\n    }\r\n    set width(value: number | Function | string) {\r\n        this._setOption('width', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether long text in header items should be wrapped.\r\n     */\r\n    @Input()\r\n    get wordWrapEnabled(): boolean {\r\n        return this._getOption('wordWrapEnabled');\r\n    }\r\n    set wordWrapEnabled(value: boolean) {\r\n        this._setOption('wordWrapEnabled', value);\r\n    }\r\n\r\n    /**\r\n     * A function that is executed when a pivot grid cell is clicked or tapped.\r\n     */\r\n    @Output() onCellClick: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after a pivot grid cell is created.\r\n     */\r\n    @Output() onCellPrepared: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when the widget's content is ready and each time the content is changed.\r\n     */\r\n    @Output() onContentReady: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before the context menu is rendered.\r\n     */\r\n    @Output() onContextMenuPreparing: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before the widget is disposed of.\r\n     */\r\n    @Output() onDisposing: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after data is exported.\r\n     */\r\n    @Output() onExported: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before data is exported.\r\n     */\r\n    @Output() onExporting: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before a file with exported data is saved to the user's local storage.\r\n     */\r\n    @Output() onFileSaving: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function used in JavaScript frameworks to save the widget instance.\r\n     */\r\n    @Output() onInitialized: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after a widget option is changed.\r\n     */\r\n    @Output() onOptionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() allowExpandAllChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() allowFilteringChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() allowSortingChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() allowSortingBySummaryChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() dataFieldAreaChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() dataSourceChange: EventEmitter<DevExpress.data.PivotGridDataSource | DevExpress.data.PivotGridDataSourceOptions | Array<any>>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() disabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() elementAttrChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() exportChange: EventEmitter<{ enabled?: boolean, fileName?: string, ignoreExcelErrors?: boolean, proxyUrl?: string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() fieldChooserChange: EventEmitter<{ allowSearch?: boolean, applyChangesMode?: string, enabled?: boolean, height?: number, layout?: number | string, searchTimeout?: number, texts?: { allFields?: string, columnFields?: string, dataFields?: string, filterFields?: string, rowFields?: string }, title?: string, width?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() fieldPanelChange: EventEmitter<{ allowFieldDragging?: boolean, showColumnFields?: boolean, showDataFields?: boolean, showFilterFields?: boolean, showRowFields?: boolean, texts?: { columnFieldArea?: string, dataFieldArea?: string, filterFieldArea?: string, rowFieldArea?: string }, visible?: boolean }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() headerFilterChange: EventEmitter<{ allowSearch?: boolean, height?: number, searchTimeout?: number, showRelevantValues?: boolean, texts?: { cancel?: string, emptyValue?: string, ok?: string }, width?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() heightChange: EventEmitter<number | Function | string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() hideEmptySummaryCellsChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() hintChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() loadPanelChange: EventEmitter<{ enabled?: boolean, height?: number, indicatorSrc?: string, showIndicator?: boolean, showPane?: boolean, text?: string, width?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() rowHeaderLayoutChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() rtlEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() scrollingChange: EventEmitter<{ mode?: string, useNative?: boolean | string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() showBordersChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() showColumnGrandTotalsChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() showColumnTotalsChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() showRowGrandTotalsChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() showRowTotalsChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() showTotalsPriorChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() stateStoringChange: EventEmitter<{ customLoad?: Function, customSave?: Function, enabled?: boolean, savingTimeout?: number, storageKey?: string, type?: string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() tabIndexChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() textsChange: EventEmitter<{ collapseAll?: string, dataNotAvailable?: string, expandAll?: string, exportToExcel?: string, grandTotal?: string, noData?: string, removeAllSorting?: string, showFieldChooser?: string, sortColumnBySummary?: string, sortRowBySummary?: string, total?: string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() visibleChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() widthChange: EventEmitter<number | Function | string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() wordWrapEnabledChange: EventEmitter<boolean>;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost,\r\n            private _watcherHelper: WatcherHelper,\r\n            private _idh: IterableDifferHelper,\r\n            optionHost: NestedOptionHost,\r\n            transferState: TransferState,\r\n            @Inject(PLATFORM_ID) platformId: any) {\r\n\r\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\r\n\r\n        this._createEventEmitters([\r\n            { subscribe: 'cellClick', emit: 'onCellClick' },\r\n            { subscribe: 'cellPrepared', emit: 'onCellPrepared' },\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'contextMenuPreparing', emit: 'onContextMenuPreparing' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'exported', emit: 'onExported' },\r\n            { subscribe: 'exporting', emit: 'onExporting' },\r\n            { subscribe: 'fileSaving', emit: 'onFileSaving' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { emit: 'allowExpandAllChange' },\r\n            { emit: 'allowFilteringChange' },\r\n            { emit: 'allowSortingChange' },\r\n            { emit: 'allowSortingBySummaryChange' },\r\n            { emit: 'dataFieldAreaChange' },\r\n            { emit: 'dataSourceChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'exportChange' },\r\n            { emit: 'fieldChooserChange' },\r\n            { emit: 'fieldPanelChange' },\r\n            { emit: 'headerFilterChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'hideEmptySummaryCellsChange' },\r\n            { emit: 'hintChange' },\r\n            { emit: 'loadPanelChange' },\r\n            { emit: 'rowHeaderLayoutChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'scrollingChange' },\r\n            { emit: 'showBordersChange' },\r\n            { emit: 'showColumnGrandTotalsChange' },\r\n            { emit: 'showColumnTotalsChange' },\r\n            { emit: 'showRowGrandTotalsChange' },\r\n            { emit: 'showRowTotalsChange' },\r\n            { emit: 'showTotalsPriorChange' },\r\n            { emit: 'stateStoringChange' },\r\n            { emit: 'tabIndexChange' },\r\n            { emit: 'textsChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' },\r\n            { emit: 'wordWrapEnabledChange' }\r\n        ]);\r\n\r\n        this._idh.setHost(this);\r\n        optionHost.setHost(this);\r\n    }\r\n\r\n    protected _createInstance(element, options) {\r\n\r\n        return new DxPivotGrid(element, options);\r\n    }\r\n\r\n\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        super.ngOnChanges(changes);\r\n        this.setupChanges('dataSource', changes);\r\n    }\r\n\r\n    setupChanges(prop: string, changes: SimpleChanges) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    }\r\n\r\n    ngDoCheck() {\r\n        this._idh.doCheck('dataSource');\r\n        this._watcherHelper.checkWatchers();\r\n        super.ngDoCheck();\r\n        super.clearChangedOptions();\r\n    }\r\n\r\n    _setOption(name: string, value: any) {\r\n        let isSetup = this._idh.setupSingle(name, value);\r\n        let isChanged = this._idh.getChanges(name, value) !== null;\r\n\r\n        if (isSetup || isChanged) {\r\n            super._setOption(name, value);\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    DxoDataSourceModule,\r\n    DxiFieldModule,\r\n    DxoFormatModule,\r\n    DxoHeaderFilterModule,\r\n    DxoStoreModule,\r\n    DxoExportModule,\r\n    DxoFieldChooserModule,\r\n    DxoTextsModule,\r\n    DxoFieldPanelModule,\r\n    DxoLoadPanelModule,\r\n    DxoScrollingModule,\r\n    DxoStateStoringModule,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    BrowserTransferStateModule\r\n  ],\r\n  declarations: [\r\n    DxPivotGridComponent\r\n  ],\r\n  exports: [\r\n    DxPivotGridComponent,\r\n    DxoDataSourceModule,\r\n    DxiFieldModule,\r\n    DxoFormatModule,\r\n    DxoHeaderFilterModule,\r\n    DxoStoreModule,\r\n    DxoExportModule,\r\n    DxoFieldChooserModule,\r\n    DxoTextsModule,\r\n    DxoFieldPanelModule,\r\n    DxoLoadPanelModule,\r\n    DxoScrollingModule,\r\n    DxoStateStoringModule,\r\n    DxTemplateModule\r\n  ]\r\n})\r\nexport class DxPivotGridModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["tslib_1.__decorate","tslib_1.__param"],"mappings":"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"}