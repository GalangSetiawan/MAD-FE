{"version":3,"file":"devextreme-angular-ui-diagram.js","sources":["ng://devextreme-angular/ui/diagram/index.ts","ng://devextreme-angular/ui/diagram/devextreme-angular-ui-diagram.ts"],"sourcesContent":["/*!\n * devextreme-angular\n * Version: 20.1.6\n * Build date: Fri Jul 17 2020\n *\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/* tslint:disable:max-line-length */\r\n\r\n\r\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\r\nimport { TransferState } from '@angular/platform-browser';\r\n\r\nimport {\r\n    Component,\r\n    NgModule,\r\n    ElementRef,\r\n    NgZone,\r\n    PLATFORM_ID,\r\n    Inject,\r\n\r\n    Input,\r\n    Output,\r\n    OnDestroy,\r\n    EventEmitter,\r\n    OnChanges,\r\n    DoCheck,\r\n    SimpleChanges,\r\n    ContentChildren,\r\n    QueryList\r\n} from '@angular/core';\r\n\r\n\r\nimport DevExpress from 'devextreme/bundles/dx.all';\r\n\r\nimport DxDiagram from 'devextreme/ui/diagram';\r\n\r\n\r\nimport {\r\n    DxComponent,\r\n    DxTemplateHost,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    NestedOptionHost,\r\n    IterableDifferHelper,\r\n    WatcherHelper\r\n} from 'devextreme-angular/core';\r\n\r\nimport { DxoContextMenuModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiCommandModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiItemModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoContextToolboxModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiCustomShapeModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiConnectionPointModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoDefaultItemPropertiesModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoEdgesModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoExportModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoGridSizeModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoHistoryToolbarModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoMainToolbarModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoNodesModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoAutoLayoutModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoPageSizeModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoPropertiesPanelModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiTabModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiGroupModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoToolboxModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoViewToolbarModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoZoomLevelModule } from 'devextreme-angular/ui/nested';\r\n\r\nimport { DxiCustomShapeComponent } from 'devextreme-angular/ui/nested';\r\n\r\n\r\n\r\n\r\n/**\r\n * The Diagram widget provides a visual interface to help you design new and modify existing diagrams.\r\n */\r\n@Component({\r\n    selector: 'dx-diagram',\r\n    template: '',\r\n    providers: [\r\n        DxTemplateHost,\r\n        WatcherHelper,\r\n        NestedOptionHost,\r\n        IterableDifferHelper\r\n    ]\r\n})\r\nexport class DxDiagramComponent extends DxComponent implements OnDestroy, OnChanges, DoCheck {\r\n    instance: DxDiagram;\r\n\r\n    /**\r\n     * Specifies how the Diagram widget automatically zooms the work area.\r\n     */\r\n    @Input()\r\n    get autoZoomMode(): string {\r\n        return this._getOption('autoZoomMode');\r\n    }\r\n    set autoZoomMode(value: string) {\r\n        this._setOption('autoZoomMode', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the context menu's settings.\r\n     */\r\n    @Input()\r\n    get contextMenu(): { commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>, enabled?: boolean } {\r\n        return this._getOption('contextMenu');\r\n    }\r\n    set contextMenu(value: { commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>, enabled?: boolean }) {\r\n        this._setOption('contextMenu', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the context toolbox's settings.\r\n     */\r\n    @Input()\r\n    get contextToolbox(): { category?: string, displayMode?: string, enabled?: boolean, shapes?: Array<string> } {\r\n        return this._getOption('contextToolbox');\r\n    }\r\n    set contextToolbox(value: { category?: string, displayMode?: string, enabled?: boolean, shapes?: Array<string> }) {\r\n        this._setOption('contextToolbox', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Provide access to an array of custom shapes.\r\n     */\r\n    @Input()\r\n    get customShapes(): Array<any | { allowEditImage?: boolean, allowEditText?: boolean, allowResize?: boolean, backgroundImageHeight?: number, backgroundImageLeft?: number, backgroundImageToolboxUrl?: string, backgroundImageTop?: number, backgroundImageUrl?: string, backgroundImageWidth?: number, baseType?: string, category?: string, connectionPoints?: Array<any | { x?: number, y?: number }>, defaultHeight?: number, defaultImageUrl?: string, defaultText?: string, defaultWidth?: number, imageHeight?: number, imageLeft?: number, imageTop?: number, imageWidth?: number, maxHeight?: number, maxWidth?: number, minHeight?: number, minWidth?: number, template?: any, templateHeight?: number, templateLeft?: number, templateTop?: number, templateWidth?: number, textHeight?: number, textLeft?: number, textTop?: number, textWidth?: number, title?: string, type?: string }> {\r\n        return this._getOption('customShapes');\r\n    }\r\n    set customShapes(value: Array<any | { allowEditImage?: boolean, allowEditText?: boolean, allowResize?: boolean, backgroundImageHeight?: number, backgroundImageLeft?: number, backgroundImageToolboxUrl?: string, backgroundImageTop?: number, backgroundImageUrl?: string, backgroundImageWidth?: number, baseType?: string, category?: string, connectionPoints?: Array<any | { x?: number, y?: number }>, defaultHeight?: number, defaultImageUrl?: string, defaultText?: string, defaultWidth?: number, imageHeight?: number, imageLeft?: number, imageTop?: number, imageWidth?: number, maxHeight?: number, maxWidth?: number, minHeight?: number, minWidth?: number, template?: any, templateHeight?: number, templateLeft?: number, templateTop?: number, templateWidth?: number, textHeight?: number, textLeft?: number, textTop?: number, textWidth?: number, title?: string, type?: string }>) {\r\n        this._setOption('customShapes', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies a custom template for shapes.\r\n     */\r\n    @Input()\r\n    get customShapeTemplate(): any {\r\n        return this._getOption('customShapeTemplate');\r\n    }\r\n    set customShapeTemplate(value: any) {\r\n        this._setOption('customShapeTemplate', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures default item properties.\r\n     */\r\n    @Input()\r\n    get defaultItemProperties(): { connectorLineEnd?: string, connectorLineStart?: string, connectorLineType?: string, style?: any, textStyle?: any } {\r\n        return this._getOption('defaultItemProperties');\r\n    }\r\n    set defaultItemProperties(value: { connectorLineEnd?: string, connectorLineStart?: string, connectorLineType?: string, style?: any, textStyle?: any }) {\r\n        this._setOption('defaultItemProperties', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget responds to user interaction.\r\n     */\r\n    @Input()\r\n    get disabled(): boolean {\r\n        return this._getOption('disabled');\r\n    }\r\n    set disabled(value: boolean) {\r\n        this._setOption('disabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Allows you to bind the collection of diagram edges to a data source. For more information, see the Data Binding section.\r\n     */\r\n    @Input()\r\n    get edges(): { dataSource?: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | Array<any>, fromExpr?: Function | string, fromLineEndExpr?: Function | string, fromPointIndexExpr?: Function | string, keyExpr?: Function | string, lineTypeExpr?: Function | string, lockedExpr?: Function | string, pointsExpr?: Function | string, styleExpr?: Function | string, textExpr?: Function | string, textStyleExpr?: Function | string, toExpr?: Function | string, toLineEndExpr?: Function | string, toPointIndexExpr?: Function | string, zIndexExpr?: Function | string } {\r\n        return this._getOption('edges');\r\n    }\r\n    set edges(value: { dataSource?: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | Array<any>, fromExpr?: Function | string, fromLineEndExpr?: Function | string, fromPointIndexExpr?: Function | string, keyExpr?: Function | string, lineTypeExpr?: Function | string, lockedExpr?: Function | string, pointsExpr?: Function | string, styleExpr?: Function | string, textExpr?: Function | string, textStyleExpr?: Function | string, toExpr?: Function | string, toLineEndExpr?: Function | string, toPointIndexExpr?: Function | string, zIndexExpr?: Function | string }) {\r\n        this._setOption('edges', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the attributes to be attached to the widget's root element.\r\n     */\r\n    @Input()\r\n    get elementAttr(): any {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value: any) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures export settings.\r\n     */\r\n    @Input()\r\n    get export(): { fileName?: string, proxyUrl?: string } {\r\n        return this._getOption('export');\r\n    }\r\n    set export(value: { fileName?: string, proxyUrl?: string }) {\r\n        this._setOption('export', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether or not to display the widget in full-screen mode.\r\n     */\r\n    @Input()\r\n    get fullScreen(): boolean {\r\n        return this._getOption('fullScreen');\r\n    }\r\n    set fullScreen(value: boolean) {\r\n        this._setOption('fullScreen', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the grid pitch.\r\n     */\r\n    @Input()\r\n    get gridSize(): number | { items?: Array<number>, value?: number } {\r\n        return this._getOption('gridSize');\r\n    }\r\n    set gridSize(value: number | { items?: Array<number>, value?: number }) {\r\n        this._setOption('gridSize', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Indicates whether diagram content has been changed.\r\n     */\r\n    @Input()\r\n    get hasChanges(): boolean {\r\n        return this._getOption('hasChanges');\r\n    }\r\n    set hasChanges(value: boolean) {\r\n        this._setOption('hasChanges', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's height.\r\n     */\r\n    @Input()\r\n    get height(): number | Function | string {\r\n        return this._getOption('height');\r\n    }\r\n    set height(value: number | Function | string) {\r\n        this._setOption('height', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the history toolbar's settings.\r\n     */\r\n    @Input()\r\n    get historyToolbar(): { commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>, visible?: boolean } {\r\n        return this._getOption('historyToolbar');\r\n    }\r\n    set historyToolbar(value: { commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>, visible?: boolean }) {\r\n        this._setOption('historyToolbar', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the main toolbar settings.\r\n     */\r\n    @Input()\r\n    get mainToolbar(): { commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>, visible?: boolean } {\r\n        return this._getOption('mainToolbar');\r\n    }\r\n    set mainToolbar(value: { commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>, visible?: boolean }) {\r\n        this._setOption('mainToolbar', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Allows you to bind the collection of diagram nodes to a data source. For more information, see the Data Binding section.\r\n     */\r\n    @Input()\r\n    get nodes(): { autoLayout?: string | { orientation?: string, type?: string }, containerChildrenExpr?: Function | string, containerKeyExpr?: Function | string, dataSource?: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | Array<any>, heightExpr?: Function | string, imageUrlExpr?: Function | string, itemsExpr?: Function | string, keyExpr?: Function | string, leftExpr?: Function | string, lockedExpr?: Function | string, parentKeyExpr?: Function | string, styleExpr?: Function | string, textExpr?: Function | string, textStyleExpr?: Function | string, topExpr?: Function | string, typeExpr?: Function | string, widthExpr?: Function | string, zIndexExpr?: Function | string } {\r\n        return this._getOption('nodes');\r\n    }\r\n    set nodes(value: { autoLayout?: string | { orientation?: string, type?: string }, containerChildrenExpr?: Function | string, containerKeyExpr?: Function | string, dataSource?: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | Array<any>, heightExpr?: Function | string, imageUrlExpr?: Function | string, itemsExpr?: Function | string, keyExpr?: Function | string, leftExpr?: Function | string, lockedExpr?: Function | string, parentKeyExpr?: Function | string, styleExpr?: Function | string, textExpr?: Function | string, textStyleExpr?: Function | string, topExpr?: Function | string, typeExpr?: Function | string, widthExpr?: Function | string, zIndexExpr?: Function | string }) {\r\n        this._setOption('nodes', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the color of a diagram page.\r\n     */\r\n    @Input()\r\n    get pageColor(): string {\r\n        return this._getOption('pageColor');\r\n    }\r\n    set pageColor(value: string) {\r\n        this._setOption('pageColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the page orientation.\r\n     */\r\n    @Input()\r\n    get pageOrientation(): string {\r\n        return this._getOption('pageOrientation');\r\n    }\r\n    set pageOrientation(value: string) {\r\n        this._setOption('pageOrientation', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies a size of pages.\r\n     */\r\n    @Input()\r\n    get pageSize(): { height?: number, items?: Array<any | { height?: number, text?: string, width?: number }>, width?: number } {\r\n        return this._getOption('pageSize');\r\n    }\r\n    set pageSize(value: { height?: number, items?: Array<any | { height?: number, text?: string, width?: number }>, width?: number }) {\r\n        this._setOption('pageSize', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the Properties panel settings.\r\n     */\r\n    @Input()\r\n    get propertiesPanel(): { tabs?: Array<any | { commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>, groups?: Array<any | { commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>, title?: string }>, title?: string }>, visibility?: string } {\r\n        return this._getOption('propertiesPanel');\r\n    }\r\n    set propertiesPanel(value: { tabs?: Array<any | { commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>, groups?: Array<any | { commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>, title?: string }>, title?: string }>, visibility?: string }) {\r\n        this._setOption('propertiesPanel', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the diagram is read-only.\r\n     */\r\n    @Input()\r\n    get readOnly(): boolean {\r\n        return this._getOption('readOnly');\r\n    }\r\n    set readOnly(value: boolean) {\r\n        this._setOption('readOnly', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Switches the widget to a right-to-left representation.\r\n     */\r\n    @Input()\r\n    get rtlEnabled(): boolean {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value: boolean) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether grid lines are visible.\r\n     */\r\n    @Input()\r\n    get showGrid(): boolean {\r\n        return this._getOption('showGrid');\r\n    }\r\n    set showGrid(value: boolean) {\r\n        this._setOption('showGrid', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Switch the Diagram widget to simple view mode.\r\n     */\r\n    @Input()\r\n    get simpleView(): boolean {\r\n        return this._getOption('simpleView');\r\n    }\r\n    set simpleView(value: boolean) {\r\n        this._setOption('simpleView', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether diagram elements should snap to grid lines.\r\n     */\r\n    @Input()\r\n    get snapToGrid(): boolean {\r\n        return this._getOption('snapToGrid');\r\n    }\r\n    set snapToGrid(value: boolean) {\r\n        this._setOption('snapToGrid', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the toolbox settings.\r\n     */\r\n    @Input()\r\n    get toolbox(): { groups?: Array<any | string | { category?: string, displayMode?: string, expanded?: boolean, shapes?: Array<string>, title?: string }>, visibility?: string } {\r\n        return this._getOption('toolbox');\r\n    }\r\n    set toolbox(value: { groups?: Array<any | string | { category?: string, displayMode?: string, expanded?: boolean, shapes?: Array<string>, title?: string }>, visibility?: string }) {\r\n        this._setOption('toolbox', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the unit for measurement options (for example, defaultHeight, gridSize, leftExpr).\r\n     */\r\n    @Input()\r\n    get units(): string {\r\n        return this._getOption('units');\r\n    }\r\n    set units(value: string) {\r\n        this._setOption('units', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the view toolbar settings.\r\n     */\r\n    @Input()\r\n    get viewToolbar(): { commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>, visible?: boolean } {\r\n        return this._getOption('viewToolbar');\r\n    }\r\n    set viewToolbar(value: { commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>, visible?: boolean }) {\r\n        this._setOption('viewToolbar', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the measurement unit that is displayed in user interface elements.\r\n     */\r\n    @Input()\r\n    get viewUnits(): string {\r\n        return this._getOption('viewUnits');\r\n    }\r\n    set viewUnits(value: string) {\r\n        this._setOption('viewUnits', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget is visible.\r\n     */\r\n    @Input()\r\n    get visible(): boolean {\r\n        return this._getOption('visible');\r\n    }\r\n    set visible(value: boolean) {\r\n        this._setOption('visible', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's width.\r\n     */\r\n    @Input()\r\n    get width(): number | Function | string {\r\n        return this._getOption('width');\r\n    }\r\n    set width(value: number | Function | string) {\r\n        this._setOption('width', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the zoom level.\r\n     */\r\n    @Input()\r\n    get zoomLevel(): number | { items?: Array<number>, value?: number } {\r\n        return this._getOption('zoomLevel');\r\n    }\r\n    set zoomLevel(value: number | { items?: Array<number>, value?: number }) {\r\n        this._setOption('zoomLevel', value);\r\n    }\r\n\r\n    /**\r\n     * A function that is executed when the widget's content is ready and each time the content is changed.\r\n     */\r\n    @Output() onContentReady: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after a custom command item was clicked and allows you to implement the custom command's logic.\r\n     */\r\n    @Output() onCustomCommand: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before the widget is disposed of.\r\n     */\r\n    @Output() onDisposing: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function used in JavaScript frameworks to save the widget instance.\r\n     */\r\n    @Output() onInitialized: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after a shape or connector is clicked.\r\n     */\r\n    @Output() onItemClick: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after a shape or connector is double-clicked.\r\n     */\r\n    @Output() onItemDblClick: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after a widget option is changed.\r\n     */\r\n    @Output() onOptionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after the selection is changed in the Diagram.\r\n     */\r\n    @Output() onSelectionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() autoZoomModeChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() contextMenuChange: EventEmitter<{ commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>, enabled?: boolean }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() contextToolboxChange: EventEmitter<{ category?: string, displayMode?: string, enabled?: boolean, shapes?: Array<string> }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() customShapesChange: EventEmitter<Array<any | { allowEditImage?: boolean, allowEditText?: boolean, allowResize?: boolean, backgroundImageHeight?: number, backgroundImageLeft?: number, backgroundImageToolboxUrl?: string, backgroundImageTop?: number, backgroundImageUrl?: string, backgroundImageWidth?: number, baseType?: string, category?: string, connectionPoints?: Array<any | { x?: number, y?: number }>, defaultHeight?: number, defaultImageUrl?: string, defaultText?: string, defaultWidth?: number, imageHeight?: number, imageLeft?: number, imageTop?: number, imageWidth?: number, maxHeight?: number, maxWidth?: number, minHeight?: number, minWidth?: number, template?: any, templateHeight?: number, templateLeft?: number, templateTop?: number, templateWidth?: number, textHeight?: number, textLeft?: number, textTop?: number, textWidth?: number, title?: string, type?: string }>>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() customShapeTemplateChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() defaultItemPropertiesChange: EventEmitter<{ connectorLineEnd?: string, connectorLineStart?: string, connectorLineType?: string, style?: any, textStyle?: any }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() disabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() edgesChange: EventEmitter<{ dataSource?: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | Array<any>, fromExpr?: Function | string, fromLineEndExpr?: Function | string, fromPointIndexExpr?: Function | string, keyExpr?: Function | string, lineTypeExpr?: Function | string, lockedExpr?: Function | string, pointsExpr?: Function | string, styleExpr?: Function | string, textExpr?: Function | string, textStyleExpr?: Function | string, toExpr?: Function | string, toLineEndExpr?: Function | string, toPointIndexExpr?: Function | string, zIndexExpr?: Function | string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() elementAttrChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() exportChange: EventEmitter<{ fileName?: string, proxyUrl?: string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() fullScreenChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() gridSizeChange: EventEmitter<number | { items?: Array<number>, value?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() hasChangesChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() heightChange: EventEmitter<number | Function | string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() historyToolbarChange: EventEmitter<{ commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>, visible?: boolean }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() mainToolbarChange: EventEmitter<{ commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>, visible?: boolean }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() nodesChange: EventEmitter<{ autoLayout?: string | { orientation?: string, type?: string }, containerChildrenExpr?: Function | string, containerKeyExpr?: Function | string, dataSource?: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | Array<any>, heightExpr?: Function | string, imageUrlExpr?: Function | string, itemsExpr?: Function | string, keyExpr?: Function | string, leftExpr?: Function | string, lockedExpr?: Function | string, parentKeyExpr?: Function | string, styleExpr?: Function | string, textExpr?: Function | string, textStyleExpr?: Function | string, topExpr?: Function | string, typeExpr?: Function | string, widthExpr?: Function | string, zIndexExpr?: Function | string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() pageColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() pageOrientationChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() pageSizeChange: EventEmitter<{ height?: number, items?: Array<any | { height?: number, text?: string, width?: number }>, width?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() propertiesPanelChange: EventEmitter<{ tabs?: Array<any | { commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>, groups?: Array<any | { commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>, title?: string }>, title?: string }>, visibility?: string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() readOnlyChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() rtlEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() showGridChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() simpleViewChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() snapToGridChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() toolboxChange: EventEmitter<{ groups?: Array<any | string | { category?: string, displayMode?: string, expanded?: boolean, shapes?: Array<string>, title?: string }>, visibility?: string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() unitsChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() viewToolbarChange: EventEmitter<{ commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>, visible?: boolean }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() viewUnitsChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() visibleChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() widthChange: EventEmitter<number | Function | string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() zoomLevelChange: EventEmitter<number | { items?: Array<number>, value?: number }>;\r\n\r\n\r\n\r\n\r\n    @ContentChildren(DxiCustomShapeComponent)\r\n    get customShapesChildren(): QueryList<DxiCustomShapeComponent> {\r\n        return this._getOption('customShapes');\r\n    }\r\n    set customShapesChildren(value) {\r\n        this.setChildren('customShapes', value);\r\n    }\r\n\r\n\r\n\r\n\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost,\r\n            private _watcherHelper: WatcherHelper,\r\n            private _idh: IterableDifferHelper,\r\n            optionHost: NestedOptionHost,\r\n            transferState: TransferState,\r\n            @Inject(PLATFORM_ID) platformId: any) {\r\n\r\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\r\n\r\n        this._createEventEmitters([\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'customCommand', emit: 'onCustomCommand' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'itemClick', emit: 'onItemClick' },\r\n            { subscribe: 'itemDblClick', emit: 'onItemDblClick' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'selectionChanged', emit: 'onSelectionChanged' },\r\n            { emit: 'autoZoomModeChange' },\r\n            { emit: 'contextMenuChange' },\r\n            { emit: 'contextToolboxChange' },\r\n            { emit: 'customShapesChange' },\r\n            { emit: 'customShapeTemplateChange' },\r\n            { emit: 'defaultItemPropertiesChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'edgesChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'exportChange' },\r\n            { emit: 'fullScreenChange' },\r\n            { emit: 'gridSizeChange' },\r\n            { emit: 'hasChangesChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'historyToolbarChange' },\r\n            { emit: 'mainToolbarChange' },\r\n            { emit: 'nodesChange' },\r\n            { emit: 'pageColorChange' },\r\n            { emit: 'pageOrientationChange' },\r\n            { emit: 'pageSizeChange' },\r\n            { emit: 'propertiesPanelChange' },\r\n            { emit: 'readOnlyChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'showGridChange' },\r\n            { emit: 'simpleViewChange' },\r\n            { emit: 'snapToGridChange' },\r\n            { emit: 'toolboxChange' },\r\n            { emit: 'unitsChange' },\r\n            { emit: 'viewToolbarChange' },\r\n            { emit: 'viewUnitsChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' },\r\n            { emit: 'zoomLevelChange' }\r\n        ]);\r\n\r\n        this._idh.setHost(this);\r\n        optionHost.setHost(this);\r\n    }\r\n\r\n    protected _createInstance(element, options) {\r\n\r\n        return new DxDiagram(element, options);\r\n    }\r\n\r\n\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        super.ngOnChanges(changes);\r\n        this.setupChanges('customShapes', changes);\r\n    }\r\n\r\n    setupChanges(prop: string, changes: SimpleChanges) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    }\r\n\r\n    ngDoCheck() {\r\n        this._idh.doCheck('customShapes');\r\n        this._watcherHelper.checkWatchers();\r\n        super.ngDoCheck();\r\n        super.clearChangedOptions();\r\n    }\r\n\r\n    _setOption(name: string, value: any) {\r\n        let isSetup = this._idh.setupSingle(name, value);\r\n        let isChanged = this._idh.getChanges(name, value) !== null;\r\n\r\n        if (isSetup || isChanged) {\r\n            super._setOption(name, value);\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    DxoContextMenuModule,\r\n    DxiCommandModule,\r\n    DxiItemModule,\r\n    DxoContextToolboxModule,\r\n    DxiCustomShapeModule,\r\n    DxiConnectionPointModule,\r\n    DxoDefaultItemPropertiesModule,\r\n    DxoEdgesModule,\r\n    DxoExportModule,\r\n    DxoGridSizeModule,\r\n    DxoHistoryToolbarModule,\r\n    DxoMainToolbarModule,\r\n    DxoNodesModule,\r\n    DxoAutoLayoutModule,\r\n    DxoPageSizeModule,\r\n    DxoPropertiesPanelModule,\r\n    DxiTabModule,\r\n    DxiGroupModule,\r\n    DxoToolboxModule,\r\n    DxoViewToolbarModule,\r\n    DxoZoomLevelModule,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    BrowserTransferStateModule\r\n  ],\r\n  declarations: [\r\n    DxDiagramComponent\r\n  ],\r\n  exports: [\r\n    DxDiagramComponent,\r\n    DxoContextMenuModule,\r\n    DxiCommandModule,\r\n    DxiItemModule,\r\n    DxoContextToolboxModule,\r\n    DxiCustomShapeModule,\r\n    DxiConnectionPointModule,\r\n    DxoDefaultItemPropertiesModule,\r\n    DxoEdgesModule,\r\n    DxoExportModule,\r\n    DxoGridSizeModule,\r\n    DxoHistoryToolbarModule,\r\n    DxoMainToolbarModule,\r\n    DxoNodesModule,\r\n    DxoAutoLayoutModule,\r\n    DxoPageSizeModule,\r\n    DxoPropertiesPanelModule,\r\n    DxiTabModule,\r\n    DxiGroupModule,\r\n    DxoToolboxModule,\r\n    DxoViewToolbarModule,\r\n    DxoZoomLevelModule,\r\n    DxTemplateModule\r\n  ]\r\n})\r\nexport class DxDiagramModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["tslib_1.__decorate","tslib_1.__param"],"mappings":"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"}